webpackJsonp([21],{"/Iam":function(t,s,a){"use strict";var e=function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{attrs:{id:"page-post"}},[a("article",{staticClass:"post detail"},[a("div",{staticClass:"meta"},[a("div",{staticClass:"date"},[t._v(t._s(t.post.create_time))])]),a("h1",{staticClass:"title"},[t._v(t._s(t.post.title))]),a("div",{staticClass:"entry-content"},[t.post.translation?a("blockquote",[a("p",{staticStyle:{"white-space":"nowrap",overflow:"hidden","text-overflow":"ellipsis"}},[t._v("\n        原文作者: "),a("a",{attrs:{href:t.post.translation.social,target:"_blank"}},[t._v(t._s(t.post.translation.author))]),a("br"),t._v("\n        原文地址: "),a("a",{attrs:{href:t.post.translation.from}},[t._v(t._s(t.post.translation.from))]),a("br"),t._v("\n        译文地址: "),a("a",{attrs:{href:t.post_url}},[t._v(t._s(t.post_url))]),a("br"),t._v("\n        本文由 "),a("a",{attrs:{href:this.$config.site_url}},[t._v(t._s(this.$config.site_owner))]),t._v(" 翻译，转载请保留此声明。"),a("br"),t._v("\n        著作权属于原作者，本译文仅用于学习、研究和交流目的，请勿用于商业目的。\n        ")])]):t._e(),t._m(0),a("caniuse",{attrs:{src:"/caniuse/embed.html?feat=form-validation&periods=future_3,future_2,future_1,current,past_1,past_2,past_3,past_4,past_5"}}),t._m(1),t._m(2),a("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"pre-area",attrs:{width:"0",height:"0"}},[t._v("<code class=\"hljs lang-javascript\">%3Cspan%20class%3D%22hljs-keyword%22%3Evar%3C%2Fspan%3E%20element%20%3D%20%3Cspan%20class%3D%22hljs-built_in%22%3Edocument%3C%2Fspan%3E.createElement(%3Cspan%20class%3D%22hljs-string%22%3E'input'%3C%2Fspan%3E)%3B%0Aelement.setAttribute(%3Cspan%20class%3D%22hljs-string%22%3E'type'%3C%2Fspan%3E%2C%3Cspan%20class%3D%22hljs-string%22%3E'email'%3C%2Fspan%3E)%3B%0Aelement.value%20%3D%20%3Cspan%20class%3D%22hljs-string%22%3E'foo%40foo.com'%3C%2Fspan%3E%3B%0A%3Cspan%20class%3D%22hljs-built_in%22%3Econsole%3C%2Fspan%3E.log(element.validity.valid)%3B</code>")]),a("p",[t._v("上面这段代码所做的工作是创建一个离线 input 元素（译者注：原文为 virtual input element，但译者认为 virtual 的说法似乎有些歧义，看看最近两年火爆的 virtual DOM，还敢叫说 createElement 创建出来的活生生的元素是 virtual elment 么？倒是让我想起 offline canvas，是故借用），将它的 type 属性设置为 email 并设置其 value 为某一个值。然后就打印出这个值的有效状态了。可以重写这段代码，封装成函数：")]),a("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"pre-area",attrs:{width:"0",height:"0"}},[t._v("<code class=\"hljs lang-javascript\">%3Cspan%20class%3D%22hljs-keyword%22%3Evar%3C%2Fspan%3E%20elm%3B%0A%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-keyword%22%3Efunction%3C%2Fspan%3E%20%3Cspan%20class%3D%22hljs-title%22%3EisValidEmail%3C%2Fspan%3E(%3Cspan%20class%3D%22hljs-params%22%3Es%3C%2Fspan%3E)%20%3C%2Fspan%3E%7B%0A%20%20%3Cspan%20class%3D%22hljs-keyword%22%3Eif%3C%2Fspan%3E(!elm)%20%7B%0A%20%20%20%20elm%20%3D%20%3Cspan%20class%3D%22hljs-built_in%22%3Edocument%3C%2Fspan%3E.createElement(%3Cspan%20class%3D%22hljs-string%22%3E'input'%3C%2Fspan%3E)%3B%0A%20%20%20%20elm.setAttribute(%3Cspan%20class%3D%22hljs-string%22%3E'type'%3C%2Fspan%3E%2C%20%3Cspan%20class%3D%22hljs-string%22%3E'email'%3C%2Fspan%3E)%3B%0A%20%20%7D%0A%20%20elm.value%20%3D%20s%3B%0A%20%20%3Cspan%20class%3D%22hljs-keyword%22%3Ereturn%3C%2Fspan%3E%20elm.validity.valid%3B%0A%7D%0A%0A%3Cspan%20class%3D%22hljs-built_in%22%3Econsole%3C%2Fspan%3E.log(isValidEmail(%3Cspan%20class%3D%22hljs-string%22%3E'foo'%3C%2Fspan%3E))%3B%0A%3Cspan%20class%3D%22hljs-built_in%22%3Econsole%3C%2Fspan%3E.log(isValidEmail(%3Cspan%20class%3D%22hljs-string%22%3E'goo%40goo.com'%3C%2Fspan%3E))%3B%0A%3Cspan%20class%3D%22hljs-built_in%22%3Econsole%3C%2Fspan%3E.log(isValidEmail(%3Cspan%20class%3D%22hljs-string%22%3E'zoo'%3C%2Fspan%3E))%3B</code>")]),a("p",[t._v("我不太喜欢这段代码中引入了一个全局变量，不过这样可以缓存 DOM 元素，也还不错。如果封装在模块中，就将它保存在本地变量中吧。")]),a("p",[t._v("还是那句话，代码在不支持 HTML 表单验证的浏览器中没法工作。但这确实非常简单，对吧？同样还可以用这种办法验证 URL 或者其他内容。不知亲爱的读者您对此作何评论？")]),t._m(3),t._m(4)],1)]),t.post.prev.title||t.post.next.title?a("nav",{staticClass:"pagination"},[t.post.prev.title?a("nuxt-link",{staticClass:"prev",attrs:{to:"/post/"+t.post.prev.pathname,title:t.post.prev.title}},[t._v("« "+t._s(t.post.prev.title))]):t._e(),t.post.next.title?a("nuxt-link",{staticClass:"next",attrs:{to:"/post/"+t.post.next.pathname,title:t.post.next.title}},[t._v(t._s(t.post.next.title)+" »")]):t._e()],1):t._e(),a("gitalk",{attrs:{tags:t.tags}})],1)};e._withStripped=!0;var i={render:e,staticRenderFns:[function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("我是 "),s("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Forms/Data_form_validation",target:"_blank"}},[this._v("HTML 表单验证")]),this._v("（HTML form validation） 的超级粉丝，因为它取代了我使用了近 20 年的 JavaScript 代码。不幸的是，"),s("a",{attrs:{href:"http://caniuse.com/#feat=form-validation",target:"_blank"}},[this._v("Safari")]),this._v(" 并不支持这个特性（谈到 Web 时，先别跟我提 Apple 和他们的优先级）。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("不过，我确实很喜欢这个主意，将问题交给 HTML 自己解决。实际上，最近有个网站展示了许多类似的例子："),s("a",{attrs:{href:"http://youmightnotneedjs.com/",target:"_blank"}},[this._v("You Might Not Need JavaScript")]),this._v("。如果还没看过，赶紧点开吧。这是一个极好的例子，展示了 HTML 和 CSS 可以如何取代我们使用了多年的 JavaScript 片段。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("基于上面这些，今天早上，我倒产生了另外一些差不多完全相反的想法。可以在纯 JavaScript 表单中使用基于 HTML 的表单验证么？答案是可以（当然，首先浏览器得支持）。假如我们可以使用 "),s("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/API/Document/createElement",target:"_blank"}},[this._v("createElement")]),this._v(" 动态创建 DOM 元素，那么能够在 JavaScript 代码中添加简便的 email 验证么？似乎可以：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("可以在 JSBin 中运行代码看看效果： "),s("a",{attrs:{href:"https://jsbin.com/diqepa/edit?js,console",target:"_blank"}},[this._v("https://jsbin.com/diqepa/edit?js,console")]),this._v("。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("若您喜欢本文, 可以看下我的 "),s("a",{attrs:{href:"http://www.amazon.com/gp/registry/wishlist/2TCL1D08EZEYE/ref=cm_wl_rlist_go_v?",target:"_blank"}},[this._v("Amazon Wishlist")]),this._v(" 帮我实现愿望，或者"),s("a",{attrs:{href:"https://paypal.me/RaymondCamden",target:"_blank"}},[this._v("通过 PayPal 捐款支持我")]),this._v("。还可以"),s("a",{attrs:{href:"https://feedburner.google.com/fb/a/mailverify?uri=RaymondCamdensBlog",target:"_blank"}},[this._v("订阅邮件推送")]),this._v("获取最新信息。")])])}]};s.a=i},R2Oa:function(t,s,a){"use strict";Object.defineProperty(s,"__esModule",{value:!0});var e=a("sYLS"),i=a("/Iam"),n=a("VU/8")(e.a,i.a,!1,null,null,null);n.options.__file="pages/post/using-html-form-validation-in-pure-javascript.vue",s.default=n.exports},sYLS:function(t,s,a){"use strict";var e={title:"[译] HTML 表单验证",description:"[translation]Using HTML Form Validation in Pure JavaScript, HTML 表单验证",keywords:"JavaScript,翻译",pathname:"using-html-form-validation-in-pure-javascript",translation:{author:"@Raymond Camden",social:"https://twitter.com/raymondcamden",from:"https://www.raymondcamden.com/2016/10/19/using-html-form-validation-in-pure-javascript"},create_time:"2016-11-05",prev:{title:"算法学习：选择排序",pathname:"algo-selection-sort"},next:{title:"算法学习：插入排序",pathname:"algo-insertion-sort"}};s.a={head:function(){return{title:e.title,meta:[{name:"keywords",content:e.keywords||""},{name:"description",content:e.description}]}},data:function(){return{post:e,post_url:this.$config.site_url+"/post/"+e.pathname,tags:e.tags}},mounted:function(){this.$fixCode()}}}});
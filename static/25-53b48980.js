webpackJsonp([25],{"XLX/":function(s,a,n){"use strict";var e={title:"[译] 测试驱动开发：使用 Node.js 和 MongoDB 构建 Todo API",description:"测试驱动开发：使用 Node.js 和 MongoDB 构建 Todo API",keywords:"翻译,Node.js,测试,单元测试",pathname:"todo-api-with-unit-test",translation:{author:"Raja Sekar",social:"http://rajasekarm.com/",from:"https://semaphoreci.com/community/tutorials/a-tdd-approach-to-building-a-todo-api-using-node-js-and-mongodb"},create_time:"2016-07-04",prev:{title:"Node.js .sh scripts Manager",pathname:"Node.js-sh-scripts-Manager"},next:{title:"判断资源并行加载完成的三种办法：计数、Promise及 $.Deferred",pathname:"when-are-all-resources-all-loaded"}};a.a={head:function(){return{title:e.title,meta:[{name:"keywords",content:e.keywords||""},{name:"description",content:e.description}]}},data:function(){return{post:e,post_url:this.$config.site_url+"/post/"+e.pathname,tags:e.tags}},mounted:function(){this.$fixCode()}}},ntee:function(s,a,n){"use strict";var e=function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("div",{attrs:{id:"page-post"}},[n("article",{staticClass:"post detail"},[n("div",{staticClass:"meta"},[n("div",{staticClass:"date"},[s._v(s._s(s.post.create_time))])]),n("h1",{staticClass:"title"},[s._v(s._s(s.post.title))]),n("div",{staticClass:"entry-content"},[s.post.translation?n("blockquote",[n("p",{staticStyle:{"white-space":"nowrap",overflow:"hidden","text-overflow":"ellipsis"}},[s._v("\n        原文作者: "),n("a",{attrs:{href:s.post.translation.social,target:"_blank"}},[s._v(s._s(s.post.translation.author))]),n("br"),s._v("\n        原文地址: "),n("a",{attrs:{href:s.post.translation.from}},[s._v(s._s(s.post.translation.from))]),n("br"),s._v("\n        译文地址: "),n("a",{attrs:{href:s.post_url}},[s._v(s._s(s.post_url))]),n("br"),s._v("\n        本文由 "),n("a",{attrs:{href:this.$config.site_url}},[s._v(s._s(this.$config.site_owner))]),s._v(" 翻译，转载请保留此声明。"),n("br"),s._v("\n        著作权属于原作者，本译文仅用于学习、研究和交流目的，请勿用于商业目的。\n        ")])]):s._e(),n("p",[s._v("学习如何使用测试驱动开发的方式，用 Node.js、MongoDB、Mocha 和 Sinon.js 开发 Todo API。")]),n("h2",{attrs:{id:"-"}},[s._v("简介")]),n("p",[s._v("测试是软件开发过程中的一个完整部分，它帮助我们提升软件品质。有很多种测试方法，如手动测试，集成测试，功能测试，负载测试，单元测试等等。在本文中，我们将会遵循测试驱动开发的规则编写代码。")]),n("h3",{attrs:{id:"-"}},[s._v("单元测试是什么？")]),n("p",[s._v("Martin Fowler 将单元测试定义如下：")]),s._m(0),n("p",[s._v("在本教程中，我们将会使用 Node.js 和 MongoDB 构建一个 Todo API。我们首先会给生产代码写单元测试，然后才会真正写生产代码。")]),n("h2",{attrs:{id:"-"}},[s._v("环境")]),s._m(1),n("h2",{attrs:{id:"-"}},[s._v("项目设置")]),n("p",[s._v("在我们真正开发 API 之前，我们必须设置文件夹和端点（end point）。")]),s._m(2),n("p",[s._v("现在来创建端点（endpoints）：")]),n("p",[n("img",{directives:[{name:"lazy",rawName:"v-lazy",value:"https://p.ssl.qhimg.com/t019ce24b482a7f3229.png",expression:"`https://p.ssl.qhimg.com/t019ce24b482a7f3229.png`"}],attrs:{alt:"table"}})]),n("h2",{attrs:{id:"-"}},[s._v("安装依赖")]),s._m(3),n("p",[s._v("好，我们来安装项目依赖。")]),n("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"pre-area",attrs:{width:"0",height:"0"}},[s._v('<code class="hljs lang-javascript">npm%20install%20express%20mongoose%20method-override%20morgan%20body-parser%20cors%20%E2%80%94save-dev</code>')]),n("h2",{attrs:{id:"-schema"}},[s._v("定义 Schema")]),n("p",[s._v("我们会使用 Mongoose 作为 Node.js 中的对象文档模型（Object Document Model），它工作起来和典型的 ORM一样，就像 Rails 中用 ActiveRecord一样。Mongoose 帮我们更方便地访问 MongoDB 命令。首先我们为 Todo API 定义 schema。")]),n("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"pre-area",attrs:{width:"0",height:"0"}},[s._v("<code class=\"hljs lang-javascript\">%3Cspan%20class%3D%22hljs-keyword%22%3Evar%3C%2Fspan%3E%20mongoose%20%3D%20%3Cspan%20class%3D%22hljs-built_in%22%3Erequire%3C%2Fspan%3E(%3Cspan%20class%3D%22hljs-string%22%3E'mongoose'%3C%2Fspan%3E)%3B%0A%3Cspan%20class%3D%22hljs-keyword%22%3Evar%3C%2Fspan%3E%20Schema%20%3D%20mongoose.Schema%3B%0A%3Cspan%20class%3D%22hljs-comment%22%3E%2F%2F%20Defining%20schema%20for%20our%20Todo%20API%3C%2Fspan%3E%0A%3Cspan%20class%3D%22hljs-keyword%22%3Evar%3C%2Fspan%3E%20TodoSchema%20%3D%20Schema(%7B%0A%20%20%3Cspan%20class%3D%22hljs-attr%22%3Etodo%3C%2Fspan%3E%3A%20%7B%0A%20%20%20%20%3Cspan%20class%3D%22hljs-attr%22%3Etype%3C%2Fspan%3E%3A%20%3Cspan%20class%3D%22hljs-built_in%22%3EString%3C%2Fspan%3E%0A%20%20%7D%2C%0A%20%20%3Cspan%20class%3D%22hljs-attr%22%3Ecompleted%3C%2Fspan%3E%3A%20%7B%0A%20%20%20%20%3Cspan%20class%3D%22hljs-attr%22%3Etype%3C%2Fspan%3E%3A%20%3Cspan%20class%3D%22hljs-built_in%22%3EBoolean%3C%2Fspan%3E%2C%0A%20%20%20%20%3Cspan%20class%3D%22hljs-attr%22%3Edefault%3C%2Fspan%3E%3A%20%3Cspan%20class%3D%22hljs-literal%22%3Efalse%3C%2Fspan%3E%0A%20%20%7D%2C%0A%20%20%3Cspan%20class%3D%22hljs-attr%22%3Ecreated_by%3C%2Fspan%3E%3A%20%7B%0A%20%20%20%20%3Cspan%20class%3D%22hljs-attr%22%3Etype%3C%2Fspan%3E%3A%20%3Cspan%20class%3D%22hljs-built_in%22%3EDate%3C%2Fspan%3E%2C%0A%20%20%20%20%3Cspan%20class%3D%22hljs-attr%22%3Edefault%3C%2Fspan%3E%3A%20%3Cspan%20class%3D%22hljs-built_in%22%3EDate%3C%2Fspan%3E.now%0A%20%20%7D%0A%7D)%3B%0A%3Cspan%20class%3D%22hljs-comment%22%3E%2F%2FExporting%20our%20model%3C%2Fspan%3E%0A%3Cspan%20class%3D%22hljs-keyword%22%3Evar%3C%2Fspan%3E%20TodoModel%20%3D%20mongoose.model(%3Cspan%20class%3D%22hljs-string%22%3E'Todo'%3C%2Fspan%3E%2C%20TodoSchema)%3B%0A%0A%3Cspan%20class%3D%22hljs-built_in%22%3Emodule%3C%2Fspan%3E.exports%20%3D%20TodoModel%3B</code>")]),n("p",[s._v("Mongoose 中的一切都是从 schema 开始。每个 schema 对应一个 MongoDB 集合，它定义了集合中文档的形状。")]),n("p",[s._v("在上面的 todo schema 中，我们创建了三个字段来存储 todo 描述、状态和创建日期。该 schema 帮助 Node.js 应用理解如何将 MongoDB 中的数据映射成 JavaScript 对象。")]),n("h2",{attrs:{id:"-express-server"}},[s._v("搭建 Express Server")]),n("p",[s._v("我们将使用 Express 来搭建服务器，它是一个小型 Node.js web 框架，提供了一个强大的功能集，用于开发Web应用程序。")]),n("p",[s._v("我们继续，搭建 Express server。")]),n("p",[s._v("首先，我们要按下面这样引入项目依赖：")]),n("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"pre-area",attrs:{width:"0",height:"0"}},[s._v("<code class=\"hljs lang-javascript\">%3Cspan%20class%3D%22hljs-keyword%22%3Evar%3C%2Fspan%3E%20express%20%3D%20%3Cspan%20class%3D%22hljs-built_in%22%3Erequire%3C%2Fspan%3E(%3Cspan%20class%3D%22hljs-string%22%3E'express'%3C%2Fspan%3E)%3B%0A%3Cspan%20class%3D%22hljs-keyword%22%3Evar%3C%2Fspan%3E%20mongoose%20%3D%20%3Cspan%20class%3D%22hljs-built_in%22%3Erequire%3C%2Fspan%3E(%3Cspan%20class%3D%22hljs-string%22%3E'mongoose'%3C%2Fspan%3E)%3B%0A%3Cspan%20class%3D%22hljs-keyword%22%3Evar%3C%2Fspan%3E%20morgan%20%3D%20%3Cspan%20class%3D%22hljs-built_in%22%3Erequire%3C%2Fspan%3E(%3Cspan%20class%3D%22hljs-string%22%3E'morgan'%3C%2Fspan%3E)%3B%0A%3Cspan%20class%3D%22hljs-keyword%22%3Evar%3C%2Fspan%3E%20bodyParser%20%3D%20%3Cspan%20class%3D%22hljs-built_in%22%3Erequire%3C%2Fspan%3E(%3Cspan%20class%3D%22hljs-string%22%3E'body-parser'%3C%2Fspan%3E)%3B%0A%3Cspan%20class%3D%22hljs-keyword%22%3Evar%3C%2Fspan%3E%20methodOverride%20%3D%20%3Cspan%20class%3D%22hljs-built_in%22%3Erequire%3C%2Fspan%3E(%3Cspan%20class%3D%22hljs-string%22%3E'method-override'%3C%2Fspan%3E)%3B%0A%3Cspan%20class%3D%22hljs-keyword%22%3Evar%3C%2Fspan%3E%20app%20%3D%20express()%3B%0A%3Cspan%20class%3D%22hljs-keyword%22%3Evar%3C%2Fspan%3E%20config%20%3D%20%3Cspan%20class%3D%22hljs-built_in%22%3Erequire%3C%2Fspan%3E(%3Cspan%20class%3D%22hljs-string%22%3E'.%2Fapp%2Fconfig%2Fconfig'%3C%2Fspan%3E)%3B</code>")]),n("p",[s._v("接着，配置 Express 中间件：")]),n("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"pre-area",attrs:{width:"0",height:"0"}},[s._v("<code class=\"hljs lang-javascript\">app.use(morgan(%3Cspan%20class%3D%22hljs-string%22%3E'dev'%3C%2Fspan%3E))%3B%20%3Cspan%20class%3D%22hljs-comment%22%3E%2F%2F%20log%20every%20request%20to%20the%20console%3C%2Fspan%3E%0Aapp.use(bodyParser.urlencoded(%7B%3Cspan%20class%3D%22hljs-string%22%3E'extended'%3C%2Fspan%3E%3A%3Cspan%20class%3D%22hljs-string%22%3E'true'%3C%2Fspan%3E%7D))%3B%20%3Cspan%20class%3D%22hljs-comment%22%3E%2F%2F%20parse%20application%2Fx-www-form-urlencoded%3C%2Fspan%3E%0Aapp.use(bodyParser.json())%3B%20%3Cspan%20class%3D%22hljs-comment%22%3E%2F%2F%20parse%20application%2Fjson%3C%2Fspan%3E%0Aapp.use(bodyParser.json(%7B%20%3Cspan%20class%3D%22hljs-attr%22%3Etype%3C%2Fspan%3E%3A%20%3Cspan%20class%3D%22hljs-string%22%3E'application%2Fvnd.api%2Bjson'%3C%2Fspan%3E%20%7D))%3B%20%3Cspan%20class%3D%22hljs-comment%22%3E%2F%2F%20parse%20application%2Fvnd.api%2Bjson%20as%20json%3C%2Fspan%3E%0Aapp.use(methodOverride())%3B</code>")]),n("h3",{attrs:{id:"-mongoose-"}},[s._v("管理 Mongoose 连接")]),n("p",[s._v("使用"),n("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("mongoose.connect")]),s._v("将 MongoDB 和应用连接，这会和数据库建立连接。这就是连接 todoapi 数据库的最小操作，数据库跑在本地，默认端口是 27017。如果本地连接失败，试试将 localhost 换成 127.0.0.1。")]),n("p",[s._v("有时候本地主机名改变时会出现一些问题。")]),n("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"pre-area",attrs:{width:"0",height:"0"}},[s._v("<code class=\"hljs lang-javascript\">%3Cspan%20class%3D%22hljs-comment%22%3E%2F%2FConnecting%20MongoDB%20using%20mongoose%20to%20our%20application%3C%2Fspan%3E%0Amongoose.connect(config.db)%3B%0A%0A%3Cspan%20class%3D%22hljs-comment%22%3E%2F%2FThis%20callback%20will%20be%20triggered%20once%20the%20connection%20is%20successfully%20established%20to%20MongoDB%3C%2Fspan%3E%0Amongoose.connection.on(%3Cspan%20class%3D%22hljs-string%22%3E'connected'%3C%2Fspan%3E%2C%20%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-keyword%22%3Efunction%3C%2Fspan%3E%20(%3Cspan%20class%3D%22hljs-params%22%3E%3C%2Fspan%3E)%20%3C%2Fspan%3E%7B%0A%20%20%3Cspan%20class%3D%22hljs-built_in%22%3Econsole%3C%2Fspan%3E.log(%3Cspan%20class%3D%22hljs-string%22%3E'Mongoose%20default%20connection%20open%20to%20'%3C%2Fspan%3E%20%2B%20config.db)%3B%0A%7D)%3B%0A%0A%3Cspan%20class%3D%22hljs-comment%22%3E%2F%2FExpress%20application%20will%20listen%20to%20port%20mentioned%20in%20our%20configuration%3C%2Fspan%3E%0Aapp.listen(config.port%2C%20%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-keyword%22%3Efunction%3C%2Fspan%3E(%3Cspan%20class%3D%22hljs-params%22%3Eerr%3C%2Fspan%3E)%3C%2Fspan%3E%7B%0A%20%20%3Cspan%20class%3D%22hljs-keyword%22%3Eif%3C%2Fspan%3E(err)%20%3Cspan%20class%3D%22hljs-keyword%22%3Ethrow%3C%2Fspan%3E%20err%3B%0A%20%20%3Cspan%20class%3D%22hljs-built_in%22%3Econsole%3C%2Fspan%3E.log(%3Cspan%20class%3D%22hljs-string%22%3E%22App%20listening%20on%20port%20%22%3C%2Fspan%3E%2Bconfig.port)%3B%0A%7D)%3B</code>")]),n("p",[s._v("使用下面的命令启动服务器：")]),n("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"pre-area",attrs:{width:"0",height:"0"}},[s._v('<code class="hljs lang-bash">%2F%2Fstarting%20our%20node%20server%0A%26gt%3B%20node%20server.js%0AApp%20listening%20on%20port%202000</code>')]),n("h2",{attrs:{id:"-api-"}},[s._v("为 API 编写测试用例")]),n("p",[s._v("在 TDD（测试驱动开发）中，将所有可能的输入、输出以及错误纳入考虑，然后开始编写测试用例。来给我们的 Todo API 编写测试用例吧。")]),n("h3",{attrs:{id:"-"}},[s._v("搭建测试环境")]),n("p",[s._v("之前提到过，我们会使用 Mocha 作为测试运行器，Chai 作为断言库，用 Sinon.js 模拟 Todo model。首先安装单元测试环境：")]),n("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"pre-area",attrs:{width:"0",height:"0"}},[s._v('<code class="hljs lang-bash">%26gt%3B%20npm%20install%20mocha%20chai%20sinon%20sinon-mongoose%20--save</code>')]),n("p",[s._v("使用 "),n("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("sinon-mongoose")]),s._v(" 模块来模拟 Mongoose 定义的 MongoDB 模型。")]),n("p",[s._v("现在，引入测试的依赖：")]),n("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"pre-area",attrs:{width:"0",height:"0"}},[s._v("<code class=\"hljs lang-javascript\">%3Cspan%20class%3D%22hljs-keyword%22%3Evar%3C%2Fspan%3E%20sinon%20%3D%20%3Cspan%20class%3D%22hljs-built_in%22%3Erequire%3C%2Fspan%3E(%3Cspan%20class%3D%22hljs-string%22%3E'sinon'%3C%2Fspan%3E)%3B%0A%3Cspan%20class%3D%22hljs-keyword%22%3Evar%3C%2Fspan%3E%20chai%20%3D%20%3Cspan%20class%3D%22hljs-built_in%22%3Erequire%3C%2Fspan%3E(%3Cspan%20class%3D%22hljs-string%22%3E'chai'%3C%2Fspan%3E)%3B%0A%3Cspan%20class%3D%22hljs-keyword%22%3Evar%3C%2Fspan%3E%20expect%20%3D%20chai.expect%3B%0A%0A%3Cspan%20class%3D%22hljs-keyword%22%3Evar%3C%2Fspan%3E%20mongoose%20%3D%20%3Cspan%20class%3D%22hljs-built_in%22%3Erequire%3C%2Fspan%3E(%3Cspan%20class%3D%22hljs-string%22%3E'mongoose'%3C%2Fspan%3E)%3B%0A%3Cspan%20class%3D%22hljs-built_in%22%3Erequire%3C%2Fspan%3E(%3Cspan%20class%3D%22hljs-string%22%3E'sinon-mongoose'%3C%2Fspan%3E)%3B%0A%0A%3Cspan%20class%3D%22hljs-comment%22%3E%2F%2FImporting%20our%20todo%20model%20for%20our%20unit%20testing.%3C%2Fspan%3E%0A%3Cspan%20class%3D%22hljs-keyword%22%3Evar%3C%2Fspan%3E%20Todo%20%3D%20%3Cspan%20class%3D%22hljs-built_in%22%3Erequire%3C%2Fspan%3E(%3Cspan%20class%3D%22hljs-string%22%3E'..%2F..%2Fapp%2Fmodels%2Ftodo.model'%3C%2Fspan%3E)%3B</code>")]),n("h3",{attrs:{id:"todo-api-"}},[s._v("Todo API 的测试用例")]),n("p",[s._v("编写单元测试时，需要同时考虑成功和出错的场景。")]),n("p",[s._v("对我们的 Todo API 来说，我们要给新建、删除、更新、查询 API 同时编写成功和出错的测试用例。我们使用 Mocha, Chai 和 Sinon.js 来编写测试。")]),n("h4",{attrs:{id:"-todo"}},[s._v("获取所有 Todo")]),n("p",[s._v("本小节，我们来编写从数据库获取所有 todo 的测试用例。需要同时为成功、出错场景编写，以确保代码在生产中的各种环境下都能正常工作。")]),n("p",[s._v("我们不会使用真实数据库来跑测试用例，而是用 "),n("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("sinon.mock")]),s._v(" 给 Todo schema 建立假数据模型，然后再测试期望的结果。")]),n("p",[s._v("来使用 "),n("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("sinon.mock")]),s._v(" 给 Todo model 据，然后使用 "),n("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("find")]),s._v(" 方法获取数据库中存储的所有 todo。")]),n("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"pre-area",attrs:{width:"0",height:"0"}},[s._v("<code class=\"hljs lang-javascript\">%20%20%20%20describe(%3Cspan%20class%3D%22hljs-string%22%3E%22Get%20all%20todos%22%3C%2Fspan%3E%2C%20%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-keyword%22%3Efunction%3C%2Fspan%3E(%3Cspan%20class%3D%22hljs-params%22%3E%3C%2Fspan%3E)%3C%2Fspan%3E%7B%0A%20%20%20%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-comment%22%3E%2F%2F%20Test%20will%20pass%20if%20we%20get%20all%20todos%3C%2Fspan%3E%0A%20%20%20%20%20%20%20%20it(%3Cspan%20class%3D%22hljs-string%22%3E%22should%20return%20all%20todos%22%3C%2Fspan%3E%2C%20%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-keyword%22%3Efunction%3C%2Fspan%3E(%3Cspan%20class%3D%22hljs-params%22%3Edone%3C%2Fspan%3E)%3C%2Fspan%3E%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-keyword%22%3Evar%3C%2Fspan%3E%20TodoMock%20%3D%20sinon.mock(Todo)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-keyword%22%3Evar%3C%2Fspan%3E%20expectedResult%20%3D%20%7B%3Cspan%20class%3D%22hljs-attr%22%3Estatus%3C%2Fspan%3E%3A%20%3Cspan%20class%3D%22hljs-literal%22%3Etrue%3C%2Fspan%3E%2C%20%3Cspan%20class%3D%22hljs-attr%22%3Etodo%3C%2Fspan%3E%3A%20%5B%5D%7D%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20TodoMock.expects(%3Cspan%20class%3D%22hljs-string%22%3E'find'%3C%2Fspan%3E).yields(%3Cspan%20class%3D%22hljs-literal%22%3Enull%3C%2Fspan%3E%2C%20expectedResult)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20Todo.find(%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-keyword%22%3Efunction%3C%2Fspan%3E%20(%3Cspan%20class%3D%22hljs-params%22%3Eerr%2C%20result%3C%2Fspan%3E)%20%3C%2Fspan%3E%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20TodoMock.verify()%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20TodoMock.restore()%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20expect(result.status).to.be.true%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20done()%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D)%3B%0A%20%20%20%20%20%20%20%20%7D)%3B%0A%0A%20%20%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-comment%22%3E%2F%2F%20Test%20will%20pass%20if%20we%20fail%20to%20get%20a%20todo%3C%2Fspan%3E%0A%20%20%20%20%20%20%20%20it(%3Cspan%20class%3D%22hljs-string%22%3E%22should%20return%20error%22%3C%2Fspan%3E%2C%20%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-keyword%22%3Efunction%3C%2Fspan%3E(%3Cspan%20class%3D%22hljs-params%22%3Edone%3C%2Fspan%3E)%3C%2Fspan%3E%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-keyword%22%3Evar%3C%2Fspan%3E%20TodoMock%20%3D%20sinon.mock(Todo)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-keyword%22%3Evar%3C%2Fspan%3E%20expectedResult%20%3D%20%7B%3Cspan%20class%3D%22hljs-attr%22%3Estatus%3C%2Fspan%3E%3A%20%3Cspan%20class%3D%22hljs-literal%22%3Efalse%3C%2Fspan%3E%2C%20%3Cspan%20class%3D%22hljs-attr%22%3Eerror%3C%2Fspan%3E%3A%20%3Cspan%20class%3D%22hljs-string%22%3E%22Something%20went%20wrong%22%3C%2Fspan%3E%7D%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20TodoMock.expects(%3Cspan%20class%3D%22hljs-string%22%3E'find'%3C%2Fspan%3E).yields(expectedResult%2C%20%3Cspan%20class%3D%22hljs-literal%22%3Enull%3C%2Fspan%3E)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20Todo.find(%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-keyword%22%3Efunction%3C%2Fspan%3E%20(%3Cspan%20class%3D%22hljs-params%22%3Eerr%2C%20result%3C%2Fspan%3E)%20%3C%2Fspan%3E%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20TodoMock.verify()%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20TodoMock.restore()%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20expect(err.status).to.not.be.true%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20done()%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D)%3B%0A%20%20%20%20%20%20%20%20%7D)%3B%0A%20%20%20%20%7D)%3B</code>")]),n("h4",{attrs:{id:"-new-todo"}},[s._v("保存 New Todo")]),n("p",[s._v("保存一个新的 todo，需要用一个示例任务来模拟 Todo model。使用我们创建的Todo model来检验 mongoose 的save 方法保存 todo 到数据库的结果。")]),n("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"pre-area",attrs:{width:"0",height:"0"}},[s._v("<code class=\"hljs lang-javascript\">%20%20%20%20%3Cspan%20class%3D%22hljs-comment%22%3E%2F%2F%20Test%20will%20pass%20if%20the%20todo%20is%20saved%3C%2Fspan%3E%0A%20%20%20%20describe(%3Cspan%20class%3D%22hljs-string%22%3E%22Post%20a%20new%20todo%22%3C%2Fspan%3E%2C%20%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-keyword%22%3Efunction%3C%2Fspan%3E(%3Cspan%20class%3D%22hljs-params%22%3E%3C%2Fspan%3E)%3C%2Fspan%3E%7B%0A%20%20%20%20%20%20%20%20it(%3Cspan%20class%3D%22hljs-string%22%3E%22should%20create%20new%20post%22%3C%2Fspan%3E%2C%20%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-keyword%22%3Efunction%3C%2Fspan%3E(%3Cspan%20class%3D%22hljs-params%22%3Edone%3C%2Fspan%3E)%3C%2Fspan%3E%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-keyword%22%3Evar%3C%2Fspan%3E%20TodoMock%20%3D%20sinon.mock(%3Cspan%20class%3D%22hljs-keyword%22%3Enew%3C%2Fspan%3E%20Todo(%7B%20%3Cspan%20class%3D%22hljs-attr%22%3Etodo%3C%2Fspan%3E%3A%20%3Cspan%20class%3D%22hljs-string%22%3E'Save%20new%20todo%20from%20mock'%3C%2Fspan%3E%7D))%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-keyword%22%3Evar%3C%2Fspan%3E%20todo%20%3D%20TodoMock.object%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-keyword%22%3Evar%3C%2Fspan%3E%20expectedResult%20%3D%20%7B%20%3Cspan%20class%3D%22hljs-attr%22%3Estatus%3C%2Fspan%3E%3A%20%3Cspan%20class%3D%22hljs-literal%22%3Etrue%3C%2Fspan%3E%20%7D%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20TodoMock.expects(%3Cspan%20class%3D%22hljs-string%22%3E'save'%3C%2Fspan%3E).yields(%3Cspan%20class%3D%22hljs-literal%22%3Enull%3C%2Fspan%3E%2C%20expectedResult)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20todo.save(%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-keyword%22%3Efunction%3C%2Fspan%3E%20(%3Cspan%20class%3D%22hljs-params%22%3Eerr%2C%20result%3C%2Fspan%3E)%20%3C%2Fspan%3E%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20TodoMock.verify()%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20TodoMock.restore()%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20expect(result.status).to.be.true%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20done()%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D)%3B%0A%20%20%20%20%20%20%20%20%7D)%3B%0A%20%20%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-comment%22%3E%2F%2F%20Test%20will%20pass%20if%20the%20todo%20is%20not%20saved%3C%2Fspan%3E%0A%20%20%20%20%20%20%20%20it(%3Cspan%20class%3D%22hljs-string%22%3E%22should%20return%20error%2C%20if%20post%20not%20saved%22%3C%2Fspan%3E%2C%20%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-keyword%22%3Efunction%3C%2Fspan%3E(%3Cspan%20class%3D%22hljs-params%22%3Edone%3C%2Fspan%3E)%3C%2Fspan%3E%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-keyword%22%3Evar%3C%2Fspan%3E%20TodoMock%20%3D%20sinon.mock(%3Cspan%20class%3D%22hljs-keyword%22%3Enew%3C%2Fspan%3E%20Todo(%7B%20%3Cspan%20class%3D%22hljs-attr%22%3Etodo%3C%2Fspan%3E%3A%20%3Cspan%20class%3D%22hljs-string%22%3E'Save%20new%20todo%20from%20mock'%3C%2Fspan%3E%7D))%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-keyword%22%3Evar%3C%2Fspan%3E%20todo%20%3D%20TodoMock.object%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-keyword%22%3Evar%3C%2Fspan%3E%20expectedResult%20%3D%20%7B%20%3Cspan%20class%3D%22hljs-attr%22%3Estatus%3C%2Fspan%3E%3A%20%3Cspan%20class%3D%22hljs-literal%22%3Efalse%3C%2Fspan%3E%20%7D%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20TodoMock.expects(%3Cspan%20class%3D%22hljs-string%22%3E'save'%3C%2Fspan%3E).yields(expectedResult%2C%20%3Cspan%20class%3D%22hljs-literal%22%3Enull%3C%2Fspan%3E)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20todo.save(%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-keyword%22%3Efunction%3C%2Fspan%3E%20(%3Cspan%20class%3D%22hljs-params%22%3Eerr%2C%20result%3C%2Fspan%3E)%20%3C%2Fspan%3E%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20TodoMock.verify()%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20TodoMock.restore()%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20expect(err.status).to.not.be.true%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20done()%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D)%3B%0A%20%20%20%20%20%20%20%20%7D)%3B%0A%20%20%20%20%7D)%3B</code>")]),n("h4",{attrs:{id:"-id-todo"}},[s._v("根据 ID 更新 Todo")]),n("p",[s._v("本节我们来检验 API 的 update 功能。这和上面的例子很类似，除了我们要使用"),n("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("withArgs")]),s._v("方法，模拟带有参数 ID 的 Todo model。")]),n("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"pre-area",attrs:{width:"0",height:"0"}},[s._v("<code class=\"hljs lang-javascript\">%20%20%3Cspan%20class%3D%22hljs-comment%22%3E%2F%2F%20Test%20will%20pass%20if%20the%20todo%20is%20updated%20based%20on%20an%20ID%3C%2Fspan%3E%0A%20%20describe(%3Cspan%20class%3D%22hljs-string%22%3E%22Update%20a%20new%20todo%20by%20id%22%3C%2Fspan%3E%2C%20%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-keyword%22%3Efunction%3C%2Fspan%3E(%3Cspan%20class%3D%22hljs-params%22%3E%3C%2Fspan%3E)%3C%2Fspan%3E%7B%0A%20%20%20%20it(%3Cspan%20class%3D%22hljs-string%22%3E%22should%20updated%20a%20todo%20by%20id%22%3C%2Fspan%3E%2C%20%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-keyword%22%3Efunction%3C%2Fspan%3E(%3Cspan%20class%3D%22hljs-params%22%3Edone%3C%2Fspan%3E)%3C%2Fspan%3E%7B%0A%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-keyword%22%3Evar%3C%2Fspan%3E%20TodoMock%20%3D%20sinon.mock(%3Cspan%20class%3D%22hljs-keyword%22%3Enew%3C%2Fspan%3E%20Todo(%7B%20%3Cspan%20class%3D%22hljs-attr%22%3Ecompleted%3C%2Fspan%3E%3A%20%3Cspan%20class%3D%22hljs-literal%22%3Etrue%3C%2Fspan%3E%7D))%3B%0A%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-keyword%22%3Evar%3C%2Fspan%3E%20todo%20%3D%20TodoMock.object%3B%0A%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-keyword%22%3Evar%3C%2Fspan%3E%20expectedResult%20%3D%20%7B%20%3Cspan%20class%3D%22hljs-attr%22%3Estatus%3C%2Fspan%3E%3A%20%3Cspan%20class%3D%22hljs-literal%22%3Etrue%3C%2Fspan%3E%20%7D%3B%0A%20%20%20%20%20%20TodoMock.expects(%3Cspan%20class%3D%22hljs-string%22%3E'save'%3C%2Fspan%3E).withArgs(%7B%3Cspan%20class%3D%22hljs-attr%22%3E_id%3C%2Fspan%3E%3A%20%3Cspan%20class%3D%22hljs-number%22%3E12345%3C%2Fspan%3E%7D).yields(%3Cspan%20class%3D%22hljs-literal%22%3Enull%3C%2Fspan%3E%2C%20expectedResult)%3B%0A%20%20%20%20%20%20todo.save(%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-keyword%22%3Efunction%3C%2Fspan%3E%20(%3Cspan%20class%3D%22hljs-params%22%3Eerr%2C%20result%3C%2Fspan%3E)%20%3C%2Fspan%3E%7B%0A%20%20%20%20%20%20%20%20TodoMock.verify()%3B%0A%20%20%20%20%20%20%20%20TodoMock.restore()%3B%0A%20%20%20%20%20%20%20%20expect(result.status).to.be.true%3B%0A%20%20%20%20%20%20%20%20done()%3B%0A%20%20%20%20%20%20%7D)%3B%0A%20%20%20%20%7D)%3B%0A%20%20%20%20%3Cspan%20class%3D%22hljs-comment%22%3E%2F%2F%20Test%20will%20pass%20if%20the%20todo%20is%20not%20updated%20based%20on%20an%20ID%3C%2Fspan%3E%0A%20%20%20%20it(%3Cspan%20class%3D%22hljs-string%22%3E%22should%20return%20error%20if%20update%20action%20is%20failed%22%3C%2Fspan%3E%2C%20%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-keyword%22%3Efunction%3C%2Fspan%3E(%3Cspan%20class%3D%22hljs-params%22%3Edone%3C%2Fspan%3E)%3C%2Fspan%3E%7B%0A%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-keyword%22%3Evar%3C%2Fspan%3E%20TodoMock%20%3D%20sinon.mock(%3Cspan%20class%3D%22hljs-keyword%22%3Enew%3C%2Fspan%3E%20Todo(%7B%20%3Cspan%20class%3D%22hljs-attr%22%3Ecompleted%3C%2Fspan%3E%3A%20%3Cspan%20class%3D%22hljs-literal%22%3Etrue%3C%2Fspan%3E%7D))%3B%0A%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-keyword%22%3Evar%3C%2Fspan%3E%20todo%20%3D%20TodoMock.object%3B%0A%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-keyword%22%3Evar%3C%2Fspan%3E%20expectedResult%20%3D%20%7B%20%3Cspan%20class%3D%22hljs-attr%22%3Estatus%3C%2Fspan%3E%3A%20%3Cspan%20class%3D%22hljs-literal%22%3Efalse%3C%2Fspan%3E%20%7D%3B%0A%20%20%20%20%20%20TodoMock.expects(%3Cspan%20class%3D%22hljs-string%22%3E'save'%3C%2Fspan%3E).withArgs(%7B%3Cspan%20class%3D%22hljs-attr%22%3E_id%3C%2Fspan%3E%3A%20%3Cspan%20class%3D%22hljs-number%22%3E12345%3C%2Fspan%3E%7D).yields(expectedResult%2C%20%3Cspan%20class%3D%22hljs-literal%22%3Enull%3C%2Fspan%3E)%3B%0A%20%20%20%20%20%20todo.save(%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-keyword%22%3Efunction%3C%2Fspan%3E%20(%3Cspan%20class%3D%22hljs-params%22%3Eerr%2C%20result%3C%2Fspan%3E)%20%3C%2Fspan%3E%7B%0A%20%20%20%20%20%20%20%20TodoMock.verify()%3B%0A%20%20%20%20%20%20%20%20TodoMock.restore()%3B%0A%20%20%20%20%20%20%20%20expect(err.status).to.not.be.true%3B%0A%20%20%20%20%20%20%20%20done()%3B%0A%20%20%20%20%20%20%7D)%3B%0A%20%20%20%20%7D)%3B%0A%20%20%7D)%3B</code>")]),n("h4",{attrs:{id:"-id-todo"}},[s._v("根据 ID 删除 Todo")]),n("p",[s._v("这是 Todo API 单元测试的最后一小节。本节我们将基于给定的 ID ，使用 mongoose 的 remove 方法，测试 API 的 delete 功能。")]),n("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"pre-area",attrs:{width:"0",height:"0"}},[s._v("<code class=\"hljs lang-javascript\">%20%20%20%20%3Cspan%20class%3D%22hljs-comment%22%3E%2F%2F%20Test%20will%20pass%20if%20the%20todo%20is%20deleted%20based%20on%20an%20ID%3C%2Fspan%3E%0A%20%20%20%20describe(%3Cspan%20class%3D%22hljs-string%22%3E%22Delete%20a%20todo%20by%20id%22%3C%2Fspan%3E%2C%20%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-keyword%22%3Efunction%3C%2Fspan%3E(%3Cspan%20class%3D%22hljs-params%22%3E%3C%2Fspan%3E)%3C%2Fspan%3E%7B%0A%20%20%20%20%20%20%20%20it(%3Cspan%20class%3D%22hljs-string%22%3E%22should%20delete%20a%20todo%20by%20id%22%3C%2Fspan%3E%2C%20%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-keyword%22%3Efunction%3C%2Fspan%3E(%3Cspan%20class%3D%22hljs-params%22%3Edone%3C%2Fspan%3E)%3C%2Fspan%3E%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-keyword%22%3Evar%3C%2Fspan%3E%20TodoMock%20%3D%20sinon.mock(Todo)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-keyword%22%3Evar%3C%2Fspan%3E%20expectedResult%20%3D%20%7B%20%3Cspan%20class%3D%22hljs-attr%22%3Estatus%3C%2Fspan%3E%3A%20%3Cspan%20class%3D%22hljs-literal%22%3Etrue%3C%2Fspan%3E%20%7D%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20TodoMock.expects(%3Cspan%20class%3D%22hljs-string%22%3E'remove'%3C%2Fspan%3E).withArgs(%7B%3Cspan%20class%3D%22hljs-attr%22%3E_id%3C%2Fspan%3E%3A%20%3Cspan%20class%3D%22hljs-number%22%3E12345%3C%2Fspan%3E%7D).yields(%3Cspan%20class%3D%22hljs-literal%22%3Enull%3C%2Fspan%3E%2C%20expectedResult)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20Todo.remove(%7B%3Cspan%20class%3D%22hljs-attr%22%3E_id%3C%2Fspan%3E%3A%20%3Cspan%20class%3D%22hljs-number%22%3E12345%3C%2Fspan%3E%7D%2C%20%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-keyword%22%3Efunction%3C%2Fspan%3E%20(%3Cspan%20class%3D%22hljs-params%22%3Eerr%2C%20result%3C%2Fspan%3E)%20%3C%2Fspan%3E%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20TodoMock.verify()%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20TodoMock.restore()%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20expect(result.status).to.be.true%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20done()%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D)%3B%0A%20%20%20%20%20%20%20%20%7D)%3B%0A%20%20%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-comment%22%3E%2F%2F%20Test%20will%20pass%20if%20the%20todo%20is%20not%20deleted%20based%20on%20an%20ID%3C%2Fspan%3E%0A%20%20%20%20%20%20%20%20it(%3Cspan%20class%3D%22hljs-string%22%3E%22should%20return%20error%20if%20delete%20action%20is%20failed%22%3C%2Fspan%3E%2C%20%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-keyword%22%3Efunction%3C%2Fspan%3E(%3Cspan%20class%3D%22hljs-params%22%3Edone%3C%2Fspan%3E)%3C%2Fspan%3E%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-keyword%22%3Evar%3C%2Fspan%3E%20TodoMock%20%3D%20sinon.mock(Todo)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-keyword%22%3Evar%3C%2Fspan%3E%20expectedResult%20%3D%20%7B%20%3Cspan%20class%3D%22hljs-attr%22%3Estatus%3C%2Fspan%3E%3A%20%3Cspan%20class%3D%22hljs-literal%22%3Efalse%3C%2Fspan%3E%20%7D%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20TodoMock.expects(%3Cspan%20class%3D%22hljs-string%22%3E'remove'%3C%2Fspan%3E).withArgs(%7B%3Cspan%20class%3D%22hljs-attr%22%3E_id%3C%2Fspan%3E%3A%20%3Cspan%20class%3D%22hljs-number%22%3E12345%3C%2Fspan%3E%7D).yields(expectedResult%2C%20%3Cspan%20class%3D%22hljs-literal%22%3Enull%3C%2Fspan%3E)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20Todo.remove(%7B%3Cspan%20class%3D%22hljs-attr%22%3E_id%3C%2Fspan%3E%3A%20%3Cspan%20class%3D%22hljs-number%22%3E12345%3C%2Fspan%3E%7D%2C%20%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-keyword%22%3Efunction%3C%2Fspan%3E%20(%3Cspan%20class%3D%22hljs-params%22%3Eerr%2C%20result%3C%2Fspan%3E)%20%3C%2Fspan%3E%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20TodoMock.verify()%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20TodoMock.restore()%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20expect(err.status).to.not.be.true%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20done()%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D)%3B%0A%20%20%20%20%20%20%20%20%7D)%3B%0A%20%20%20%20%7D)%3B</code>")]),n("p",[s._v("每次我们都要还原（restore） Todomock，确保下次它还能正常工作。")]),n("p",[s._v("每次运行测试用例的时候，所有的都会失败，因为我们的生产代码还没写好呢。我们会运行自动化测试，直至所有单元测试都通过。")]),n("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"pre-area",attrs:{width:"0",height:"0"}},[s._v('<code class="hljs lang-bash">%26gt%3B%20npm%20%3Cspan%20class%3D%22hljs-built_in%22%3Etest%3C%2Fspan%3E%0A%0A%20%20Unit%20%3Cspan%20class%3D%22hljs-built_in%22%3Etest%3C%2Fspan%3E%20%3Cspan%20class%3D%22hljs-keyword%22%3Efor%3C%2Fspan%3E%20Todo%20API%0A%20%20%20%20Get%20all%20todo%0A%20%20%20%20%20%201)%20should%20%3Cspan%20class%3D%22hljs-built_in%22%3Ereturn%3C%2Fspan%3E%20all%20todo%0A%20%20%20%20%20%202)%20should%20%3Cspan%20class%3D%22hljs-built_in%22%3Ereturn%3C%2Fspan%3E%20error%0A%20%20%20%20Post%20a%20new%20todo%0A%20%20%20%20%20%203)%20should%20create%20new%20post%0A%20%20%20%20%20%204)%20should%20%3Cspan%20class%3D%22hljs-built_in%22%3Ereturn%3C%2Fspan%3E%20error%2C%20%3Cspan%20class%3D%22hljs-keyword%22%3Eif%3C%2Fspan%3E%20post%20not%20saved%0A%20%20%20%20Update%20a%20new%20todo%20by%20id%0A%20%20%20%20%20%205)%20should%20updated%20a%20todo%20by%20id%0A%20%20%20%20%20%206)%20should%20%3Cspan%20class%3D%22hljs-built_in%22%3Ereturn%3C%2Fspan%3E%20error%20%3Cspan%20class%3D%22hljs-keyword%22%3Eif%3C%2Fspan%3E%20update%20action%20is%20failed%0A%20%20%20%20Delete%20a%20todo%20by%20id%0A%20%20%20%20%20%207)%20should%20delete%20a%20todo%20by%20id%0A%20%20%20%20%20%208)%20should%20%3Cspan%20class%3D%22hljs-built_in%22%3Ereturn%3C%2Fspan%3E%20error%20%3Cspan%20class%3D%22hljs-keyword%22%3Eif%3C%2Fspan%3E%20delete%20action%20is%20failed%0A%0A%20%200%20passing%20(17ms)%0A%20%208%20failing</code>')]),n("p",[s._v("你在命令行终端上运行"),n("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("npm test")]),s._v("的时候，会得到上面的输出信息，所有的测试用例都失败了。需要根据需求和单元测试用例来编写应用逻辑，使我们的程序更加稳定。")]),n("h2",{attrs:{id:"-"}},[s._v("编写应用逻辑")]),n("p",[s._v("下一步就是为 Todo API 编写真正的应用代码。我们会运行自动测试用例，一直重构，直到所有单元测试都通过。")]),n("h2",{attrs:{id:"-"}},[s._v("配置路由")]),n("p",[s._v("对客户端和服务端的 web 应用来说，路由配置是最重要的一部分。在我们的应用中，使用 Express Router 的实例来处理所有路由。来给我们的应用创建路由。")]),n("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"pre-area",attrs:{width:"0",height:"0"}},[s._v("<code class=\"hljs lang-javascript\">%3Cspan%20class%3D%22hljs-keyword%22%3Evar%3C%2Fspan%3E%20express%20%3D%20%3Cspan%20class%3D%22hljs-built_in%22%3Erequire%3C%2Fspan%3E(%3Cspan%20class%3D%22hljs-string%22%3E'express'%3C%2Fspan%3E)%3B%0A%3Cspan%20class%3D%22hljs-keyword%22%3Evar%3C%2Fspan%3E%20router%20%3D%20express.Router()%3B%0A%0A%3Cspan%20class%3D%22hljs-keyword%22%3Evar%3C%2Fspan%3E%20Todo%20%3D%20%3Cspan%20class%3D%22hljs-built_in%22%3Erequire%3C%2Fspan%3E(%3Cspan%20class%3D%22hljs-string%22%3E'..%2Fmodels%2Ftodo.model'%3C%2Fspan%3E)%3B%0A%3Cspan%20class%3D%22hljs-keyword%22%3Evar%3C%2Fspan%3E%20TodoController%20%3D%20%3Cspan%20class%3D%22hljs-built_in%22%3Erequire%3C%2Fspan%3E(%3Cspan%20class%3D%22hljs-string%22%3E'..%2Fcontrollers%2Ftodo.controller'%3C%2Fspan%3E)(Todo)%3B%0A%0A%3Cspan%20class%3D%22hljs-comment%22%3E%2F%2F%20Get%20all%20Todo%3C%2Fspan%3E%0Arouter.get(%3Cspan%20class%3D%22hljs-string%22%3E'%2Ftodo'%3C%2Fspan%3E%2C%20TodoController.GetTodo)%3B%0A%0A%3Cspan%20class%3D%22hljs-comment%22%3E%2F%2F%20Create%20new%20Todo%3C%2Fspan%3E%0Arouter.post(%3Cspan%20class%3D%22hljs-string%22%3E'%2Ftodo'%3C%2Fspan%3E%2C%20TodoController.PostTodo)%3B%0A%0A%3Cspan%20class%3D%22hljs-comment%22%3E%2F%2F%20Delete%20a%20todo%20based%20on%20%3Aid%3C%2Fspan%3E%0Arouter.delete(%3Cspan%20class%3D%22hljs-string%22%3E'%2Ftodo%2F%3Aid'%3C%2Fspan%3E%2C%20TodoController.DeleteTodo)%3B%0A%0A%3Cspan%20class%3D%22hljs-comment%22%3E%2F%2F%20Update%20a%20todo%20based%20on%20%3Aid%3C%2Fspan%3E%0Arouter.put(%3Cspan%20class%3D%22hljs-string%22%3E'%2Ftodo%2F%3Aid'%3C%2Fspan%3E%2C%20TodoController.UpdateTodo)%3B%0A%0A%3Cspan%20class%3D%22hljs-built_in%22%3Emodule%3C%2Fspan%3E.exports%20%3D%20router%3B</code>")]),n("h3",{attrs:{id:"controller-"}},[s._v("Controller（控制器）")]),n("p",[s._v("现在我们差不多在教程的最后阶段了，开始来写控制器代码。在典型的 web 应用里，controller 控制着保存、检索数据的主要逻辑，还要做验证。来写Todo API 真正的控制器，运行自动化单元测试直至测试用例全部通过。")]),n("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"pre-area",attrs:{width:"0",height:"0"}},[s._v("<code class=\"hljs lang-javascript\">%20%20%20%20%3Cspan%20class%3D%22hljs-keyword%22%3Evar%3C%2Fspan%3E%20Todo%20%3D%20%3Cspan%20class%3D%22hljs-built_in%22%3Erequire%3C%2Fspan%3E(%3Cspan%20class%3D%22hljs-string%22%3E'..%2Fmodels%2Ftodo.model'%3C%2Fspan%3E)%3B%0A%0A%20%20%20%20%3Cspan%20class%3D%22hljs-keyword%22%3Evar%3C%2Fspan%3E%20TodoCtrl%20%3D%20%7B%0A%20%20%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-comment%22%3E%2F%2F%20Get%20all%20todos%20from%20the%20Database%3C%2Fspan%3E%0A%20%20%20%20%20%20%20%20GetTodo%3A%20%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-keyword%22%3Efunction%3C%2Fspan%3E(%3Cspan%20class%3D%22hljs-params%22%3Ereq%2C%20res%3C%2Fspan%3E)%3C%2Fspan%3E%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20Todo.find(%7B%7D%2C%20%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-keyword%22%3Efunction%3C%2Fspan%3E(%3Cspan%20class%3D%22hljs-params%22%3Eerr%2C%20todos%3C%2Fspan%3E)%3C%2Fspan%3E%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-keyword%22%3Eif%3C%2Fspan%3E(err)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20res.json(%7B%3Cspan%20class%3D%22hljs-attr%22%3Estatus%3C%2Fspan%3E%3A%20%3Cspan%20class%3D%22hljs-literal%22%3Efalse%3C%2Fspan%3E%2C%20%3Cspan%20class%3D%22hljs-attr%22%3Eerror%3C%2Fspan%3E%3A%20%3Cspan%20class%3D%22hljs-string%22%3E%22Something%20went%20wrong%22%3C%2Fspan%3E%7D)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-keyword%22%3Ereturn%3C%2Fspan%3E%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20res.json(%7B%3Cspan%20class%3D%22hljs-attr%22%3Estatus%3C%2Fspan%3E%3A%20%3Cspan%20class%3D%22hljs-literal%22%3Etrue%3C%2Fspan%3E%2C%20%3Cspan%20class%3D%22hljs-attr%22%3Etodo%3C%2Fspan%3E%3A%20todos%7D)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D)%3B%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-comment%22%3E%2F%2FPost%20a%20todo%20into%20Database%3C%2Fspan%3E%0A%20%20%20%20%20%20%20%20PostTodo%3A%20%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-keyword%22%3Efunction%3C%2Fspan%3E(%3Cspan%20class%3D%22hljs-params%22%3Ereq%2C%20res%3C%2Fspan%3E)%3C%2Fspan%3E%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-keyword%22%3Evar%3C%2Fspan%3E%20todo%20%3D%20%3Cspan%20class%3D%22hljs-keyword%22%3Enew%3C%2Fspan%3E%20Todo(req.body)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20todo.save(%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-keyword%22%3Efunction%3C%2Fspan%3E(%3Cspan%20class%3D%22hljs-params%22%3Eerr%2C%20todo%3C%2Fspan%3E)%3C%2Fspan%3E%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-keyword%22%3Eif%3C%2Fspan%3E(err)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20res.json(%7B%3Cspan%20class%3D%22hljs-attr%22%3Estatus%3C%2Fspan%3E%3A%20%3Cspan%20class%3D%22hljs-literal%22%3Efalse%3C%2Fspan%3E%2C%20%3Cspan%20class%3D%22hljs-attr%22%3Eerror%3C%2Fspan%3E%3A%20%3Cspan%20class%3D%22hljs-string%22%3E%22Something%20went%20wrong%22%3C%2Fspan%3E%7D)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-keyword%22%3Ereturn%3C%2Fspan%3E%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20res.json(%7B%3Cspan%20class%3D%22hljs-attr%22%3Estatus%3C%2Fspan%3E%3A%20%3Cspan%20class%3D%22hljs-literal%22%3Etrue%3C%2Fspan%3E%2C%20%3Cspan%20class%3D%22hljs-attr%22%3Emessage%3C%2Fspan%3E%3A%20%3Cspan%20class%3D%22hljs-string%22%3E%22Todo%20Saved!!%22%3C%2Fspan%3E%7D)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D)%3B%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-comment%22%3E%2F%2FUpdating%20a%20todo%20status%20based%20on%20an%20ID%3C%2Fspan%3E%0A%20%20%20%20%20%20%20%20UpdateTodo%3A%20%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-keyword%22%3Efunction%3C%2Fspan%3E(%3Cspan%20class%3D%22hljs-params%22%3Ereq%2C%20res%3C%2Fspan%3E)%3C%2Fspan%3E%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-keyword%22%3Evar%3C%2Fspan%3E%20completed%20%3D%20req.body.completed%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20Todo.findById(req.params.id%2C%20%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-keyword%22%3Efunction%3C%2Fspan%3E(%3Cspan%20class%3D%22hljs-params%22%3Eerr%2C%20todo%3C%2Fspan%3E)%3C%2Fspan%3E%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20todo.completed%20%3D%20completed%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20todo.save(%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-keyword%22%3Efunction%3C%2Fspan%3E(%3Cspan%20class%3D%22hljs-params%22%3Eerr%2C%20todo%3C%2Fspan%3E)%3C%2Fspan%3E%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-keyword%22%3Eif%3C%2Fspan%3E(err)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20res.json(%7B%3Cspan%20class%3D%22hljs-attr%22%3Estatus%3C%2Fspan%3E%3A%20%3Cspan%20class%3D%22hljs-literal%22%3Efalse%3C%2Fspan%3E%2C%20%3Cspan%20class%3D%22hljs-attr%22%3Eerror%3C%2Fspan%3E%3A%20%3Cspan%20class%3D%22hljs-string%22%3E%22Status%20not%20updated%22%3C%2Fspan%3E%7D)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20res.json(%7B%3Cspan%20class%3D%22hljs-attr%22%3Estatus%3C%2Fspan%3E%3A%20%3Cspan%20class%3D%22hljs-literal%22%3Etrue%3C%2Fspan%3E%2C%20%3Cspan%20class%3D%22hljs-attr%22%3Emessage%3C%2Fspan%3E%3A%20%3Cspan%20class%3D%22hljs-string%22%3E%22Status%20updated%20successfully%22%3C%2Fspan%3E%7D)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D)%3B%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-comment%22%3E%2F%2F%20Deleting%20a%20todo%20baed%20on%20an%20ID%3C%2Fspan%3E%0A%20%20%20%20%20%20%20%20DeleteTodo%3A%20%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-keyword%22%3Efunction%3C%2Fspan%3E(%3Cspan%20class%3D%22hljs-params%22%3Ereq%2C%20res%3C%2Fspan%3E)%3C%2Fspan%3E%7B%0A%20%20%20%20%20%20%20%20%20%20Todo.remove(%7B%3Cspan%20class%3D%22hljs-attr%22%3E_id%3C%2Fspan%3E%3A%20req.params.id%7D%2C%20%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-keyword%22%3Efunction%3C%2Fspan%3E(%3Cspan%20class%3D%22hljs-params%22%3Eerr%2C%20todos%3C%2Fspan%3E)%3C%2Fspan%3E%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-keyword%22%3Eif%3C%2Fspan%3E(err)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20res.json(%7B%3Cspan%20class%3D%22hljs-attr%22%3Estatus%3C%2Fspan%3E%3A%20%3Cspan%20class%3D%22hljs-literal%22%3Efalse%3C%2Fspan%3E%2C%20%3Cspan%20class%3D%22hljs-attr%22%3Eerror%3C%2Fspan%3E%3A%20%3Cspan%20class%3D%22hljs-string%22%3E%22Deleting%20todo%20is%20not%20successfull%22%3C%2Fspan%3E%7D)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-keyword%22%3Ereturn%3C%2Fspan%3E%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20res.json(%7B%3Cspan%20class%3D%22hljs-attr%22%3Estatus%3C%2Fspan%3E%3A%20%3Cspan%20class%3D%22hljs-literal%22%3Etrue%3C%2Fspan%3E%2C%20%3Cspan%20class%3D%22hljs-attr%22%3Emessage%3C%2Fspan%3E%3A%20%3Cspan%20class%3D%22hljs-string%22%3E%22Todo%20deleted%20successfully!!%22%3C%2Fspan%3E%7D)%3B%0A%20%20%20%20%20%20%20%20%20%20%7D)%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%3Cspan%20class%3D%22hljs-built_in%22%3Emodule%3C%2Fspan%3E.exports%20%3D%20TodoCtrl%3B</code>")]),n("h2",{attrs:{id:"-"}},[s._v("运行测试用例")]),n("p",[s._v("现在我们完成了应用的测试用例和控制器逻辑两部分。来跑一下测试，看看最终结果：")]),n("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"pre-area",attrs:{width:"0",height:"0"}},[s._v('<code class="hljs lang-bash">%26gt%3B%20npm%20%3Cspan%20class%3D%22hljs-built_in%22%3Etest%3C%2Fspan%3E%0A%20%20Unit%20%3Cspan%20class%3D%22hljs-built_in%22%3Etest%3C%2Fspan%3E%20%3Cspan%20class%3D%22hljs-keyword%22%3Efor%3C%2Fspan%3E%20Todo%20API%0A%20%20%20%20Get%20all%20todo%0A%20%20%20%20%20%20%E2%9C%93%20should%20%3Cspan%20class%3D%22hljs-built_in%22%3Ereturn%3C%2Fspan%3E%20all%20todo%0A%20%20%20%20%20%20%E2%9C%93%20should%20%3Cspan%20class%3D%22hljs-built_in%22%3Ereturn%3C%2Fspan%3E%20error%0A%20%20%20%20Post%20a%20new%20todo%0A%20%20%20%20%20%20%E2%9C%93%20should%20create%20new%20post%0A%20%20%20%20%20%20%E2%9C%93%20should%20%3Cspan%20class%3D%22hljs-built_in%22%3Ereturn%3C%2Fspan%3E%20error%2C%20%3Cspan%20class%3D%22hljs-keyword%22%3Eif%3C%2Fspan%3E%20post%20not%20saved%0A%20%20%20%20Update%20a%20new%20todo%20by%20id%0A%20%20%20%20%20%20%E2%9C%93%20should%20updated%20a%20todo%20by%20id%0A%20%20%20%20%20%20%E2%9C%93%20should%20%3Cspan%20class%3D%22hljs-built_in%22%3Ereturn%3C%2Fspan%3E%20error%20%3Cspan%20class%3D%22hljs-keyword%22%3Eif%3C%2Fspan%3E%20update%20action%20is%20failed%0A%20%20%20%20Delete%20a%20todo%20by%20id%0A%20%20%20%20%20%20%E2%9C%93%20should%20delete%20a%20todo%20by%20id%0A%20%20%20%20%20%20%E2%9C%93%20should%20%3Cspan%20class%3D%22hljs-built_in%22%3Ereturn%3C%2Fspan%3E%20error%20%3Cspan%20class%3D%22hljs-keyword%22%3Eif%3C%2Fspan%3E%20delete%20action%20is%20failed%0A%0A%20%208%20passing%20(34ms)</code>')]),n("p",[s._v("最终结果显示，我们所有的测试用例都通过了。接下来的步骤应该是 API 重构，这包含着重复本教程提到的相同过程。")]),n("h2",{attrs:{id:"-"}},[s._v("结论")]),n("p",[s._v("通过本教程，我们学习了如果使用测试驱动开发的办法，用 Node.js and MongoDB 设计 API。尽管 TDD （测试驱动开发）给开发过程带来了额外复杂度，它能帮我们建立更稳定的、错误更少的应用。就算你不想实践 TDD， 至少也应该编写覆盖应用所有功能点的测试。")]),n("p",[s._v("如果你有任何问题或想法，请不吝留言。")])])]),s.post.prev.title||s.post.next.title?n("nav",{staticClass:"pagination"},[s.post.prev.title?n("nuxt-link",{staticClass:"prev",attrs:{to:"/post/"+s.post.prev.pathname,title:s.post.prev.title}},[s._v("« "+s._s(s.post.prev.title))]):s._e(),s.post.next.title?n("nuxt-link",{staticClass:"next",attrs:{to:"/post/"+s.post.next.pathname,title:s.post.next.title}},[s._v(s._s(s.post.next.title)+" »")]):s._e()],1):s._e(),n("gitalk",{attrs:{tags:s.tags}})],1)};e._withStripped=!0;var t={render:e,staticRenderFns:[function(){var s=this.$createElement,a=this._self._c||s;return a("ul",[a("li",[a("p",[this._v("首先一个概念，单元测试是低层次的，专注于软件系统的一小部分；")])]),a("li",[a("p",[this._v("其次，单元测试通常是由程序员使用常规工具自己编写的 —— 唯一的区别是使用某种单元测试框架；")])]),a("li",[a("p",[this._v("再次，单元测试预计比其他类型的测试显著地更快。")])])])},function(){var s=this.$createElement,a=this._self._c||s;return a("ul",[a("li",[this._v("Express.js")]),a("li",[this._v("MongoDB")]),a("li",[this._v("Mocha")]),a("li",[this._v("Chai")]),a("li",[this._v("Sinon.js")])])},function(){var s=this.$createElement,a=this._self._c||s;return a("p",[this._v("在软件项目中，没有最好的应用架构。本教程使用的文件结构，请看该 "),a("a",{attrs:{href:"https://github.com/rajzshkr/todoapi",target:"_blank"}},[this._v("GitHub")]),this._v(" 仓库。")])},function(){var s=this.$createElement,a=this._self._c||s;return a("p",[this._v("Node.js 有自己的包管理工具 "),a("a",{attrs:{href:"https://www.npmjs.com/",target:"_blank"}},[this._v("NPM")]),this._v("。要学习更多关于 NPM 的知识，可以看我们的另一篇教程，"),a("a",{attrs:{href:"https://semaphoreci.com/community/tutorials/npm-node-js-package-manager",target:"_blank"}},[this._v("《Node.js Package Manager tutorial》")]),this._v("。")])}]};a.a=t},ygMp:function(s,a,n){"use strict";Object.defineProperty(a,"__esModule",{value:!0});var e=n("XLX/"),t=n("ntee"),o=n("VU/8")(e.a,t.a,!1,null,null,null);o.options.__file="pages/post/todo-api-with-unit-test.vue",a.default=o.exports}});
webpackJsonp([31],{"/OgI":function(s,a,t){"use strict";var e=function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("div",{attrs:{id:"page-post"}},[t("article",{staticClass:"post detail"},[t("div",{staticClass:"meta"},[t("div",{staticClass:"date"},[s._v(s._s(s.post.create_time))])]),t("h1",{staticClass:"title"},[s._v(s._s(s.post.title))]),t("div",{staticClass:"entry-content"},[s.post.translation?t("blockquote",[t("p",{staticStyle:{"white-space":"nowrap",overflow:"hidden","text-overflow":"ellipsis"}},[s._v("\n        原文作者: "),t("a",{attrs:{href:s.post.translation.social,target:"_blank"}},[s._v(s._s(s.post.translation.author))]),t("br"),s._v("\n        原文地址: "),t("a",{attrs:{href:s.post.translation.from}},[s._v(s._s(s.post.translation.from))]),t("br"),s._v("\n        译文地址: "),t("a",{attrs:{href:s.post_url}},[s._v(s._s(s.post_url))]),t("br"),s._v("\n        本文由 "),t("a",{attrs:{href:this.$config.site_url}},[s._v(s._s(this.$config.site_owner))]),s._v(" 翻译，转载请保留此声明。"),t("br"),s._v("\n        著作权属于原作者，本译文仅用于学习、研究和交流目的，请勿用于商业目的。\n        ")])]):s._e(),t("p",[s._v("大家都知道在不同浏览器上测试代码有多重要。多数时候我会觉得，开发者社区中的朋友们这一点做得非常棒 —— 至少是在初次发布项目的时候。")]),t("p",[s._v("测试做得不好的是在每次修改代码的时候。")]),t("p",[s._v("我个人也为此内疚。“自动化、跨浏览器的 JavaScript 单元测试”，这在我的 todo list 中已陈列数年，可每次坐下来打算认真弄明白时，又放弃了。我知道，有一部分是惰性所致，不过此话题的优质信息的惊人匮乏也难辞其咎。")]),t("p",[s._v("有很多工具和框架（如 Karma）声称“使自动化，JavaScript 测试变简单”，但经验告诉我，这些工具所引入的复杂度，远超出它们所摆脱的麻烦（待会儿再细说）。在我的经验中，只要“工作就行”的工具，对专家来说是很好，不过学起来麻烦。我想要的是，理解这个过程在底层如何工作，这样万一测试程序挂掉（该来的最后总会来），我也能修复它。")]),t("p",[s._v("对我来说，理解工作原理的最佳方法就是从头开始重造一遍。因此，我决定自己来造轮子，与社区分享我所学到的东西。")]),t("p",[s._v("我写这篇文章，因为这正是几年前我刚开始发布开源项目时希望找到的。如果你自己从来没试过自动化、跨浏览器的 JavaScript 单元测试，但一直想学，那本文就是为你而写的。本文会向你解释整个工作过程，展示如何动手。")]),t("h2",{attrs:{id:"-"}},[s._v("手动测试")]),t("p",[s._v("在介绍自动化测试之前，我觉得有必要了解同样的页面在手动测试中是怎样的。")]),t("p",[s._v("毕竟，自动化就是使用机器以解决现有工作流中的重复部分。没有完整了解手动测试，就想开始玩自动化，也不太可能理解自动化流程。")]),t("p",[s._v("在手动测试中，在测试文件中编写测试用例，可能像下面这样：")]),t("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"pre-area",attrs:{width:"0",height:"0"}},[s._v("<code class=\"hljs lang-js\">%3Cspan%20class%3D%22hljs-keyword%22%3Evar%3C%2Fspan%3E%20assert%20%3D%20%3Cspan%20class%3D%22hljs-built_in%22%3Erequire%3C%2Fspan%3E(%3Cspan%20class%3D%22hljs-string%22%3E'assert'%3C%2Fspan%3E)%3B%0A%3Cspan%20class%3D%22hljs-keyword%22%3Evar%3C%2Fspan%3E%20SomeClass%20%3D%20%3Cspan%20class%3D%22hljs-built_in%22%3Erequire%3C%2Fspan%3E(%3Cspan%20class%3D%22hljs-string%22%3E'..%2Flib%2Fsome-class'%3C%2Fspan%3E)%3B%0A%0Adescribe(%3Cspan%20class%3D%22hljs-string%22%3E'SomeClass'%3C%2Fspan%3E%2C%20%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-keyword%22%3Efunction%3C%2Fspan%3E(%3Cspan%20class%3D%22hljs-params%22%3E%3C%2Fspan%3E)%20%3C%2Fspan%3E%7B%0A%20%20describe(%3Cspan%20class%3D%22hljs-string%22%3E'someMethod'%3C%2Fspan%3E%2C%20%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-keyword%22%3Efunction%3C%2Fspan%3E(%3Cspan%20class%3D%22hljs-params%22%3E%3C%2Fspan%3E)%20%3C%2Fspan%3E%7B%0A%20%20%20%20it(%3Cspan%20class%3D%22hljs-string%22%3E'accepts%20thing%20A%20and%20transforms%20it%20into%20thing%20B'%3C%2Fspan%3E%2C%20%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-keyword%22%3Efunction%3C%2Fspan%3E(%3Cspan%20class%3D%22hljs-params%22%3E%3C%2Fspan%3E)%20%3C%2Fspan%3E%7B%0A%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-keyword%22%3Evar%3C%2Fspan%3E%20sc%20%3D%20%3Cspan%20class%3D%22hljs-keyword%22%3Enew%3C%2Fspan%3E%20SomeClass()%3B%0A%20%20%20%20%20%20assert.equal(sc.someMethod(%3Cspan%20class%3D%22hljs-string%22%3E'A'%3C%2Fspan%3E)%2C%20%3Cspan%20class%3D%22hljs-string%22%3E'B'%3C%2Fspan%3E)%3B%0A%20%20%20%20%7D)%3B%0A%20%20%7D)%3B%0A%7D)%3B</code>")]),t("p",[s._v("上面这个例子使用 "),t("a",{attrs:{href:"https://mochajs.org/",target:"_blank"}},[s._v("Mocha")]),s._v(" 和 Node.js 的 "),t("a",{attrs:{href:"https://nodejs.org/api/assert.html",target:"_blank"}},[t("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("assert")])]),s._v(" 模块，不过使用哪种测试或断言库并不是那么重要，用什么都行。")]),t("p",[s._v("Mocha 在 Node.js 中运行，你可能会在命令行中运行下面的命令：")]),t("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"pre-area",attrs:{width:"0",height:"0"}},[s._v('<code class="hljs lang-bash">mocha%20%3Cspan%20class%3D%22hljs-built_in%22%3Etest%3C%2Fspan%3E%2Fsome-class-test.js</code>')]),t("p",[s._v("要在浏览器中运行测试，需要一个 HTML 文件，文件中用 script 标签来加载脚本；又因为浏览器不理解 "),t("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("require")]),s._v(" 声明，你还需要一个像 "),t("a",{attrs:{href:"http://browserify.org/",target:"_blank"}},[s._v("browserify")]),s._v(" 或 "),t("a",{attrs:{href:"https://webpack.github.io/",target:"_blank"}},[s._v("webpack")]),s._v(" 这样的模块打包工具来解析依赖。")]),t("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"pre-area",attrs:{width:"0",height:"0"}},[s._v('<code class="hljs lang-bash">browserify%20%3Cspan%20class%3D%22hljs-built_in%22%3Etest%3C%2Fspan%3E%2F*-test.js%20%26gt%3B%20%3Cspan%20class%3D%22hljs-built_in%22%3Etest%3C%2Fspan%3E%2Findex.js</code>')]),s._m(0),t("p",[s._v("通常使用 Mocha 的测试文件长这样：")]),t("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"pre-area",attrs:{width:"0",height:"0"}},[s._v("<code class=\"hljs lang-html\">%3Cspan%20class%3D%22hljs-meta%22%3E%26lt%3B!DOCTYPE%20html%26gt%3B%3C%2Fspan%3E%0A%3Cspan%20class%3D%22hljs-tag%22%3E%26lt%3B%3Cspan%20class%3D%22hljs-name%22%3Ehtml%3C%2Fspan%3E%26gt%3B%3C%2Fspan%3E%0A%3Cspan%20class%3D%22hljs-tag%22%3E%26lt%3B%3Cspan%20class%3D%22hljs-name%22%3Ehead%3C%2Fspan%3E%26gt%3B%3C%2Fspan%3E%0A%20%20%3Cspan%20class%3D%22hljs-tag%22%3E%26lt%3B%3Cspan%20class%3D%22hljs-name%22%3Emeta%3C%2Fspan%3E%20%3Cspan%20class%3D%22hljs-attr%22%3Echarset%3C%2Fspan%3E%3D%3Cspan%20class%3D%22hljs-string%22%3E%22utf-8%22%3C%2Fspan%3E%26gt%3B%3C%2Fspan%3E%0A%20%20%3Cspan%20class%3D%22hljs-tag%22%3E%26lt%3B%3Cspan%20class%3D%22hljs-name%22%3Etitle%3C%2Fspan%3E%26gt%3B%3C%2Fspan%3ETests%3Cspan%20class%3D%22hljs-tag%22%3E%26lt%3B%2F%3Cspan%20class%3D%22hljs-name%22%3Etitle%3C%2Fspan%3E%26gt%3B%3C%2Fspan%3E%0A%20%20%3Cspan%20class%3D%22hljs-tag%22%3E%26lt%3B%3Cspan%20class%3D%22hljs-name%22%3Elink%3C%2Fspan%3E%20%3Cspan%20class%3D%22hljs-attr%22%3Ehref%3C%2Fspan%3E%3D%3Cspan%20class%3D%22hljs-string%22%3E%22..%2Fnode_modules%2Fmocha%2Fmocha.css%22%3C%2Fspan%3E%20%3Cspan%20class%3D%22hljs-attr%22%3Erel%3C%2Fspan%3E%3D%3Cspan%20class%3D%22hljs-string%22%3E%22stylesheet%22%3C%2Fspan%3E%20%2F%26gt%3B%3C%2Fspan%3E%0A%20%20%3Cspan%20class%3D%22hljs-tag%22%3E%26lt%3B%3Cspan%20class%3D%22hljs-name%22%3Escript%3C%2Fspan%3E%20%3Cspan%20class%3D%22hljs-attr%22%3Esrc%3C%2Fspan%3E%3D%3Cspan%20class%3D%22hljs-string%22%3E%22..%2Fnode_modules%2Fmocha%2Fmocha.js%22%3C%2Fspan%3E%26gt%3B%3C%2Fspan%3E%3Cspan%20class%3D%22undefined%22%3E%3C%2Fspan%3E%3Cspan%20class%3D%22hljs-tag%22%3E%26lt%3B%2F%3Cspan%20class%3D%22hljs-name%22%3Escript%3C%2Fspan%3E%26gt%3B%3C%2Fspan%3E%0A%3Cspan%20class%3D%22hljs-tag%22%3E%26lt%3B%2F%3Cspan%20class%3D%22hljs-name%22%3Ehead%3C%2Fspan%3E%26gt%3B%3C%2Fspan%3E%0A%3Cspan%20class%3D%22hljs-tag%22%3E%26lt%3B%3Cspan%20class%3D%22hljs-name%22%3Ebody%3C%2Fspan%3E%26gt%3B%3C%2Fspan%3E%0A%0A%20%20%3Cspan%20class%3D%22hljs-comment%22%3E%26lt%3B!--%20A%20container%20element%20for%20the%20visual%20Mocha%20results%20--%26gt%3B%3C%2Fspan%3E%0A%20%20%3Cspan%20class%3D%22hljs-tag%22%3E%26lt%3B%3Cspan%20class%3D%22hljs-name%22%3Ediv%3C%2Fspan%3E%20%3Cspan%20class%3D%22hljs-attr%22%3Eid%3C%2Fspan%3E%3D%3Cspan%20class%3D%22hljs-string%22%3E%22mocha%22%3C%2Fspan%3E%26gt%3B%3C%2Fspan%3E%3Cspan%20class%3D%22hljs-tag%22%3E%26lt%3B%2F%3Cspan%20class%3D%22hljs-name%22%3Ediv%3C%2Fspan%3E%26gt%3B%3C%2Fspan%3E%0A%0A%20%20%3Cspan%20class%3D%22hljs-comment%22%3E%26lt%3B!--%20Mocha%20setup%20and%20initiation%20code%20--%26gt%3B%3C%2Fspan%3E%0A%20%20%3Cspan%20class%3D%22hljs-tag%22%3E%26lt%3B%3Cspan%20class%3D%22hljs-name%22%3Escript%3C%2Fspan%3E%26gt%3B%3C%2Fspan%3E%3Cspan%20class%3D%22javascript%22%3E%0A%20%20mocha.setup(%3Cspan%20class%3D%22hljs-string%22%3E'bdd'%3C%2Fspan%3E)%3B%0A%20%20%3Cspan%20class%3D%22hljs-built_in%22%3Ewindow%3C%2Fspan%3E.onload%20%3D%20%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-keyword%22%3Efunction%3C%2Fspan%3E(%3Cspan%20class%3D%22hljs-params%22%3E%3C%2Fspan%3E)%20%3C%2Fspan%3E%7B%0A%20%20%20%20mocha.run()%3B%0A%20%20%7D%3B%0A%20%20%3C%2Fspan%3E%3Cspan%20class%3D%22hljs-tag%22%3E%26lt%3B%2F%3Cspan%20class%3D%22hljs-name%22%3Escript%3C%2Fspan%3E%26gt%3B%3C%2Fspan%3E%0A%0A%20%20%3Cspan%20class%3D%22hljs-comment%22%3E%26lt%3B!--%20The%20script%20under%20test%20--%26gt%3B%3C%2Fspan%3E%0A%20%20%3Cspan%20class%3D%22hljs-tag%22%3E%26lt%3B%3Cspan%20class%3D%22hljs-name%22%3Escript%3C%2Fspan%3E%20%3Cspan%20class%3D%22hljs-attr%22%3Esrc%3C%2Fspan%3E%3D%3Cspan%20class%3D%22hljs-string%22%3E%22index.js%22%3C%2Fspan%3E%26gt%3B%3C%2Fspan%3E%3Cspan%20class%3D%22undefined%22%3E%3C%2Fspan%3E%3Cspan%20class%3D%22hljs-tag%22%3E%26lt%3B%2F%3Cspan%20class%3D%22hljs-name%22%3Escript%3C%2Fspan%3E%26gt%3B%3C%2Fspan%3E%0A%0A%3Cspan%20class%3D%22hljs-tag%22%3E%26lt%3B%2F%3Cspan%20class%3D%22hljs-name%22%3Ebody%3C%2Fspan%3E%26gt%3B%3C%2Fspan%3E%0A%3Cspan%20class%3D%22hljs-tag%22%3E%26lt%3B%2F%3Cspan%20class%3D%22hljs-name%22%3Ehtml%3C%2Fspan%3E%26gt%3B%3C%2Fspan%3E</code>")]),t("p",[s._v("如果你没在用 Node.js，那起步的时候你所做的可能就已经和上面的文件差不多，唯一的区别是所有的依赖可能是通过一个个 script 标签列出来的。")]),t("h3",{attrs:{id:"-"}},[s._v("检测错误")]),t("p",[s._v("测试框架可以知道测试是不是失败了，因为任何适合只要断言结果不是 true，断言库就会抛出错误。测试框架在 try/catch 代码块中运行每条测试，这样就能捕获任何可能抛出的错误，然后通过网页显示或者控制台打印出错误。")]),t("p",[s._v("多数测试框架（如 Mocha）提供钩子（hooks），以便连通测试过程，使页面中其他脚本也能访问测试结果。对自动化测试来说，这是很重要的一个特性，因为自动化测试要工作，就得从测试脚本中拿到结果。")]),t("h3",{attrs:{id:"-"}},[s._v("手动测试的好处")]),t("p",[s._v("在浏览器中手动测试的很大的一点好处是，如果某个测试没有通过，可以使用浏览器的开发者工具 debug。")]),t("p",[s._v("简单的代码如下：")]),t("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"pre-area",attrs:{width:"0",height:"0"}},[s._v("<code class=\"hljs lang-js\">describe(%3Cspan%20class%3D%22hljs-string%22%3E'SomeClass'%3C%2Fspan%3E%2C%20()%20%3D%26gt%3B%20%7B%0A%20%20describe(%3Cspan%20class%3D%22hljs-string%22%3E'someMethod'%3C%2Fspan%3E%2C%20()%20%3D%26gt%3B%20%7B%0A%20%20%20%20it(%3Cspan%20class%3D%22hljs-string%22%3E'accepts%20thing%20A%20and%20transforms%20it%20into%20thing%20B'%3C%2Fspan%3E%2C%20()%20%3D%26gt%3B%20%7B%0A%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-keyword%22%3Econst%3C%2Fspan%3E%20sc%20%3D%20%3Cspan%20class%3D%22hljs-keyword%22%3Enew%3C%2Fspan%3E%20SomeClass()%3B%0A%0A%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-keyword%22%3Edebugger%3C%2Fspan%3E%3B%0A%20%20%20%20%20%20assert.equal(sc.someMethod(%3Cspan%20class%3D%22hljs-string%22%3E'A'%3C%2Fspan%3E)%2C%20%3Cspan%20class%3D%22hljs-string%22%3E'B'%3C%2Fspan%3E)%3B%0A%20%20%20%20%7D)%3B%0A%20%20%7D)%3B%0A%7D)%3B</code>")]),t("p",[s._v("重新打包，打开浏览器开发者工具，刷新页面，然后就能单步调试代码，轻松地跟踪问题的根源。")]),t("p",[s._v("与此形成对比的是，多数现有的流行的自动化测试框架做起来却很困难！它们提供的部分方便之处就是打包单元测试，自动生成测试的页面。")]),t("p",[s._v("在没有测试未通过之前，这也挺好，但万一有测试失败了，想要重现、在本地 debug 就没那么容易了。")]),t("h2",{attrs:{id:"-"}},[s._v("自动化测试")]),t("p",[s._v("尽管手动测试有些好处，缺点却也不少。打开几个不同的浏览器跑测试用例，每次的变动单调无趣还容易出错。更不用提，多数人都不会在本地开发机上装上所有版本的想要测试的浏览器。")]),t("p",[s._v("如果想认真测试代码，确保每次变动都能进行恰当的测试，那就需要自动化了。不管你做得多好，手动测试容易造成遗忘和忽略，最终还挺浪费时间的。")]),t("p",[s._v("不过自动化测试也有不好的地方。太多太多的自动化测试工具引入了一系列问题。构建过程稍有不同，测试稀奇古怪，错误调试起来苦不堪言。")]),t("p",[s._v("在搭建自己的自动化测试系统时，我可不想再踩坑了，也不想放弃手动测试所带来的任何便利。所以在开始之前，我决定列一个需求清单。")]),t("p",[s._v("毕竟，如果引入了新的问题，增加了复杂度，自动化系统就算不上那么成功。")]),t("h3",{attrs:{id:"-"}},[s._v("需求")]),t("ul",[t("li",[s._v("我需要通过命令行运行测试")]),t("li",[s._v("我需要在本地调试未通过的测试")]),t("li",[s._v("我需要通过 "),t("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("npm")]),s._v(" 安装所有测试依赖，这样任何人都能使用 "),t("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("npm install && npm test")]),s._v(" 使代码跑起来")]),t("li",[s._v("我希望测试过程在持续化集成（CI）机器上跑起来，和在我的开发机上一样。这样一来，构建是一样的，无需检查新的变化就能调试错误")]),t("li",[s._v("我希望所有测试能自动运行，无论何时，只要代码发生变化或是进行 pull request")])]),t("p",[s._v("脑子大概有了这个粗略的清单，接下来就该深入探究下，自动化的跨浏览器测试在流行的云测试机中是如何工作的。")]),t("h3",{attrs:{id:"-"}},[s._v("云测试如何工作")]),s._m(1),t("p",[s._v("最让我惊喜的是，开始阅读 Sauce Labs 中关于 JavaScript 单元测试文档的时候，我发现，这实际上是多么简单明了。许多测试框架号称让测试变得简单，但我却（错误地）以为那很难！")]),t("p",[s._v("之前强调了，我不想让自动化测试和手动测试有什么根本的不同。结果我发现，Sauce Labs 所提供的自动测试方法几乎和我手动测试的过程一个样。")]),t("p",[s._v("下面是测试步骤：")]),s._m(2),t("p",[s._v("就这么简单。")]),t("p",[s._v("我曾错误地以为，需要将 JavaScript 代码提交给 Sauce Labs，然后在他们的机器上运行。实际上并非如此，他们只需要你提供的 URL。这就像人工测试一样，唯一的不同是，Sauce Labs 处理打开各种浏览器的工作，并为你记录测试结果。")]),t("h3",{attrs:{id:"api"}},[s._v("API")]),t("p",[s._v("Sauce Labs 运行单元测试的 API 包括两个方法：")]),s._m(3),s._m(4),t("p",[s._v("文档中给出了使用 "),t("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("curl")]),s._v(" 的例子：")]),t("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"pre-area",attrs:{width:"0",height:"0"}},[s._v("<code class=\"hljs lang-bash\">curl%20https%3A%2F%2Fsaucelabs.com%2Frest%2Fv1%2FSAUCE_USERNAME%2Fjs-tests%20%5C%0A%20%20-X%20POST%20%5C%0A%20%20-u%20SAUCE_USERNAME%3ASAUCE_ACCESS_KEY%20%5C%0A%20%20-H%20%3Cspan%20class%3D%22hljs-string%22%3E'Content-Type%3A%20application%2Fjson'%3C%2Fspan%3E%20%5C%0A%20%20--data%20%3Cspan%20class%3D%22hljs-string%22%3E'%7B%22url%22%3A%20%22https%3A%2F%2Fexample.com%2Ftests.html%22%2C%20%20%22framework%22%3A%20%22mocha%22%2C%20%22platforms%22%3A%20%5B%5B%22Windows%207%22%2C%20%22firefox%22%2C%20%2227%22%5D%2C%20%5B%22Linux%22%2C%20%22chrome%22%2C%20%22latest%22%5D%5D%7D'%3C%2Fspan%3E</code>")]),s._m(5),t("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"pre-area",attrs:{width:"0",height:"0"}},[s._v("<code class=\"hljs lang-js\">request(%7B%0A%20%20%3Cspan%20class%3D%22hljs-attr%22%3Eurl%3C%2Fspan%3E%3A%20%3Cspan%20class%3D%22hljs-string%22%3E%60https%3A%2F%2Fsaucelabs.com%2Frest%2Fv1%2F%3Cspan%20class%3D%22hljs-subst%22%3E%24%7Busername%7D%3C%2Fspan%3E%2Fjs-tests%60%3C%2Fspan%3E%2C%0A%20%20%3Cspan%20class%3D%22hljs-attr%22%3Emethod%3C%2Fspan%3E%3A%20%3Cspan%20class%3D%22hljs-string%22%3E'POST'%3C%2Fspan%3E%2C%0A%20%20%3Cspan%20class%3D%22hljs-attr%22%3Eauth%3C%2Fspan%3E%3A%20%7B%0A%20%20%20%20%3Cspan%20class%3D%22hljs-attr%22%3Eusername%3C%2Fspan%3E%3A%20process.env.SAUCE_USERNAME%2C%0A%20%20%20%20%3Cspan%20class%3D%22hljs-attr%22%3Epassword%3C%2Fspan%3E%3A%20process.env.SAUCE_ACCESS_KEY%0A%20%20%7D%2C%0A%20%20%3Cspan%20class%3D%22hljs-attr%22%3Ejson%3C%2Fspan%3E%3A%20%3Cspan%20class%3D%22hljs-literal%22%3Etrue%3C%2Fspan%3E%2C%0A%20%20%3Cspan%20class%3D%22hljs-attr%22%3Ebody%3C%2Fspan%3E%3A%20%7B%0A%20%20%20%20%3Cspan%20class%3D%22hljs-attr%22%3Eurl%3C%2Fspan%3E%3A%20%3Cspan%20class%3D%22hljs-string%22%3E'https%3A%2F%2Fexample.com%2Ftests.html'%3C%2Fspan%3E%2C%0A%20%20%20%20%3Cspan%20class%3D%22hljs-attr%22%3Eframework%3C%2Fspan%3E%3A%20%3Cspan%20class%3D%22hljs-string%22%3E'mocha'%3C%2Fspan%3E%2C%0A%20%20%20%20%3Cspan%20class%3D%22hljs-attr%22%3Eplatforms%3C%2Fspan%3E%3A%20%5B%0A%20%20%20%20%20%20%5B%3Cspan%20class%3D%22hljs-string%22%3E'Windows%207'%3C%2Fspan%3E%2C%20%3Cspan%20class%3D%22hljs-string%22%3E'firefox'%3C%2Fspan%3E%2C%20%3Cspan%20class%3D%22hljs-string%22%3E'27'%3C%2Fspan%3E%5D%2C%0A%20%20%20%20%20%20%5B%3Cspan%20class%3D%22hljs-string%22%3E'Linux'%3C%2Fspan%3E%2C%20%3Cspan%20class%3D%22hljs-string%22%3E'chrome'%3C%2Fspan%3E%2C%20%3Cspan%20class%3D%22hljs-string%22%3E'latest'%3C%2Fspan%3E%5D%0A%20%20%20%20%5D%0A%20%20%7D%0A%7D%2C%20(err%2C%20response)%20%3D%26gt%3B%20%7B%0A%20%20%3Cspan%20class%3D%22hljs-keyword%22%3Eif%3C%2Fspan%3E%20(err)%20%7B%0A%20%20%20%20%3Cspan%20class%3D%22hljs-built_in%22%3Econsole%3C%2Fspan%3E.error(err)%3B%0A%20%20%7D%20%3Cspan%20class%3D%22hljs-keyword%22%3Eelse%3C%2Fspan%3E%20%7B%0A%20%20%20%20%3Cspan%20class%3D%22hljs-built_in%22%3Econsole%3C%2Fspan%3E.log(response.body)%3B%0A%20%20%7D%0A%7D)%3B</code>")]),t("p",[s._v("注意，在 POST 的 body 中的 "),t("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("framework: 'mocha'")]),s._v("。Sauce Labs 支持许多流行的 JavaScript 单元测试框架，如 Mocha，Jasmine，QUnit，以及 YUI。“支持”仅仅意味着，Sauce Lab 的 Webdriver 知道去哪找到测试结果（尽管多数情况下，你还是得自己填这些 —— 等会儿再细说）。")]),t("p",[s._v("如果你所使用的测试框架不在上述列表中，可以设置 "),t("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("framework: 'custom'")]),s._v("，这样 Sauce Labs 就会去寻找一个叫 "),t("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("window.global_test_results")]),s._v(" 的全局变量。结果的格式在文档的 "),t("a",{attrs:{href:"https://wiki.saucelabs.com/display/DOCS/Reporting+JavaScript+Unit+Test+Results+to+Sauce+Labs+Using+a+Custom+Framework",target:"_blank"}},[s._v("custom framework")]),s._v(" 小节中列出来了。")]),t("h4",{attrs:{id:"webdriver-mocha-"}},[s._v("Webdriver 获取 Mocha 测试结果")]),t("p",[s._v("就算一开始请求时你已经告诉 Sauce Labs 你在使用 Mocha，你还是得更新页面的 HTML，将测试结果保存在一个 Sauce Labs 能够访问的全局变量中。")]),t("p",[s._v("为支持 Mocha，将页面中的如下代码：")]),t("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"pre-area",attrs:{width:"0",height:"0"}},[s._v("<code class=\"hljs lang-html\">%3Cspan%20class%3D%22hljs-tag%22%3E%26lt%3B%3Cspan%20class%3D%22hljs-name%22%3Escript%3C%2Fspan%3E%26gt%3B%3C%2Fspan%3E%3Cspan%20class%3D%22javascript%22%3E%0Amocha.setup(%3Cspan%20class%3D%22hljs-string%22%3E'bdd'%3C%2Fspan%3E)%3B%0A%3Cspan%20class%3D%22hljs-built_in%22%3Ewindow%3C%2Fspan%3E.onload%20%3D%20%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-keyword%22%3Efunction%3C%2Fspan%3E(%3Cspan%20class%3D%22hljs-params%22%3E%3C%2Fspan%3E)%20%3C%2Fspan%3E%7B%0A%20%20mocha.run()%3B%0A%7D%3B%0A%3C%2Fspan%3E%3Cspan%20class%3D%22hljs-tag%22%3E%26lt%3B%2F%3Cspan%20class%3D%22hljs-name%22%3Escript%3C%2Fspan%3E%26gt%3B%3C%2Fspan%3E</code>")]),t("p",[s._v("修改成：")]),t("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"pre-area",attrs:{width:"0",height:"0"}},[s._v("<code class=\"hljs lang-html\">%3Cspan%20class%3D%22hljs-tag%22%3E%26lt%3B%3Cspan%20class%3D%22hljs-name%22%3Escript%3C%2Fspan%3E%26gt%3B%3C%2Fspan%3E%3Cspan%20class%3D%22javascript%22%3E%0Amocha.setup(%3Cspan%20class%3D%22hljs-string%22%3E'bdd'%3C%2Fspan%3E)%3B%0A%3Cspan%20class%3D%22hljs-built_in%22%3Ewindow%3C%2Fspan%3E.onload%20%3D%20%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-keyword%22%3Efunction%3C%2Fspan%3E(%3Cspan%20class%3D%22hljs-params%22%3E%3C%2Fspan%3E)%20%3C%2Fspan%3E%7B%0A%20%20%3Cspan%20class%3D%22hljs-keyword%22%3Evar%3C%2Fspan%3E%20runner%20%3D%20mocha.run()%3B%0A%20%20%3Cspan%20class%3D%22hljs-keyword%22%3Evar%3C%2Fspan%3E%20failedTests%20%3D%20%5B%5D%3B%0A%0A%20%20runner.on(%3Cspan%20class%3D%22hljs-string%22%3E'end'%3C%2Fspan%3E%2C%20%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-keyword%22%3Efunction%3C%2Fspan%3E(%3Cspan%20class%3D%22hljs-params%22%3E%3C%2Fspan%3E)%20%3C%2Fspan%3E%7B%0A%20%20%20%20%3Cspan%20class%3D%22hljs-built_in%22%3Ewindow%3C%2Fspan%3E.mochaResults%20%3D%20runner.stats%3B%0A%20%20%20%20%3Cspan%20class%3D%22hljs-built_in%22%3Ewindow%3C%2Fspan%3E.mochaResults.reports%20%3D%20failedTests%3B%0A%20%20%7D)%3B%0A%0A%20%20runner.on(%3Cspan%20class%3D%22hljs-string%22%3E'fail'%3C%2Fspan%3E%2C%20logFailure)%3B%0A%0A%20%20%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-keyword%22%3Efunction%3C%2Fspan%3E%20%3Cspan%20class%3D%22hljs-title%22%3ElogFailure%3C%2Fspan%3E(%3Cspan%20class%3D%22hljs-params%22%3Etest%2C%20err%3C%2Fspan%3E)%3C%2Fspan%3E%7B%0A%20%20%20%20%3Cspan%20class%3D%22hljs-keyword%22%3Evar%3C%2Fspan%3E%20flattenTitles%20%3D%20%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-keyword%22%3Efunction%3C%2Fspan%3E(%3Cspan%20class%3D%22hljs-params%22%3Etest%3C%2Fspan%3E)%3C%2Fspan%3E%7B%0A%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-keyword%22%3Evar%3C%2Fspan%3E%20titles%20%3D%20%5B%5D%3B%0A%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-keyword%22%3Ewhile%3C%2Fspan%3E%20(test.parent.title)%7B%0A%20%20%20%20%20%20%20%20titles.push(test.parent.title)%3B%0A%20%20%20%20%20%20%20%20test%20%3D%20test.parent%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-keyword%22%3Ereturn%3C%2Fspan%3E%20titles.reverse()%3B%0A%20%20%20%20%7D%3B%0A%0A%20%20%20%20failedTests.push(%7B%0A%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-attr%22%3Ename%3C%2Fspan%3E%3A%20test.title%2C%0A%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-attr%22%3Eresult%3C%2Fspan%3E%3A%20%3Cspan%20class%3D%22hljs-literal%22%3Efalse%3C%2Fspan%3E%2C%0A%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-attr%22%3Emessage%3C%2Fspan%3E%3A%20err.message%2C%0A%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-attr%22%3Estack%3C%2Fspan%3E%3A%20err.stack%2C%0A%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-attr%22%3Etitles%3C%2Fspan%3E%3A%20flattenTitles(test)%0A%20%20%20%20%7D)%3B%0A%20%20%7D%3B%0A%7D%3B%0A%3C%2Fspan%3E%3Cspan%20class%3D%22hljs-tag%22%3E%26lt%3B%2F%3Cspan%20class%3D%22hljs-name%22%3Escript%3C%2Fspan%3E%26gt%3B%3C%2Fspan%3E</code>")]),t("p",[s._v("以上代码与 Mocha 样板默认代码的唯一区别在于，该逻辑将测试结果赋值给 Sauce Labs 所期望的 "),t("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("window.mochaResults")]),s._v(" 变量。新的代码不会影响浏览器中的手动测试，所以还可以像原来一样使用。")]),t("p",[s._v("再强调此前提过的一点，Sauce Labs “运行”测试的时候，并非真正在运行什么东西，它只是访问一个网页，然后等到 "),t("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("window.mochaResults")]),s._v(" 对象被发现有值了。然后再记录结果。")]),t("h4",{attrs:{id:"-"}},[s._v("判断测试是否通过")]),s._m(6),t("p",[s._v("它所返回的仅仅只是队列中任务的 ID。响应大概像下面这样：")]),t("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"pre-area",attrs:{width:"0",height:"0"}},[s._v('<code class="hljs lang-json">%7B%0A%20%20%3Cspan%20class%3D%22hljs-attr%22%3E%22js%20tests%22%3C%2Fspan%3E%3A%20%5B%0A%20%20%20%20%3Cspan%20class%3D%22hljs-string%22%3E%229b6a2d7e6c8d4fd2afeeb0ff7e54e694%22%3C%2Fspan%3E%2C%0A%20%20%20%20%3Cspan%20class%3D%22hljs-string%22%3E%22d38688ec7256497da6966f4523ddee76%22%3C%2Fspan%3E%2C%0A%20%20%20%20%3Cspan%20class%3D%22hljs-string%22%3E%2214054e68ccd344c0bed77a798a9ce1e8%22%3C%2Fspan%3E%2C%0A%20%20%20%20%3Cspan%20class%3D%22hljs-string%22%3E%22dbc54181f7d947458f52201ea5fcb901%22%3C%2Fspan%3E%0A%20%20%5D%0A%7D</code>')]),s._m(7),t("p",[s._v("定期调用这个方法，直到所有的工作完成。")]),t("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"pre-area",attrs:{width:"0",height:"0"}},[s._v("<code class=\"hljs lang-javascript\">request(%7B%0A%20%20%3Cspan%20class%3D%22hljs-attr%22%3Eurl%3C%2Fspan%3E%3A%20%3Cspan%20class%3D%22hljs-string%22%3E%60https%3A%2F%2Fsaucelabs.com%2Frest%2Fv1%2F%3Cspan%20class%3D%22hljs-subst%22%3E%24%7Busername%7D%3C%2Fspan%3E%2Fjs-tests%2Fstatus%60%3C%2Fspan%3E%2C%0A%20%20%3Cspan%20class%3D%22hljs-attr%22%3Emethod%3C%2Fspan%3E%3A%20%3Cspan%20class%3D%22hljs-string%22%3E'POST'%3C%2Fspan%3E%2C%0A%20%20%3Cspan%20class%3D%22hljs-attr%22%3Eauth%3C%2Fspan%3E%3A%20%7B%0A%20%20%20%20%3Cspan%20class%3D%22hljs-attr%22%3Eusername%3C%2Fspan%3E%3A%20process.env.SAUCE_USERNAME%2C%0A%20%20%20%20%3Cspan%20class%3D%22hljs-attr%22%3Epassword%3C%2Fspan%3E%3A%20process.env.SAUCE_ACCESS_KEY%0A%20%20%7D%2C%0A%20%20%3Cspan%20class%3D%22hljs-attr%22%3Ejson%3C%2Fspan%3E%3A%20%3Cspan%20class%3D%22hljs-literal%22%3Etrue%3C%2Fspan%3E%2C%0A%20%20%3Cspan%20class%3D%22hljs-attr%22%3Ebody%3C%2Fspan%3E%3A%20jsTests%2C%20%3Cspan%20class%3D%22hljs-comment%22%3E%2F%2F%20The%20response.body%20from%20the%20first%20API%20call.%3C%2Fspan%3E%0A%0A%7D%2C%20(err%2C%20response)%20%3D%26gt%3B%20%7B%0A%20%20%3Cspan%20class%3D%22hljs-keyword%22%3Eif%3C%2Fspan%3E%20(err)%20%7B%0A%20%20%20%20%3Cspan%20class%3D%22hljs-built_in%22%3Econsole%3C%2Fspan%3E.error(err)%3B%0A%20%20%7D%20%3Cspan%20class%3D%22hljs-keyword%22%3Eelse%3C%2Fspan%3E%20%7B%0A%20%20%20%20%3Cspan%20class%3D%22hljs-built_in%22%3Econsole%3C%2Fspan%3E.log(response.body)%3B%0A%20%20%7D%0A%7D)%3B</code>")]),t("p",[s._v("响应大致如下：")]),t("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"pre-area",attrs:{width:"0",height:"0"}},[s._v('<code class="hljs lang-json">%7B%0A%20%20%3Cspan%20class%3D%22hljs-attr%22%3E%22completed%22%3C%2Fspan%3E%3A%20%3Cspan%20class%3D%22hljs-literal%22%3Efalse%3C%2Fspan%3E%2C%0A%20%20%3Cspan%20class%3D%22hljs-attr%22%3E%22js%20tests%22%3C%2Fspan%3E%3A%20%5B%0A%20%20%20%20%7B%0A%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-attr%22%3E%22url%22%3C%2Fspan%3E%3A%20%3Cspan%20class%3D%22hljs-string%22%3E%22https%3A%2F%2Fsaucelabs.com%2Fjobs%2F75ac4cadb85e415fae957f7811d778b8%22%3C%2Fspan%3E%2C%0A%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-attr%22%3E%22platform%22%3C%2Fspan%3E%3A%20%5B%0A%20%20%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-string%22%3E%22Windows%2010%22%3C%2Fspan%3E%2C%0A%20%20%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-string%22%3E%22chrome%22%3C%2Fspan%3E%2C%0A%20%20%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-string%22%3E%22latest%22%3C%2Fspan%3E%0A%20%20%20%20%20%20%5D%2C%0A%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-attr%22%3E%22result%22%3C%2Fspan%3E%3A%20%7B%0A%20%20%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-attr%22%3E%22passes%22%3C%2Fspan%3E%3A%20%3Cspan%20class%3D%22hljs-number%22%3E29%3C%2Fspan%3E%2C%0A%20%20%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-attr%22%3E%22tests%22%3C%2Fspan%3E%3A%20%3Cspan%20class%3D%22hljs-number%22%3E30%3C%2Fspan%3E%2C%0A%20%20%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-attr%22%3E%22end%22%3C%2Fspan%3E%3A%20%7B%7D%2C%0A%20%20%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-attr%22%3E%22suites%22%3C%2Fspan%3E%3A%20%3Cspan%20class%3D%22hljs-number%22%3E7%3C%2Fspan%3E%2C%0A%20%20%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-attr%22%3E%22reports%22%3C%2Fspan%3E%3A%20%5B%5D%2C%0A%20%20%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-attr%22%3E%22start%22%3C%2Fspan%3E%3A%20%7B%7D%2C%0A%20%20%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-attr%22%3E%22duration%22%3C%2Fspan%3E%3A%20%3Cspan%20class%3D%22hljs-number%22%3E97%3C%2Fspan%3E%2C%0A%20%20%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-attr%22%3E%22failures%22%3C%2Fspan%3E%3A%20%3Cspan%20class%3D%22hljs-number%22%3E0%3C%2Fspan%3E%2C%0A%20%20%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-attr%22%3E%22pending%22%3C%2Fspan%3E%3A%20%3Cspan%20class%3D%22hljs-number%22%3E1%3C%2Fspan%3E%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-attr%22%3E%22id%22%3C%2Fspan%3E%3A%20%3Cspan%20class%3D%22hljs-string%22%3E%221f74a237d5ba4a47b5a42570ae1e7999%22%3C%2Fspan%3E%2C%0A%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-attr%22%3E%22job_id%22%3C%2Fspan%3E%3A%20%3Cspan%20class%3D%22hljs-string%22%3E%2275ac4cadb85e415fae957f7811d778b8%22%3C%2Fspan%3E%0A%20%20%20%20%7D%2C%0A%20%20%20%20%2F%2F%20...%20the%20rest%20of%20the%20jobs%0A%20%20%5D%0A%7D</code>')]),t("p",[s._v("一旦 "),t("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("response.body.complete")]),s._v(" 属性变为 "),t("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("true")]),s._v("，所有测试结束，然后就能遍历以获取测试结果。")]),t("h3",{attrs:{id:"-localhost-"}},[s._v("通过 localhost 测试")]),t("p",[s._v("前面说过，Sauce Labs 是通过访问 URL “运行”测试的。所以这也意味着你所使用的 URL 必须是互联网上能公开访问的。")]),t("p",[s._v("这样一来，如果要通过 "),t("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("localhost")]),s._v(" 跑测试，那就有问题了。")]),s._m(8),t("p",[s._v("Sauce Connect 是按照安全的要求来设计的，通过它，外人几乎不可能访问到你的代码。不过它的一个缺点是配置、使用极其复杂。")]),t("p",[s._v("如果代码安全性很重要，Sauce Connect 可能值得一试；否则的话，还有一些更简单的类似方案。")]),s._m(9),t("h4",{attrs:{id:"ngrok"}},[s._v("ngrok")]),s._m(10),t("p",[s._v("如果你在虚拟机上做过开发或手动测试，可能已经听说过 ngrok；如果没有，建议你好好去看看。这是个非常有用的工具。")]),t("p",[s._v("在开发机上安装 ngrok，和下载二进制文件、加入到 PATH 一样简单；不过，如果你要在 Node 中使用 ngrok，最后还是通过 npm 来安装。")]),t("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"pre-area",attrs:{width:"0",height:"0"}},[s._v('<code class="hljs lang-javascript">npm%20install%20ngrok</code>')]),t("p",[s._v("在 Node 中通过以下代码，可以开启一个 ngrok 进程：")]),t("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"pre-area",attrs:{width:"0",height:"0"}},[s._v("<code class=\"hljs lang-javascript\">%3Cspan%20class%3D%22hljs-keyword%22%3Econst%3C%2Fspan%3E%20ngrok%20%3D%20%3Cspan%20class%3D%22hljs-built_in%22%3Erequire%3C%2Fspan%3E(%3Cspan%20class%3D%22hljs-string%22%3E'ngrok'%3C%2Fspan%3E)%3B%0A%0Angrok.connect(port%2C%20(err%2C%20url)%20%3D%26gt%3B%20%7B%0A%20%20%3Cspan%20class%3D%22hljs-keyword%22%3Eif%3C%2Fspan%3E%20(err)%20%7B%0A%20%20%20%20%3Cspan%20class%3D%22hljs-built_in%22%3Econsole%3C%2Fspan%3E.error(err)%3B%0A%20%20%7D%20%3Cspan%20class%3D%22hljs-keyword%22%3Eelse%3C%2Fspan%3E%20%7B%0A%20%20%20%20%3Cspan%20class%3D%22hljs-built_in%22%3Econsole%3C%2Fspan%3E.log(%3Cspan%20class%3D%22hljs-string%22%3E%60Tests%20now%20accessible%20at%3A%20%3Cspan%20class%3D%22hljs-subst%22%3E%24%7Burl%7D%3C%2Fspan%3E%60%3C%2Fspan%3E)%3B%0A%20%20%7D%0A%7D)%3B</code>")]),t("p",[s._v("一旦有了测试文件的公开 URL，使用 Sauce Labs 跨浏览器测试本地代码基本上就很简单啦！")]),t("h2",{attrs:{id:"-"}},[s._v("过程整合")]),t("p",[s._v("本文涵盖了不少话题，可能会给人以这样的印象：自动化跨浏览器的 JavaScript 单元测试很复杂。但实际上并不是这样的。")]),t("p",[s._v("文章的框架是从我的角度来设定的 —— 我在试着解决自己的问题。而且就我自己的经验来看，真正的复杂之处仅仅是因为缺乏相关信息，整个过程如何工作，如何将所有这些整合起来。")]),t("p",[s._v("如果理解了所有这些步骤，那就很简单了。总结起来就是这样：")]),s._m(11),s._m(12),s._m(13),s._m(14),t("h2",{attrs:{id:"-"}},[s._v("更简单的方式")]),t("p",[s._v("我知道本文开始的时候，我说了很多，你不需要任何框架来完成自动化、跨浏览器的 JavaScript 单元测试，我仍然坚信这一点。但尽管上述步骤很简单，你可能也并不想每个项目都重复去做。")]),t("p",[s._v("我之前也有很多想要加入自动化测试的老项目，因此对我来说，将这些逻辑打包成模块是很有意义的。")]),s._m(15),t("h3",{attrs:{id:"easy-sauce"}},[s._v("Easy Sauce")]),t("p",[t("a",{attrs:{href:"https://github.com/philipwalton/easy-sauce",target:"_blank"}},[s._v("Easy Sauce")]),s._v(" 是一个 Node 包，一个命令行工具（"),t("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("easy-sauce")]),s._v("）。它也是我现在使用的跨浏览器测试工具。")]),t("p",[t("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("easy-sauce")]),s._v(" 命令需要一个 HTML 测试文件的路径（默认为 "),t("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("/test/")]),s._v("），一个启动本地服务器的端口（默认为 "),t("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("1337")]),s._v("），以及以个测试的浏览器/平台列表。接下来 "),t("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("easy-sauce")]),s._v(" 会在 Sauce Lab 云端运行测试，将结果打印到控制台上并退出，返回合适的状态码，标明测试是否通过。")]),t("p",[s._v("为了方便 npm 包，"),t("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("easy-sauce")]),s._v(" 默认会从 "),t("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("package.json")]),s._v(" 中读取配置项，不用单纯储存它们。这样有个额外好处就是，使用你的包的用户，能够很清楚地看到你所支持的浏览器/平台。")]),t("p",[s._v("关于 "),t("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("easy-sauce")]),s._v(" 的完整使用指南，请移步 Github 上的"),t("a",{attrs:{href:"https://github.com/philipwalton/easy-sauce",target:"_blank"}},[s._v("文档")]),s._v("。")]),t("p",[s._v("最后，我想强调的是，这个项目是专门来解决的我的用例的。虽然我觉得它可能对很多其他开发者会很有用，但我无意将其调转为功能齐全的测试解决方案。")]),t("p",[t("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("easy-sauce")]),s._v(" 的整个点在于，填补了我（我相信很多开发者也是如此）与合适的测试之间的复杂性裂缝。")]),t("h2",{attrs:{id:"-"}},[s._v("总结")]),t("p",[s._v("本文开始的时候，我写了一个需求列表。有了 Easy Sauce，现在我可以满足所有我工作项目上的需求。")]),t("p",[s._v("如果你的项目还没用上自动化跨浏览器单元测试，我想鼓励你尝试下 Easy Sauce。就算你不使用它，至少你得有相关知识完成自己的解决方案，或者对现有工具有更好的理解。")]),t("p",[s._v("测试愉快！")]),s._m(16),t("p",{attrs:{id:"footnote-2"}},[s._v("\n2. ngrok 生成的 URL 是公开的，这意味着理论上网络上的任何人都可以访问。不过，URL 是随机生成的，而测试只会跑那么几分钟，某人发现它的几率相当低。虽然没有 Sauce Connect 那么安全，相对也还是安全的。\n")])])]),s.post.prev.title||s.post.next.title?t("nav",{staticClass:"pagination"},[s.post.prev.title?t("nuxt-link",{staticClass:"prev",attrs:{to:"/post/"+s.post.prev.pathname,title:s.post.prev.title}},[s._v("« "+s._s(s.post.prev.title))]):s._e(),s.post.next.title?t("nuxt-link",{staticClass:"next",attrs:{to:"/post/"+s.post.next.pathname,title:s.post.next.title}},[s._v(s._s(s.post.next.title)+" »")]):s._e()],1):s._e(),t("gitalk",{attrs:{tags:s.tags}})],1)};e._withStripped=!0;var n={render:e,staticRenderFns:[function(){var s=this.$createElement,a=this._self._c||s;return a("p",[this._v("很棒的是，这些模块打包工具会将所有测试文件（以及其他任何依赖）打包为一个文件，这样在测试页面中加载就变得简单了。"),a("a",{attrs:{href:"#footnote-1"}},[this._v("[1]")])])},function(){var s=this.$createElement,a=this._self._c||s;return a("p",[this._v("现在已经有大量提供云测试的服务商，他们各有千秋。因为我在写开源代码，所以我只看那些为开源项目提供免费计划的服务商，在这当中，"),a("a",{attrs:{href:"https://saucelabs.com/opensauce/",target:"_blank"}},[this._v("Sauce Labs")]),this._v(" 是唯一一家不需要我提供 email 就能开始新开源项目的。")])},function(){var s=this.$createElement,a=this._self._c||s;return a("ol",[a("li",[this._v("给 Sauce Labs 提供你要测试的页面地址，并告诉它你要在哪些浏览器/平台上测试;")]),a("li",[this._v("Sauce Labs 使用 "),a("a",{attrs:{href:"http://www.seleniumhq.org/projects/webdriver/",target:"_blank"}},[this._v("selenium webdriver")]),this._v(" 为你所提供的每一种浏览器/平台组合加载页面。")]),a("li",[this._v("Webdriver 检查页面是否有测试未通过，并保存结果。")]),a("li",[this._v("Sauce Labs 将结果呈现给你。")])])},function(){var s=this.$createElement,a=this._self._c||s;return a("ul",[a("li",[a("p",[a("a",{attrs:{href:"https://wiki.saucelabs.com/display/DOCS/JavaScript+Unit+Testing+Methods#JavaScriptUnitTestingMethods-StartJSUnitTests",target:"_blank"}},[this._v("开始 JS 单元测试（Start JS Unit Tests）")])])]),a("li",[a("p",[a("a",{attrs:{href:"https://wiki.saucelabs.com/display/DOCS/JavaScript+Unit+Testing+Methods#JavaScriptUnitTestingMethods-GetJSUnitTestStatus",target:"_blank"}},[this._v("获取 JS 单元测试状态（Get JS Unit Test Status）")])])])])},function(){var s=this.$createElement,a=this._self._c||s;return a("p",[a("a",{attrs:{href:"https://wiki.saucelabs.com/display/DOCS/JavaScript+Unit+Testing+Methods#JavaScriptUnitTestingMethods-StartJSUnitTests",target:"_blank"}},[this._v("开始 JS 单元测试")]),this._v(" 的方法初始化单个 HTML 页面（就是我们提供的 URL）测试，在你所提供的各种浏览器/平台组合上。")])},function(){var s=this.$createElement,a=this._self._c||s;return a("p",[this._v("因为我们要做的是 JavaScript 单元测试，我会给出使用 "),a("a",{attrs:{href:"https://www.npmjs.com/package/request",target:"_blank"}},[this._v("request")]),this._v("  node 模块的例子，如果你在使用 Node.js，这可能更接近你使用的最后结果:")])},function(){var s=this.$createElement,a=this._self._c||s;return a("p",[a("a",{attrs:{href:"https://wiki.saucelabs.com/display/DOCS/JavaScript+Unit+Testing+Methods#JavaScriptUnitTestingMethods-StartJSUnitTests",target:"_blank"}},[this._v("开始 JS 单元测试 (Start JS Unit Tests)")]),this._v(" 方法告诉 Sauce Labs 按照队列在你所要求的浏览器/平台中运行测试，但它并未范围测试结果。")])},function(){var s=this.$createElement,a=this._self._c||s;return a("p",[this._v("要判断测试是否通过，可以调用"),a("a",{attrs:{href:"https://wiki.saucelabs.com/display/DOCS/JavaScript+Unit+Testing+Methods#JavaScriptUnitTestingMethods-GetJSUnitTestStatus",target:"_blank"}},[this._v("获取 JS 单元测试状态（Get JS Unit Test Status）")]),this._v("方法，这个方面接受一个任务 ID 列表，返回每个任务的当前状态。")])},function(){var s=this.$createElement,a=this._self._c||s;return a("p",[this._v("已经有一些解决该问题的工具了，包括 "),a("a",{attrs:{href:"https://wiki.saucelabs.com/display/DOCS/Sauce+Connect+Proxy",target:"_blank"}},[this._v("Sauce Connect")]),this._v(" (官方推荐)，这是 Sauce Labs 创建的一个代理服务器，它在本地服务器与 Sauce Labs 虚拟机之间开了一个安全连接。")])},function(){var s=this.$createElement,a=this._self._c||s;return a("p",[this._v("我选择的是 "),a("a",{attrs:{href:"https://ngrok.com/",target:"_blank"}},[this._v("ngrok")]),this._v("。")])},function(){var s=this.$createElement,a=this._self._c||s;return a("p",[a("a",{attrs:{href:"https://ngrok.com/",target:"_blank"}},[this._v("ngrok")]),this._v(" 是建立与 localhost 之间的安全信道（secure tunnels）的工具。它提供一个公开的 URL"),a("a",{attrs:{href:"#footnote-2"}},[this._v("[2]")]),this._v(" 给本地的 Web 服务器，这个 URL 恰恰就是在 Sauce Labs 上运行测试所需要的。")])},function(){var s=this.$createElement,a=this._self._c||s;return a("p",[a("strong",[this._v("最初的手动过程：")])])},function(){var s=this.$createElement,a=this._self._c||s;return a("ol",[a("li",[this._v("编写测试，创建一个运行测试的 HTML 页面；")]),a("li",[this._v("在一两个本地浏览器中运行测试，确保正常工作。")])])},function(){var s=this.$createElement,a=this._self._c||s;return a("p",[a("strong",[this._v("添加自动化：")])])},function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ol",[t("li",[s._v("新建 Sauce Labs 账号，获取用户名 和 access key；")]),t("li",[s._v("更新测试页面的源码，使 Sauce Labs 能够通过全局变量读取测试结果；")]),t("li",[s._v("使用 ngrok 创建安全信道连接本地测试页面，使其能公开访问；")]),t("li",[s._v("列出测试的浏览器/平台列表，调用 "),t("a",{attrs:{href:"https://wiki.saucelabs.com/display/DOCS/JavaScript+Unit+Testing+Methods#JavaScriptUnitTestingMethods-StartJSUnitTests",target:"_blank"}},[s._v("Start JS Unit Tests")]),s._v(" 方法；")]),t("li",[s._v("周期调用 "),t("a",{attrs:{href:"https://wiki.saucelabs.com/display/DOCS/JavaScript+Unit+Testing+Methods#JavaScriptUnitTestingMethods-GetJSUnitTestStatus",target:"_blank"}},[s._v("Get JS Unit Test Status")]),s._v(" 直至测试结束；")]),t("li",[s._v("报告测试结果。")])])},function(){var s=this.$createElement,a=this._self._c||s;return a("p",[this._v("强烈建议你自己尝试去实现，这样才能全面了解它如何工作。但如果你没有时间，且希望能快速搭建测试，建议你尝试我创建的 "),a("a",{attrs:{href:"https://github.com/philipwalton/easy-sauce",target:"_blank"}},[this._v("Easy Sauce")]),this._v(" 项目。")])},function(){var s=this.$createElement,a=this._self._c||s;return a("p",{attrs:{id:"footnote-1"}},[this._v("\n1. 使用模板打包工具的一个缺点是堆栈跟踪（stack traces）目前对 source map 的支持还不是很好。Chrome 的一个解决办法是 "),a("a",{attrs:{href:"https://github.com/evanw/node-source-map-support#browser-support",target:"_blank"}},[this._v("node-source-map-support")]),this._v(" 模块。\n")])}]};a.a=n},LNTd:function(s,a,t){"use strict";var e={title:"[译] 自动化、跨浏览器的 JavaScript 单元测试",description:"自动化、跨浏览器的 JavaScript 单元测试",keywords:"翻译,测试,单元测试",pathname:"set-up-automated-cross-browser-javascript-unit-testing",translation:{author:"@Philip Walton",social:"https://twitter.com/philwalton",from:"https://philipwalton.com/articles/learning-how-to-set-up-automated-cross-browser-javascript-unit-testing/"},create_time:"2016-08-15",prev:{title:"[译] WebAssembly  初尝",pathname:"build-your-first-thing-with-web-assembly"},next:{title:"[译] JavaScript  与函数式编程",pathname:"JavaScript-and-Functional-Programming"}};a.a={head:function(){return{title:e.title,meta:[{name:"keywords",content:e.keywords||""},{name:"description",content:e.description}]}},data:function(){return{post:e,post_url:this.$config.site_url+"/post/"+e.pathname,tags:e.tags}},mounted:function(){this.$fixCode()}}},qGwW:function(s,a,t){"use strict";Object.defineProperty(a,"__esModule",{value:!0});var e=t("LNTd"),n=t("/OgI"),l=t("VU/8")(e.a,n.a,!1,null,null,null);l.options.__file="pages/post/set-up-automated-cross-browser-javascript-unit-testing.vue",a.default=l.exports}});
webpackJsonp([37],{BGLx:function(s,a,t){"use strict";var e={title:"Facebook 开源代码优化工具 Prepack",description:"Facebook 开源代码优化工具 Prepack",keywords:"JavaScript",pathname:"prepack",translation:null,create_time:"2017-05-04",prev:{title:"[译] 浏览器中的 ES6 module 实现",pathname:"es-modules-in-browsers"},next:{title:"[译] 内容加速黑科技趣谈",pathname:"fun-hacks-faster-content"}};a.a={head:function(){return{title:e.title,meta:[{name:"keywords",content:e.keywords||""},{name:"description",content:e.description}]}},data:function(){return{post:e,post_url:this.$config.site_url+"/post/"+e.pathname,tags:e.tags}},mounted:function(){this.$fixCode()}}},VimE:function(s,a,t){"use strict";Object.defineProperty(a,"__esModule",{value:!0});var e=t("BGLx"),n=t("acpy"),r=t("VU/8")(e.a,n.a,!1,null,null,null);r.options.__file="pages/post/prepack.vue",a.default=r.exports},acpy:function(s,a,t){"use strict";var e=function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("div",{attrs:{id:"page-post"}},[t("article",{staticClass:"post detail"},[t("div",{staticClass:"meta"},[t("div",{staticClass:"date"},[s._v(s._s(s.post.create_time))])]),t("h1",{staticClass:"title"},[s._v(s._s(s.post.title))]),t("div",{staticClass:"entry-content"},[s.post.translation?t("blockquote",[t("p",{staticStyle:{"white-space":"nowrap",overflow:"hidden","text-overflow":"ellipsis"}},[s._v("\n        原文作者: "),t("a",{attrs:{href:s.post.translation.social,target:"_blank"}},[s._v(s._s(s.post.translation.author))]),t("br"),s._v("\n        原文地址: "),t("a",{attrs:{href:s.post.translation.from}},[s._v(s._s(s.post.translation.from))]),t("br"),s._v("\n        译文地址: "),t("a",{attrs:{href:s.post_url}},[s._v(s._s(s.post_url))]),t("br"),s._v("\n        本文由 "),t("a",{attrs:{href:this.$config.site_url}},[s._v(s._s(this.$config.site_owner))]),s._v(" 翻译，转载请保留此声明。"),t("br"),s._v("\n        著作权属于原作者，本译文仅用于学习、研究和交流目的，请勿用于商业目的。\n        ")])]):s._e(),t("p",[s._v("Fackbook 又搞了个大新闻！")]),t("p",[s._v("今天一早，朋友圈被一个名为 Prepack 的工具刷爆了。")]),s._m(0),t("p",[s._v("看 “Prepack” 这个名字就能大概知道，它的作用，肯定是在发布前（“pre”）对代码动了些什么手脚。官网介绍 Prepack 是“一个使 JavaScript 跑得更快的工具”。那么它到底做了些什么厉害的事情呢？")]),t("p",[s._v("根据官网首页信息，Prepack “能够消除那些可以本可以在编译（compile）阶段完成的运行时计算”，将代码中的某些部分替换为一系列赋值语句，这样一来就可以省去很多中间计算和对象的分配工作。")]),t("h3",{attrs:{id:"-"}},[s._v("官方示例")]),t("p",[s._v("下面是 Prepack 官网给出的一个例子：")]),t("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"pre-area",attrs:{width:"0",height:"0"}},[s._v("<code class=\"hljs lang-javascript\">(%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-keyword%22%3Efunction%3C%2Fspan%3E%20(%3Cspan%20class%3D%22hljs-params%22%3E%3C%2Fspan%3E)%20%3C%2Fspan%3E%7B%0A%20%20%3Cspan%20class%3D%22hljs-keyword%22%3Evar%3C%2Fspan%3E%20self%20%3D%20%3Cspan%20class%3D%22hljs-keyword%22%3Ethis%3C%2Fspan%3E%3B%0A%20%20%5B%3Cspan%20class%3D%22hljs-string%22%3E'A'%3C%2Fspan%3E%2C%20%3Cspan%20class%3D%22hljs-string%22%3E'B'%3C%2Fspan%3E%2C%20%3Cspan%20class%3D%22hljs-number%22%3E42%3C%2Fspan%3E%5D.forEach(%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-keyword%22%3Efunction%3C%2Fspan%3E(%3Cspan%20class%3D%22hljs-params%22%3Ex%3C%2Fspan%3E)%20%3C%2Fspan%3E%7B%0A%20%20%20%20%3Cspan%20class%3D%22hljs-keyword%22%3Evar%3C%2Fspan%3E%20name%20%3D%20%3Cspan%20class%3D%22hljs-string%22%3E'_'%3C%2Fspan%3E%20%2B%20x.toString()%5B%3Cspan%20class%3D%22hljs-number%22%3E0%3C%2Fspan%3E%5D.toLowerCase()%3B%0A%20%20%20%20%3Cspan%20class%3D%22hljs-keyword%22%3Evar%3C%2Fspan%3E%20y%20%3D%20%3Cspan%20class%3D%22hljs-built_in%22%3EparseInt%3C%2Fspan%3E(x)%3B%0A%20%20%20%20self%5Bname%5D%20%3D%20y%20%3F%20y%20%3A%20x%3B%0A%20%20%7D)%3B%0A%7D)()%3B</code>")]),t("p",[s._v("经过 Prepack 的处理，上面这段代码变成了下面这样：")]),t("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"pre-area",attrs:{width:"0",height:"0"}},[s._v('<code class="hljs lang-javascript">(%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-keyword%22%3Efunction%3C%2Fspan%3E%20(%3Cspan%20class%3D%22hljs-params%22%3E%3C%2Fspan%3E)%20%3C%2Fspan%3E%7B%0A%20%20_a%20%3D%20%3Cspan%20class%3D%22hljs-string%22%3E%22A%22%3C%2Fspan%3E%3B%0A%20%20_b%20%3D%20%3Cspan%20class%3D%22hljs-string%22%3E%22B%22%3C%2Fspan%3E%3B%0A%20%20_4%20%3D%20%3Cspan%20class%3D%22hljs-number%22%3E42%3C%2Fspan%3E%3B%0A%7D)()%3B</code>')]),t("p",[s._v("原来的 "),t("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v(".forEach")]),s._v(" 调用没有了，一系列的中间转换过程也不见了。借用官网的说法，“多数的计算都在 Prepack 编译时进行了预初始化”。")]),t("p",[s._v("再举一个 Fibonacci 的例子：")]),t("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"pre-area",attrs:{width:"0",height:"0"}},[s._v('<code class="hljs lang-javascript">%3Cspan%20class%3D%22hljs-comment%22%3E%2F%2F%20%E5%A4%84%E7%90%86%E5%89%8D%3C%2Fspan%3E%0A(%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-keyword%22%3Efunction%3C%2Fspan%3E%20(%3Cspan%20class%3D%22hljs-params%22%3E%3C%2Fspan%3E)%20%3C%2Fspan%3E%7B%0A%20%20%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-keyword%22%3Efunction%3C%2Fspan%3E%20%3Cspan%20class%3D%22hljs-title%22%3Efibonacci%3C%2Fspan%3E(%3Cspan%20class%3D%22hljs-params%22%3Ex%3C%2Fspan%3E)%20%3C%2Fspan%3E%7B%0A%20%20%20%20%3Cspan%20class%3D%22hljs-keyword%22%3Ereturn%3C%2Fspan%3E%20x%20%26lt%3B%3D%20%3Cspan%20class%3D%22hljs-number%22%3E1%3C%2Fspan%3E%20%3F%20x%20%3A%20fibonacci(x%20-%20%3Cspan%20class%3D%22hljs-number%22%3E1%3C%2Fspan%3E)%20%2B%20fibonacci(x%20-%20%3Cspan%20class%3D%22hljs-number%22%3E2%3C%2Fspan%3E)%3B%0A%20%20%7D%0A%20%20global.x%20%3D%20fibonacci(%3Cspan%20class%3D%22hljs-number%22%3E23%3C%2Fspan%3E)%3B%0A%7D)()%3B%0A%0A%3Cspan%20class%3D%22hljs-comment%22%3E%2F%2F%20%E5%A4%84%E7%90%86%E5%90%8E%3C%2Fspan%3E%0A(%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-keyword%22%3Efunction%3C%2Fspan%3E%20(%3Cspan%20class%3D%22hljs-params%22%3E%3C%2Fspan%3E)%20%3C%2Fspan%3E%7B%0A%20%20x%20%3D%20%3Cspan%20class%3D%22hljs-number%22%3E28657%3C%2Fspan%3E%3B%0A%7D)()%3B</code>')]),t("h3",{attrs:{id:"-"}},[s._v("工作机制")]),t("p",[s._v("据官网介绍，Prepack 的实现依赖以下几个方面：")]),t("h4",{attrs:{id:"1-ast-"}},[s._v("1. AST（抽象语法树）")]),t("p",[s._v("Prepack 是在 AST 这一层级对代码进行操作的。通过 Babel 来解析源码，并生成优化后的代码。关于 Babel 与 AST，周刊君推荐两篇文章：")]),s._m(1),t("h4",{attrs:{id:"2-concrete-execution-"}},[s._v("2. 具体执行（Concrete Execution）")]),t("p",[s._v("Prepack 的核心部分是“一个大致兼容 ECMAScript 5 的编译器”（an almost ECMAScript 5 compatible interpreter），而这个编译器是通过 JavaScript 实现的。这个编译器可以追踪、撤销包括对象变化在内的所有的操作。这样一来就能进行推理性的优化（speculative optimizations）。")]),t("h4",{attrs:{id:"3-symbolic-execution-"}},[s._v("3. 符号执行（Symbolic Execution）")]),t("p",[s._v("除了计算具体值，Prepack 的编译器还可以操作抽象值，而这些抽象值通常都来自于代码与环境的交互。如 "),t("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("Date.now")]),s._v(" 所返回的就是抽象值。此外，根据官网首页的描述，还可以通过 "),t("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("__abstract()")]),s._v(" 这样的辅助工具函数，手动插入抽象值。Prepack 会追踪发生在抽象值之上的操作，如果有分支情况，则会对所有可能性进行探查。")]),s._m(2),s._m(3),t("h4",{attrs:{id:"4-abstract-interpretation-"}},[s._v("4. 抽象解释（Abstract Interpretation）")]),s._m(4),t("h4",{attrs:{id:"5-heap-serialization-"}},[s._v("5. 堆序列化（Heap Serialization）")]),t("p",[s._v("初始化阶段结束时，Prepack 会捕获最终的堆。按顺序遍历堆，生成新的代码，创建、链接堆中的可及对象。")]),t("p",[s._v("如前所述，堆中的一些值可能是对抽象值进行计算的结果。Prepack 将会根据这些值生成执行计算的代码，其计算过程与源程序相同。")]),t("h3",{attrs:{id:"-"}},[s._v("环境很重要！")]),t("p",[s._v("需要注意的是，Prepack 并未完整模拟浏览器、Node 环境，Prepack 对 "),t("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("document")]),s._v(" 和 "),t("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("window")]),s._v(" 并没有多少了解。对这样一些属性求值的时候，将会得到 "),t("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("undefined")]),s._v("。如果需要在这样一些地方使用 Prepack，必须通过一些工具函数实现。")]),t("h3",{attrs:{id:"-"}},[s._v("如何尝鲜")]),t("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"pre-area",attrs:{width:"0",height:"0"}},[s._v('<code class="hljs lang-bash">%3Cspan%20class%3D%22hljs-comment%22%3E%23%20%E5%AE%89%E8%A3%85%3C%2Fspan%3E%0Anpm%20install%20-g%20prepack%0A%0A%3Cspan%20class%3D%22hljs-comment%22%3E%23%20%E5%A4%84%E7%90%86%E6%96%87%E4%BB%B6%EF%BC%8C%E5%B9%B6%E6%89%93%E5%8D%B0%E5%88%B0%E6%8E%A7%E5%88%B6%E5%8F%B0%3C%2Fspan%3E%0Aprepack%20script.js%0A%0A%3Cspan%20class%3D%22hljs-comment%22%3E%23%20%E5%A4%84%E7%90%86%E6%96%87%E4%BB%B6%EF%BC%8C%E5%B9%B6%E8%BE%93%E5%87%BA%E5%88%B0%E6%96%B0%E6%96%87%E4%BB%B6%3C%2Fspan%3E%0Aprepack%20script.js%20--out%20script-processed.js</code>')]),t("p",[s._v("除了上面的基本用法之外，还支持如 sourceMap 等更多选项。这里就不一一介绍了。")]),t("h3",{attrs:{id:"-"}},[s._v("当前支持情况")]),s._m(5),s._m(6),t("h3",{attrs:{id:"-"}},[s._v("相关技术")]),t("p",[s._v("Closure Compiler 同样会对 JavaScript 代码进行优化。Prepack 比 Closure Compiler 走得更远的地方在于执行了初始化阶段的全局代码，展开循环、递归。官网的一个说法是，“Prepack 着眼于运行时性能，而 Closure Compiler 的重点在于代码体积”。")])])]),s.post.prev.title||s.post.next.title?t("nav",{staticClass:"pagination"},[s.post.prev.title?t("nuxt-link",{staticClass:"prev",attrs:{to:"/post/"+s.post.prev.pathname,title:s.post.prev.title}},[s._v("« "+s._s(s.post.prev.title))]):s._e(),s.post.next.title?t("nuxt-link",{staticClass:"next",attrs:{to:"/post/"+s.post.next.pathname,title:s.post.next.title}},[s._v(s._s(s.post.next.title)+" »")]):s._e()],1):s._e(),t("gitalk",{attrs:{tags:s.tags}})],1)};e._withStripped=!0;var n={render:e,staticRenderFns:[function(){var s=this.$createElement,a=this._self._c||s;return a("p",[this._v("周刊君很好奇地看了下官网（"),a("a",{attrs:{href:"https://prepack.io/",target:"_blank"}},[this._v("prepack.io")]),this._v("），这么厉害的工具，有必要第一时间向大家介绍一下（还能不能好好过个青年节了）。")])},function(){var s=this.$createElement,a=this._self._c||s;return a("ul",[a("li",[a("p",[this._v("《"),a("a",{attrs:{href:"https://mp.weixin.qq.com/s/fFQUBeg332gdU8yNddauxQ",target:"_blank"}},[this._v("Babel for ES6? And Beyond!")]),this._v("》")])]),a("li",[a("p",[this._v("《"),a("a",{attrs:{href:"http://www.zcfy.cc/article/347",target:"_blank"}},[this._v("通过开发 Babel 插件理解抽象语法树（AST）")]),this._v("》")])])])},function(){var s=this.$createElement,a=this._self._c||s;return a("p",[this._v("官网介绍说，“因此，Prepack 为 JavaScript 实现了一套符号执行引擎”。为了方便大家理解，周刊君特地引用了"),a("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E7%AC%A6%E5%8F%B7%E6%89%A7%E8%A1%8C",target:"_blank"}},[this._v("维基百科")]),this._v("上的一段话：")])},function(){var s=this.$createElement,a=this._self._c||s;return a("blockquote",[a("p",[this._v("符号执行 （Symbolic Execution）是一种程序分析技术。其可以通过分析程序来得到让特定代码区域执行的输入。使用符号执行分析一个程序时，该程序会使用符号值作为输入，而非一般执行程序时使用的具体值。在达到目标代码时，分析器可以得到相应的路径约束，然后通过约束求解器来得到可以触发目标代码的具体值。")])])},function(){var s=this.$createElement,a=this._self._c||s;return a("p",[this._v("官网的描述有点复杂。关于抽象解释，请移步"),a("a",{attrs:{href:"https://en.wikipedia.org/wiki/Abstract_interpretation",target:"_blank"}},[this._v("维基百科")]),this._v("。有兴趣的可以去官网阅读原文。")])},function(){var s=this.$createElement,a=this._self._c||s;return a("p",[this._v("此外，官方介绍称，"),a("strong",[this._v("“Prepack 目前仍处于早期开发阶段，尚未做好投入生产环境的准备”")]),this._v("。不过，还是响应 Prepack 的号召吧，“try it out, give feedback, and help fix bugs”。")])},function(){var s=this.$createElement,a=this._self._c||s;return a("p",[this._v("想要进一步关于该项目的发展计划，可以访问官网首页的 "),a("a",{attrs:{href:"https://prepack.io/",target:"_blank"}},[this._v("Roadmap")]),this._v(" 部分。")])}]};a.a=n}});
webpackJsonp([41],{"/tgo":function(s,t,a){"use strict";var e={title:"[译] 手把手教你写一个 Javascript 框架：项目结构",description:"手把手教你写一个 Javascript 框架：项目结构",keywords:"翻译,ES6,JavaScript",pathname:"nx-project-structure",translation:{author:"Bertalan Miklos",social:"https://blog.risingstack.com/author/bertalan/",from:"https://blog.risingstack.com/writing-a-javascript-framework-project-structuring/"},create_time:"2016-11-20",prev:{title:"[译] CSS 方法论的选择",pathname:"when-to-use-which-css-methodology"},next:{title:"[译] 手把手教你写一个 Javascript 框架：沙箱求值",pathname:"sandbox-code-evaluation"}};t.a={head:function(){return{title:e.title,meta:[{name:"keywords",content:e.keywords||""},{name:"description",content:e.description}]}},data:function(){return{post:e,post_url:this.$config.site_url+"/post/"+e.pathname,tags:e.tags}},mounted:function(){this.$fixCode()}}},SBkJ:function(s,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var e=a("/tgo"),n=a("gjBr"),i=a("VU/8")(e.a,n.a,!1,null,null,null);i.options.__file="pages/post/nx-project-structure.vue",t.default=i.exports},gjBr:function(s,t,a){"use strict";var e=function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("div",{attrs:{id:"page-post"}},[a("article",{staticClass:"post detail"},[a("div",{staticClass:"meta"},[a("div",{staticClass:"date"},[s._v(s._s(s.post.create_time))])]),a("h1",{staticClass:"title"},[s._v(s._s(s.post.title))]),a("div",{staticClass:"entry-content"},[s.post.translation?a("blockquote",[a("p",{staticStyle:{"white-space":"nowrap",overflow:"hidden","text-overflow":"ellipsis"}},[s._v("\n        原文作者: "),a("a",{attrs:{href:s.post.translation.social,target:"_blank"}},[s._v(s._s(s.post.translation.author))]),a("br"),s._v("\n        原文地址: "),a("a",{attrs:{href:s.post.translation.from}},[s._v(s._s(s.post.translation.from))]),a("br"),s._v("\n        译文地址: "),a("a",{attrs:{href:s.post_url}},[s._v(s._s(s.post_url))]),a("br"),s._v("\n        本文由 "),a("a",{attrs:{href:this.$config.site_url}},[s._v(s._s(this.$config.site_owner))]),s._v(" 翻译，转载请保留此声明。"),a("br"),s._v("\n        著作权属于原作者，本译文仅用于学习、研究和交流目的，请勿用于商业目的。\n        ")])]):s._e(),s._m(0),s._m(1),a("p",[s._v("本系列章节如下：")]),s._m(2),a("h2",{attrs:{id:"-"}},[s._v("项目结构")]),s._m(3),a("h3",{attrs:{id:"nx-"}},[s._v("NX 框架概览")]),a("p",[s._v("NX 的目标是成为一个开源社区驱动的易于扩展的项目。项目特点如下：")]),s._m(4),a("p",[s._v("项目各模块依赖关系如下图所示：")]),a("p",[a("img",{directives:[{name:"lazy",rawName:"v-lazy",value:"https://p4.ssl.qhimg.com/t01c9e92dbaa52fc18f.png",expression:"`https://p4.ssl.qhimg.com/t01c9e92dbaa52fc18f.png`"}],attrs:{alt:"JavaScript Framework in 2016: The NX project structure"}})]),a("p",[s._v("这种结构为典型框架开发难题提供了一种解决方案。")]),s._m(5),a("h3",{attrs:{id:"-"}},[s._v("可扩展性实现")]),a("p",[s._v("社区驱动项目必须易于扩展。故项目的核心部分应当小巧，并拥有一个预定义的依赖处理系统。前者确保项目易于理解，后者则保证框架稳定。")]),a("p",[s._v("本节先聚焦于实现小巧的内核。")]),a("p",[s._v("现代框架应当拥有的主要特性就是创建自定义元素并将其应用于 DOM 的能力。NX 的核心只有一个 "),a("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("component")]),s._v(" 函数，它的工作正在于此这个函数允许用户配置、注册一个新类型的元素。")]),a("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"pre-area",attrs:{width:"0",height:"0"}},[s._v("<code class=\"hljs lang-javascript\">component(config)%0A%20%20.register(%3Cspan%20class%3D%22hljs-string%22%3E'comp-name'%3C%2Fspan%3E)</code>")]),a("p",[s._v("注册的 "),a("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("comp-name")]),s._v(" 是空组件类型，可以按照预期在 DOM 中实例化。")]),a("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"pre-area",attrs:{width:"0",height:"0"}},[s._v('<code class="hljs lang-html">%3Cspan%20class%3D%22hljs-tag%22%3E%26lt%3B%3Cspan%20class%3D%22hljs-name%22%3Ecomp-name%3C%2Fspan%3E%26gt%3B%3C%2Fspan%3E%3Cspan%20class%3D%22hljs-tag%22%3E%26lt%3B%2F%3Cspan%20class%3D%22hljs-name%22%3Ecomp-name%3C%2Fspan%3E%26gt%3B%3C%2Fspan%3E</code>')]),a("p",[s._v("下一步是保证能使用新特性扩展组件。为保持简洁、可扩展，这些新特性不应该污染核心部分。这时候使用依赖注入就很方便了。")]),a("h2",{attrs:{id:"-di-"}},[s._v("利用中间件实现依赖注入（DI）")]),s._m(6),s._m(7),a("p",[s._v("DI 解决了硬性依赖，却引入了新问题。使用者需要知道如何配置、注入依赖。大多客户端框架都将这些工作交给 DI 容器，帮助开发者完成。")]),s._m(8),a("p",[s._v("另外一种方式则是中间件 DI 模式，这在服务端得到广泛应用（如 Express、Koa 等）。其中的奥秘在于，所有可注入的依赖（中间件）拥有相同的接口，以相同方式注入。这种方法则无需 DI 容器。")]),a("p",[s._v("为保持简洁，我决定采用中间件模式。若你曾使用过 Express，以下代码自然不会陌生：")]),a("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"pre-area",attrs:{width:"0",height:"0"}},[s._v("<code class=\"hljs lang-javascript\">component()%0A%20%20.use(paint)%20%3Cspan%20class%3D%22hljs-comment%22%3E%2F%2F%20inject%20paint%20middleware%3C%2Fspan%3E%0A%20%20.use(resize)%20%3Cspan%20class%3D%22hljs-comment%22%3E%2F%2F%20inject%20resize%20middleware%3C%2Fspan%3E%0A%20%20.register(%3Cspan%20class%3D%22hljs-string%22%3E'comp-name'%3C%2Fspan%3E)%0A%0A%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-keyword%22%3Efunction%3C%2Fspan%3E%20%3Cspan%20class%3D%22hljs-title%22%3Epaint%3C%2Fspan%3E%20(%3Cspan%20class%3D%22hljs-params%22%3Eelem%2C%20state%2C%20next%3C%2Fspan%3E)%20%3C%2Fspan%3E%7B%0A%20%20%3Cspan%20class%3D%22hljs-comment%22%3E%2F%2F%20elem%20is%20the%20component%20instance%2C%20set%20it%20up%20or%20extend%20it%20here%3C%2Fspan%3E%0A%20%20elem.style.color%20%3D%20%3Cspan%20class%3D%22hljs-string%22%3E'red'%3C%2Fspan%3E%0A%20%20%3Cspan%20class%3D%22hljs-comment%22%3E%2F%2F%20then%20call%20next%20to%20run%20the%20next%20middleware%20(resize)%3C%2Fspan%3E%0A%20%20next()%0A%7D%0A%0A%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-keyword%22%3Efunction%3C%2Fspan%3E%20%3Cspan%20class%3D%22hljs-title%22%3Eresize%3C%2Fspan%3E%20(%3Cspan%20class%3D%22hljs-params%22%3Eelem%2C%20state%2C%20next%3C%2Fspan%3E)%20%3C%2Fspan%3E%7B%0A%20%20elem.style.width%20%3D%20%3Cspan%20class%3D%22hljs-string%22%3E'100%20px'%3C%2Fspan%3E%0A%20%20next()%0A%7D</code>")]),a("p",[s._v("中间件在新的组件实例插入 DOM 时执行，通常会给实例扩展一些新特性。如若不同库扩展相同对象，则将导致名称冲突。暴露私有变量会加剧问题，并可能被其他人意外利用。")]),a("p",[s._v("公开 API 小巧玲珑，其余部分隐身不见，正是避免问题的优秀方案。")]),a("h3",{attrs:{id:"-"}},[s._v("处理私有变量")]),a("p",[s._v("JavaScript 中需要通过函数作用域来实现私有变量。需要使用跨作用域私有变量时，人们习惯使用"),a("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("_")]),s._v("前缀来标志，并将其公开暴露。这可以避免意外使用，但无法解决命名冲突。更好的办法是使用  ES6 的 "),a("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("Symbol")]),s._v(" 基本数据类型。")]),s._m(9),a("p",[s._v("下面的代码展示了 symbol 的实际使用：")]),a("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"pre-area",attrs:{width:"0",height:"0"}},[s._v("<code class=\"hljs lang-javascript\">%3Cspan%20class%3D%22hljs-keyword%22%3Econst%3C%2Fspan%3E%20color%20%3D%20%3Cspan%20class%3D%22hljs-built_in%22%3ESymbol%3C%2Fspan%3E()%0A%0A%3Cspan%20class%3D%22hljs-comment%22%3E%2F%2F%20a%20middleware%3C%2Fspan%3E%0A%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-keyword%22%3Efunction%3C%2Fspan%3E%20%3Cspan%20class%3D%22hljs-title%22%3Ecolorize%3C%2Fspan%3E%20(%3Cspan%20class%3D%22hljs-params%22%3Eelem%2C%20state%2C%20next%3C%2Fspan%3E)%20%3C%2Fspan%3E%7B%0A%20%20elem%5Bcolor%5D%20%3D%20%3Cspan%20class%3D%22hljs-string%22%3E'red'%3C%2Fspan%3E%0A%20%20next()%0A%7D</code>")]),a("p",[s._v("这样一来，通过 "),a("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("color")]),s._v(" symbol （以及元素 elem）就能获取 "),a("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("red")]),s._v("。"),a("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("red")]),s._v(" 的私有程度，可由 "),a("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("color")]),s._v(" symbol 暴露的不同程度控制。合理数量的私有变量，通过中心存储读取，是一种优雅的解决方案。")]),a("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"pre-area",attrs:{width:"0",height:"0"}},[s._v("<code class=\"hljs lang-javascript\">%3Cspan%20class%3D%22hljs-comment%22%3E%2F%2F%20symbols%20module%3C%2Fspan%3E%0Aexports.private%20%3D%20%7B%0A%20%20%3Cspan%20class%3D%22hljs-attr%22%3Ecolor%3C%2Fspan%3E%3A%20%3Cspan%20class%3D%22hljs-built_in%22%3ESymbol%3C%2Fspan%3E(%3Cspan%20class%3D%22hljs-string%22%3E'color%20from%20colorize'%3C%2Fspan%3E)%0A%7D%0Aexports.public%20%3D%20%7B%7D</code>")]),a("p",[a("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("index.js")]),s._v(" 如下：")]),a("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"pre-area",attrs:{width:"0",height:"0"}},[s._v("<code class=\"hljs lang-javascript\">%3Cspan%20class%3D%22hljs-comment%22%3E%2F%2F%20main%20module%3C%2Fspan%3E%0A%3Cspan%20class%3D%22hljs-keyword%22%3Econst%3C%2Fspan%3E%20symbols%20%3D%20%3Cspan%20class%3D%22hljs-built_in%22%3Erequire%3C%2Fspan%3E(%3Cspan%20class%3D%22hljs-string%22%3E'.%2Fsymbols'%3C%2Fspan%3E)%0Aexports.symbols%20%3D%20symbols.public</code>")]),a("p",[s._v("在项目内部，所有模块都可访问 symbol 存储对象，但私有部分不会对外暴露。公有部分则可用于对外部开发者暴露一些低层次特性。这就避免了意外使用，因为开发者需要明确引入需要使用的 symbol。此外，symbol 引用也不会像字符串一样产出冲突，是故不会产生命名冲突。")]),a("p",[s._v("以下几点概括了不同场景下的用法：")]),s._m(10),a("p",[s._v("正常使用.")]),a("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"pre-area",attrs:{width:"0",height:"0"}},[s._v("<code class=\"hljs lang-javascript\">%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-keyword%22%3Efunction%3C%2Fspan%3E%20(%3Cspan%20class%3D%22hljs-params%22%3Eelem%2C%20state%2C%20next%3C%2Fspan%3E)%20%3C%2Fspan%3E%7B%0A%20%20elem.publicText%20%3D%20%3Cspan%20class%3D%22hljs-string%22%3E'Hello%20World!'%3C%2Fspan%3E%0A%20%20next()%0A%7D</code>")]),s._m(11),a("p",[s._v("项目私有的跨作用域变量，应当在私有 symbol 对象中加入一个 symbol key。")]),a("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"pre-area",attrs:{width:"0",height:"0"}},[s._v("<code class=\"hljs lang-javascript\">%3Cspan%20class%3D%22hljs-comment%22%3E%2F%2F%20symbols%20module%3C%2Fspan%3E%0Aexports.private%20%3D%20%7B%0A%20%20%3Cspan%20class%3D%22hljs-attr%22%3Etext%3C%2Fspan%3E%3A%20%3Cspan%20class%3D%22hljs-built_in%22%3ESymbol%3C%2Fspan%3E(%3Cspan%20class%3D%22hljs-string%22%3E'private%20text'%3C%2Fspan%3E)%0A%7D%0Aexports.public%20%3D%20%7B%7D</code>")]),a("p",[s._v("并在需要的地方引入。")]),a("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"pre-area",attrs:{width:"0",height:"0"}},[s._v("<code class=\"hljs lang-javascript\">%3Cspan%20class%3D%22hljs-keyword%22%3Econst%3C%2Fspan%3E%20private%20%3D%20%3Cspan%20class%3D%22hljs-built_in%22%3Erequire%3C%2Fspan%3E(%3Cspan%20class%3D%22hljs-string%22%3E'symbols'%3C%2Fspan%3E).private%0A%0A%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-keyword%22%3Efunction%3C%2Fspan%3E%20(%3Cspan%20class%3D%22hljs-params%22%3Eelem%2C%20state%2C%20next%3C%2Fspan%3E)%20%3C%2Fspan%3E%7B%0A%20%20elem%5Bprivate.text%5D%20%3D%20%3Cspan%20class%3D%22hljs-string%22%3E'Hello%20World!'%3C%2Fspan%3E%0A%20%20next()%0A%7D</code>")]),s._m(12),a("p",[s._v("低层次 API 的变量，应当在公有 symbol 对象中加入一个 symbol key。")]),a("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"pre-area",attrs:{width:"0",height:"0"}},[s._v("<code class=\"hljs lang-javascript\">%3Cspan%20class%3D%22hljs-comment%22%3E%2F%2F%20symbols%20module%3C%2Fspan%3E%0Aexports.private%20%3D%20%7B%0A%20%20%3Cspan%20class%3D%22hljs-attr%22%3Etext%3C%2Fspan%3E%3A%20%3Cspan%20class%3D%22hljs-built_in%22%3ESymbol%3C%2Fspan%3E(%3Cspan%20class%3D%22hljs-string%22%3E'private%20text'%3C%2Fspan%3E)%0A%7D%0Aexports.public%20%3D%20%7B%0A%20%20%3Cspan%20class%3D%22hljs-attr%22%3Etext%3C%2Fspan%3E%3A%20%3Cspan%20class%3D%22hljs-built_in%22%3ESymbol%3C%2Fspan%3E(%3Cspan%20class%3D%22hljs-string%22%3E'exposed%20text'%3C%2Fspan%3E)%0A%7D</code>")]),a("p",[s._v("并在需要的地方引入。")]),a("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"pre-area",attrs:{width:"0",height:"0"}},[s._v("<code class=\"hljs lang-javascript\">%3Cspan%20class%3D%22hljs-keyword%22%3Econst%3C%2Fspan%3E%20exposed%20%3D%20%3Cspan%20class%3D%22hljs-built_in%22%3Erequire%3C%2Fspan%3E(%3Cspan%20class%3D%22hljs-string%22%3E'symbols'%3C%2Fspan%3E).public%0A%0A%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-keyword%22%3Efunction%3C%2Fspan%3E%20(%3Cspan%20class%3D%22hljs-params%22%3Eelem%2C%20state%2C%20next%3C%2Fspan%3E)%20%3C%2Fspan%3E%7B%0A%20%20elem%5Bexposed.text%5D%20%3D%20%3Cspan%20class%3D%22hljs-string%22%3E'Hello%20World!'%3C%2Fspan%3E%0A%20%20next()%0A%7D</code>")]),a("h3",{attrs:{id:"-"}},[s._v("写在最后")]),s._m(13),a("p",[s._v("希望你喜欢这篇文章。下一章我们将讨论执行调度。")])])]),s.post.prev.title||s.post.next.title?a("nav",{staticClass:"pagination"},[s.post.prev.title?a("nuxt-link",{staticClass:"prev",attrs:{to:"/post/"+s.post.prev.pathname,title:s.post.prev.title}},[s._v("« "+s._s(s.post.prev.title))]):s._e(),s.post.next.title?a("nuxt-link",{staticClass:"next",attrs:{to:"/post/"+s.post.next.pathname,title:s.post.next.title}},[s._v(s._s(s.post.next.title)+" »")]):s._e()],1):s._e(),a("gitalk",{attrs:{tags:s.tags}})],1)};e._withStripped=!0;var n={render:e,staticRenderFns:[function(){var s=this.$createElement,t=this._self._c||s;return t("p",[this._v("过去几个月中，RisingStack 的 JavaScript 工程师 Bertalan Miklos 编写了新一代客户端框架 "),t("a",{attrs:{href:"http://nx-nxframework.rhcloud.com",target:"_blank"}},[this._v("NX")]),this._v("。Bertalan 将通过"),t("strong",[this._v("编写 JavaScript 框架")]),this._v("系列文章与我们分享他在编写框架过程中的收获：")])},function(){var s=this.$createElement,t=this._self._c||s;return t("p",[t("strong",[this._v("本章将展示 NX 的项目结构，并讲述如何解决可扩展性、依赖注入以及私有变量等方面的一些困难。")])])},function(){var s=this.$createElement,t=this._self._c||s;return t("ol",[t("li",[this._v("项目结构（正是本文）")]),t("li",[t("a",{attrs:{href:"/2016/execution-timing/"}},[this._v("执行调度(Execution timing)")])]),t("li",[t("a",{attrs:{href:"/2016/sandbox-code-evaluation/"}},[this._v("沙箱求值")])]),t("li",[t("a",{attrs:{href:"/2016/data-bind-dirty-checking"}},[this._v("数据绑定简介")])]),t("li",[t("a",{attrs:{href:"/2016/es6-proxy-data-binding/"}},[this._v("ES6 Proxy 实现数据绑定")])]),t("li",[this._v("自定义元素")]),t("li",[this._v("客户端路由")])])},function(){var s=this.$createElement,t=this._self._c||s;return t("p",[this._v("没有放之四海而皆准的项目结构，但有一些基本准则。感兴趣的同学可以看下我们的 Node Hero 系列中的《"),t("a",{attrs:{href:"https://blog.risingstack.com/node-hero-node-js-project-structure-tutorial/",target:"_blank"}},[this._v("Node.js 项目结构教程")]),this._v(" 》这一章。")])},function(){var s=this.$createElement,t=this._self._c||s;return t("ul",[t("li",[this._v("包含现代客户端框架必须的所有特性；")]),t("li",[this._v("除 polyfill 外，没有任何外部依赖；")]),t("li",[this._v("代码总量 3000 行；")]),t("li",[this._v("没有代码多于 300 行的模块；")]),t("li",[this._v("单个特性模块依赖不超过 3 个。")])])},function(){var s=this.$createElement,t=this._self._c||s;return t("ul",[t("li",[this._v("扩展性")]),t("li",[this._v("依赖注入")]),t("li",[this._v("私有变量")])])},function(){var s=this.$createElement,t=this._self._c||s;return t("p",[this._v("如果你对依赖注入不太熟悉，建立先阅读这篇文章：《"),t("a",{attrs:{href:"https://blog.risingstack.com/dependency-injection-in-node-js",target:"_blank"}},[this._v("Dependency Injection in Node.js")]),this._v("》。")])},function(){var s=this.$createElement,t=this._self._c||s;return t("blockquote",[t("p",[this._v("依赖注入是一种设计模式，在这种模式中，一个或多个依赖或服务被注入到或引用传递给一个独立对象。")])])},function(){var s=this.$createElement,t=this._self._c||s;return t("blockquote",[t("p",[this._v("DI 容器指的是知道如何实例化、配置对象的对象。")])])},function(){var s=this.$createElement,t=this._self._c||s;return t("blockquote",[t("p",[this._v("Symbol 是一种唯一的、不可变的数据类型，可用作对象属性标识符。")])])},function(){var s=this.$createElement,t=this._self._c||s;return t("p",[t("strong",[this._v("1. 公有变量")])])},function(){var s=this.$createElement,t=this._self._c||s;return t("p",[t("strong",[this._v("2. 私有变量")])])},function(){var s=this.$createElement,t=this._self._c||s;return t("p",[t("strong",[this._v("3. 半私有变量")])])},function(){var s=this.$createElement,t=this._self._c||s;return t("p",[this._v("如果对 NX 框架感兴趣，请访问 "),t("a",{attrs:{href:"http://nx-framework.com/",target:"_blank"}},[this._v("主页")]),this._v("。胆大的读者还可以在 Github 上查看 "),t("a",{attrs:{href:"https://github.com/RisingStack/nx-framework",target:"_blank"}},[this._v("NX 源码")]),this._v(" 和 "),t("a",{attrs:{href:"https://github.com/RisingStack/nx-observe",target:"_blank"}},[this._v("nx-observe 源码")]),this._v("。")])}]};t.a=n}});
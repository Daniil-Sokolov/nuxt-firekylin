webpackJsonp([44],{"7Xoi":function(s,a,e){"use strict";Object.defineProperty(a,"__esModule",{value:!0});var t=e("sSSs"),n=e("slKQ"),i=e("VU/8")(t.a,n.a,!1,null,null,null);i.options.__file="pages/post/nodejs-event-loop.vue",a.default=i.exports},sSSs:function(s,a,e){"use strict";var t={title:"[译] 理解 Node.js 事件循环",description:"javascript event loop; Node.js 事件循环",keywords:"翻译,JavaScript,Node.js,Event Loop",pathname:"nodejs-event-loop",translation:{author:"Tamas Kadlecsik",social:"https://blog.risingstack.com/author/tamas-kadlecsik/",from:"https://blog.risingstack.com/node-js-at-scale-understanding-node-js-event-loop/"},create_time:"2016-11-12",prev:{title:"快来上钩哈哈哈",pathname:"fishing-for-spider"},next:{title:"算法学习：冒泡排序",pathname:"algo-bubble-sort"}};a.a={head:function(){return{title:t.title,meta:[{name:"keywords",content:t.keywords||""},{name:"description",content:t.description}]}},data:function(){return{post:t,post_url:this.$config.site_url+"/post/"+t.pathname,tags:t.tags}},mounted:function(){this.$fixCode()}}},slKQ:function(s,a,e){"use strict";var t=function(){var s=this,a=s.$createElement,e=s._self._c||a;return e("div",{attrs:{id:"page-post"}},[e("article",{staticClass:"post detail"},[e("div",{staticClass:"meta"},[e("div",{staticClass:"date"},[s._v(s._s(s.post.create_time))])]),e("h1",{staticClass:"title"},[s._v(s._s(s.post.title))]),e("div",{staticClass:"entry-content"},[s.post.translation?e("blockquote",[e("p",{staticStyle:{"white-space":"nowrap",overflow:"hidden","text-overflow":"ellipsis"}},[s._v("\n        原文作者: "),e("a",{attrs:{href:s.post.translation.social,target:"_blank"}},[s._v(s._s(s.post.translation.author))]),e("br"),s._v("\n        原文地址: "),e("a",{attrs:{href:s.post.translation.from}},[s._v(s._s(s.post.translation.from))]),e("br"),s._v("\n        译文地址: "),e("a",{attrs:{href:s.post_url}},[s._v(s._s(s.post_url))]),e("br"),s._v("\n        本文由 "),e("a",{attrs:{href:this.$config.site_url}},[s._v(s._s(this.$config.site_owner))]),s._v(" 翻译，转载请保留此声明。"),e("br"),s._v("\n        著作权属于原作者，本译文仅用于学习、研究和交流目的，请勿用于商业目的。\n        ")])]):s._e(),e("p",[s._v("本文介绍了 Node.js 事件循环是如何工作，如何使用 Node.js 构建高速应用。文章还会涉及最常见的一些问题及其解决方案。")]),e("p",[s._v("（我们正在编写一系列文章，聚焦于那些大规模使用 Node.js 的公司、有一定 Node 基础的开发者们的需求。）")]),s._m(0),s._m(1),e("hr"),e("h2",{attrs:{id:"-"}},[s._v("问题提出")]),e("p",[s._v("多数网站后端是不需要进行复杂运算的。程序多数时间都在等待进行硬盘读写，等待网络传输信息、响应返回。")]),e("p",[s._v("IO 操作可能比数据处理要慢几个数量级。举个例子，SSD 可以达到 200-730 MB/s 的速度 —— 至少高端 SSD 可以做到。读取 1KB 数据仅需要 1.4μs，但同样的时间里，主频 2GHz 的 CPU 可以完成 28,000 次指令处理周期。")]),e("p",[s._v("对网络通信来说，情况还可能更糟糕，ping 下 google.com 试试看：")]),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"pre-area",attrs:{width:"0",height:"0"}},[s._v('<code class="hljs lang-javascript">%24%20ping%20google.com%0A%3Cspan%20class%3D%22hljs-number%22%3E64%3C%2Fspan%3E%20bytes%20%3Cspan%20class%3D%22hljs-keyword%22%3Efrom%3C%2Fspan%3E%20%3Cspan%20class%3D%22hljs-number%22%3E172.217%3C%2Fspan%3E%3Cspan%20class%3D%22hljs-number%22%3E.16%3C%2Fspan%3E%3Cspan%20class%3D%22hljs-number%22%3E.174%3C%2Fspan%3E%3A%20icmp_seq%3D%3Cspan%20class%3D%22hljs-number%22%3E0%3C%2Fspan%3E%20ttl%3D%3Cspan%20class%3D%22hljs-number%22%3E52%3C%2Fspan%3E%20time%3D%3Cspan%20class%3D%22hljs-number%22%3E33.017%3C%2Fspan%3E%20ms%20%20%0A%3Cspan%20class%3D%22hljs-number%22%3E64%3C%2Fspan%3E%20bytes%20%3Cspan%20class%3D%22hljs-keyword%22%3Efrom%3C%2Fspan%3E%20%3Cspan%20class%3D%22hljs-number%22%3E172.217%3C%2Fspan%3E%3Cspan%20class%3D%22hljs-number%22%3E.16%3C%2Fspan%3E%3Cspan%20class%3D%22hljs-number%22%3E.174%3C%2Fspan%3E%3A%20icmp_seq%3D%3Cspan%20class%3D%22hljs-number%22%3E1%3C%2Fspan%3E%20ttl%3D%3Cspan%20class%3D%22hljs-number%22%3E52%3C%2Fspan%3E%20time%3D%3Cspan%20class%3D%22hljs-number%22%3E83.376%3C%2Fspan%3E%20ms%20%20%0A%3Cspan%20class%3D%22hljs-number%22%3E64%3C%2Fspan%3E%20bytes%20%3Cspan%20class%3D%22hljs-keyword%22%3Efrom%3C%2Fspan%3E%20%3Cspan%20class%3D%22hljs-number%22%3E172.217%3C%2Fspan%3E%3Cspan%20class%3D%22hljs-number%22%3E.16%3C%2Fspan%3E%3Cspan%20class%3D%22hljs-number%22%3E.174%3C%2Fspan%3E%3A%20icmp_seq%3D%3Cspan%20class%3D%22hljs-number%22%3E2%3C%2Fspan%3E%20ttl%3D%3Cspan%20class%3D%22hljs-number%22%3E52%3C%2Fspan%3E%20time%3D%3Cspan%20class%3D%22hljs-number%22%3E26.552%3C%2Fspan%3E%20ms%20%20%0A%3Cspan%20class%3D%22hljs-number%22%3E64%3C%2Fspan%3E%20bytes%20%3Cspan%20class%3D%22hljs-keyword%22%3Efrom%3C%2Fspan%3E%20%3Cspan%20class%3D%22hljs-number%22%3E172.217%3C%2Fspan%3E%3Cspan%20class%3D%22hljs-number%22%3E.16%3C%2Fspan%3E%3Cspan%20class%3D%22hljs-number%22%3E.174%3C%2Fspan%3E%3A%20icmp_seq%3D%3Cspan%20class%3D%22hljs-number%22%3E3%3C%2Fspan%3E%20ttl%3D%3Cspan%20class%3D%22hljs-number%22%3E52%3C%2Fspan%3E%20time%3D%3Cspan%20class%3D%22hljs-number%22%3E40.153%3C%2Fspan%3E%20ms%20%20%0A%3Cspan%20class%3D%22hljs-number%22%3E64%3C%2Fspan%3E%20bytes%20%3Cspan%20class%3D%22hljs-keyword%22%3Efrom%3C%2Fspan%3E%20%3Cspan%20class%3D%22hljs-number%22%3E172.217%3C%2Fspan%3E%3Cspan%20class%3D%22hljs-number%22%3E.16%3C%2Fspan%3E%3Cspan%20class%3D%22hljs-number%22%3E.174%3C%2Fspan%3E%3A%20icmp_seq%3D%3Cspan%20class%3D%22hljs-number%22%3E4%3C%2Fspan%3E%20ttl%3D%3Cspan%20class%3D%22hljs-number%22%3E52%3C%2Fspan%3E%20time%3D%3Cspan%20class%3D%22hljs-number%22%3E37.291%3C%2Fspan%3E%20ms%20%20%0A%3Cspan%20class%3D%22hljs-number%22%3E64%3C%2Fspan%3E%20bytes%20%3Cspan%20class%3D%22hljs-keyword%22%3Efrom%3C%2Fspan%3E%20%3Cspan%20class%3D%22hljs-number%22%3E172.217%3C%2Fspan%3E%3Cspan%20class%3D%22hljs-number%22%3E.16%3C%2Fspan%3E%3Cspan%20class%3D%22hljs-number%22%3E.174%3C%2Fspan%3E%3A%20icmp_seq%3D%3Cspan%20class%3D%22hljs-number%22%3E5%3C%2Fspan%3E%20ttl%3D%3Cspan%20class%3D%22hljs-number%22%3E52%3C%2Fspan%3E%20time%3D%3Cspan%20class%3D%22hljs-number%22%3E58.692%3C%2Fspan%3E%20ms%20%20%0A%3Cspan%20class%3D%22hljs-number%22%3E64%3C%2Fspan%3E%20bytes%20%3Cspan%20class%3D%22hljs-keyword%22%3Efrom%3C%2Fspan%3E%20%3Cspan%20class%3D%22hljs-number%22%3E172.217%3C%2Fspan%3E%3Cspan%20class%3D%22hljs-number%22%3E.16%3C%2Fspan%3E%3Cspan%20class%3D%22hljs-number%22%3E.174%3C%2Fspan%3E%3A%20icmp_seq%3D%3Cspan%20class%3D%22hljs-number%22%3E6%3C%2Fspan%3E%20ttl%3D%3Cspan%20class%3D%22hljs-number%22%3E52%3C%2Fspan%3E%20time%3D%3Cspan%20class%3D%22hljs-number%22%3E45.245%3C%2Fspan%3E%20ms%20%20%0A%3Cspan%20class%3D%22hljs-number%22%3E64%3C%2Fspan%3E%20bytes%20%3Cspan%20class%3D%22hljs-keyword%22%3Efrom%3C%2Fspan%3E%20%3Cspan%20class%3D%22hljs-number%22%3E172.217%3C%2Fspan%3E%3Cspan%20class%3D%22hljs-number%22%3E.16%3C%2Fspan%3E%3Cspan%20class%3D%22hljs-number%22%3E.174%3C%2Fspan%3E%3A%20icmp_seq%3D%3Cspan%20class%3D%22hljs-number%22%3E7%3C%2Fspan%3E%20ttl%3D%3Cspan%20class%3D%22hljs-number%22%3E52%3C%2Fspan%3E%20time%3D%3Cspan%20class%3D%22hljs-number%22%3E27.846%3C%2Fspan%3E%20ms</code>')]),e("p",[s._v("平均延时为 44ms。数据包在网络上一个来回，前面提到的处理器可以执行 8800 万次周期。")]),e("h2",{attrs:{id:"-"}},[s._v("解决方案")]),e("p",[s._v("多数操作系统都提供了某种类型的异步 IO 接口，在允许我们在处理那些不依赖于通信结果的数据之外，通信还能继续...")]),e("p",[s._v("数种方式可以达到此目的。如今的完成方式，主要是以额外的软件复杂性为代价，挖掘多线程潜力。比方说，在 Java 或 Python 中，文件读取是阻塞操作。在等待网络/硬盘通信（network/disk communication）完成时，程序无法做任何其他工作。我们能做的 —— 至少在 Java 中是如此 —— 只能是启动新的线程，然后在操作完成后通知主线程。")]),e("p",[s._v("既枯燥又复杂，但能完成任务。那 Node 是怎样的呢？好吧，因为 Node.js（更准确的说是 V8） 是单线程的，我们肯定也会遇到同样的问题。我们代码只能在一个线程中运行。")]),s._m(2),e("p",[s._v("也许你知道，有时候，在浏览器中用 "),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("setTimeout(someFunction, 0)")]),s._v(" 能够神奇地解决一些问题。可是为什么将超时时间设置为 0，将执行延迟 0ms 就能解决问题？难道和立即调用 "),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("someFunction")]),s._v(" 不是一回事吗？并非如此。")]),s._m(3),e("h2",{attrs:{id:"-"}},[s._v("调用栈")]),e("p",[s._v("调用一个函数时，返回地址（return address）、参数（arguments）、本地变量（local variables）等都会被推入栈中。如果在当前正在运行的函数中调用另一个函数，则该函数的相关内容也会以同样的方式推到栈顶。")]),e("p",[s._v("为行文简便，接下来我将使用“函数被推入栈顶”这样不太准确的表达。")]),e("p",[s._v("来看看吧！（"),e("strong",[s._v("译者注：下面的示意图中的一些地方将 "),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("square")]),s._v(" 误作 "),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("sqrt")]),s._v("，请根据代码甄别。")]),s._v("）")]),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"pre-area",attrs:{width:"0",height:"0"}},[s._v('<code class="hljs lang-javascript">%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-keyword%22%3Efunction%3C%2Fspan%3E%20%3Cspan%20class%3D%22hljs-title%22%3Emain%3C%2Fspan%3E%20(%3Cspan%20class%3D%22hljs-params%22%3E%3C%2Fspan%3E)%20%3C%2Fspan%3E%7B%0A%20%20%3Cspan%20class%3D%22hljs-keyword%22%3Econst%3C%2Fspan%3E%20hypotenuse%20%3D%20getLengthOfHypotenuse(%3Cspan%20class%3D%22hljs-number%22%3E3%3C%2Fspan%3E%2C%20%3Cspan%20class%3D%22hljs-number%22%3E4%3C%2Fspan%3E)%0A%20%20%3Cspan%20class%3D%22hljs-built_in%22%3Econsole%3C%2Fspan%3E.log(hypotenuse)%0A%7D%0A%0A%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-keyword%22%3Efunction%3C%2Fspan%3E%20%3Cspan%20class%3D%22hljs-title%22%3EgetLengthOfHypotenuse%3C%2Fspan%3E(%3Cspan%20class%3D%22hljs-params%22%3Ea%2C%20b%3C%2Fspan%3E)%20%3C%2Fspan%3E%7B%0A%20%20%3Cspan%20class%3D%22hljs-keyword%22%3Econst%3C%2Fspan%3E%20squareA%20%3D%20square(a)%0A%20%20%3Cspan%20class%3D%22hljs-keyword%22%3Econst%3C%2Fspan%3E%20squareB%20%3D%20square(b)%0A%20%20%3Cspan%20class%3D%22hljs-keyword%22%3Econst%3C%2Fspan%3E%20sumOfSquares%20%3D%20squareA%20%2B%20squareB%0A%20%20%3Cspan%20class%3D%22hljs-keyword%22%3Ereturn%3C%2Fspan%3E%20%3Cspan%20class%3D%22hljs-built_in%22%3EMath%3C%2Fspan%3E.sqrt(sumOfSquares)%20%20%0A%7D%0A%0A%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-keyword%22%3Efunction%3C%2Fspan%3E%20%3Cspan%20class%3D%22hljs-title%22%3Esquare%3C%2Fspan%3E(%3Cspan%20class%3D%22hljs-params%22%3Enumber%3C%2Fspan%3E)%20%3C%2Fspan%3E%7B%20%20%0A%20%20%3Cspan%20class%3D%22hljs-keyword%22%3Ereturn%3C%2Fspan%3E%20number%20*%20number%20%20%0A%7D%0A%0Amain()</code>')]),e("p",[s._v("首先调用 "),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("main")]),s._v(" 函数：")]),e("p",[e("img",{directives:[{name:"lazy",rawName:"v-lazy",value:"https://p.ssl.qhimg.com/t01ce56e785b8ca1925.png",expression:"`https://p.ssl.qhimg.com/t01ce56e785b8ca1925.png`"}],attrs:{alt:"The main function"}})]),e("p",[s._v("紧接着以 3 和 4 为参数，调用 "),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("getLengthOfHypotenuse")]),s._v(" 函数：")]),e("p",[e("img",{directives:[{name:"lazy",rawName:"v-lazy",value:"https://p.ssl.qhimg.com/t01638ef1f34edebd4b.png",expression:"`https://p.ssl.qhimg.com/t01638ef1f34edebd4b.png`"}],attrs:{alt:"The getLengthOfHypotenuse function"}})]),e("p",[s._v("然后是 "),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("square(a)")]),s._v("：")]),e("p",[e("img",{directives:[{name:"lazy",rawName:"v-lazy",value:"https://p.ssl.qhimg.com/t01853c10926172f492.png",expression:"`https://p.ssl.qhimg.com/t01853c10926172f492.png`"}],attrs:{alt:"The square(a) function"}})]),e("p",[e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("square(a)")]),s._v(" 返回后，从栈中弹出，其返回值赋值给 "),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("squareA")]),s._v("。然后 "),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("squareA")]),s._v(" 被添加到 "),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("getLengthOfHypotenuse")]),s._v(" 的调用帧中：")]),e("p",[e("img",{directives:[{name:"lazy",rawName:"v-lazy",value:"https://p.ssl.qhimg.com/t0131d9d440676ac6db.png",expression:"`https://p.ssl.qhimg.com/t0131d9d440676ac6db.png`"}],attrs:{alt:"Variable a"}})]),e("p",[s._v("下面计算 "),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("square(b)")]),s._v(" 也是一样：")]),e("p",[e("img",{directives:[{name:"lazy",rawName:"v-lazy",value:"https://p.ssl.qhimg.com/t01d0940a2e39afc9b8.png",expression:"`https://p.ssl.qhimg.com/t01d0940a2e39afc9b8.png`"}],attrs:{alt:"The square(b) function"}})]),e("p",[e("img",{directives:[{name:"lazy",rawName:"v-lazy",value:"https://p.ssl.qhimg.com/t01e3c678adc983fe06.png",expression:"`https://p.ssl.qhimg.com/t01e3c678adc983fe06.png`"}],attrs:{alt:"Variable b"}})]),e("p",[s._v("下一行是表达式 "),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("squareA + squareB")]),s._v(" 求值：")]),e("p",[e("img",{directives:[{name:"lazy",rawName:"v-lazy",value:"https://p.ssl.qhimg.com/t01a6f422d209f22c87.png",expression:"`https://p.ssl.qhimg.com/t01a6f422d209f22c87.png`"}],attrs:{alt:"sumOfSquares"}})]),e("p",[s._v("计算 "),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("Math.sqrt(sumOfSquares)")]),s._v(":")]),e("p",[e("img",{directives:[{name:"lazy",rawName:"v-lazy",value:"https://p.ssl.qhimg.com/t01a839e63df37022d1.png",expression:"`https://p.ssl.qhimg.com/t01a839e63df37022d1.png`"}],attrs:{alt:"Math.sqrt"}})]),e("p",[s._v("现在 "),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("getLengthOfHypotenuse")]),s._v(" 剩下的工作就是将计算的最终结果返回：")]),e("p",[e("img",{directives:[{name:"lazy",rawName:"v-lazy",value:"https://p.ssl.qhimg.com/t018965143c9066d384.png",expression:"`https://p.ssl.qhimg.com/t018965143c9066d384.png`"}],attrs:{alt:"The return function"}})]),e("p",[e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("getLengthOfHypotenuse")]),s._v(" 返回值被赋值给 "),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("main")]),s._v(" 中的 "),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("hypotenuse")]),s._v("：")]),e("p",[e("img",{directives:[{name:"lazy",rawName:"v-lazy",value:"https://p.ssl.qhimg.com/t0151eb79acb5966784.png",expression:"`https://p.ssl.qhimg.com/t0151eb79acb5966784.png`"}],attrs:{alt:"hypotenuse"}})]),e("p",[s._v("控制台打印出 "),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("hypotenuse")]),s._v("：")]),e("p",[e("img",{directives:[{name:"lazy",rawName:"v-lazy",value:"https://p.ssl.qhimg.com/t0103341d998752b217.png",expression:"`https://p.ssl.qhimg.com/t0103341d998752b217.png`"}],attrs:{alt:"The console log"}})]),e("p",[s._v("然后，"),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("main")]),s._v(" 返回，不带任何值，并从栈中弹出，栈变为空。")]),e("p",[e("img",{directives:[{name:"lazy",rawName:"v-lazy",value:"https://p.ssl.qhimg.com/t01d03e975bae0fee94.png",expression:"`https://p.ssl.qhimg.com/t01d03e975bae0fee94.png`"}],attrs:{alt:"Finally"}})]),s._m(4),e("h2",{attrs:{id:"-"}},[s._v("事件循环")]),e("p",[e("img",{directives:[{name:"lazy",rawName:"v-lazy",value:"https://p.ssl.qhimg.com/t01c3a8e7546481b4ee.gif",expression:"`https://p.ssl.qhimg.com/t01c3a8e7546481b4ee.gif`"}],attrs:{alt:"The Node.js Event Loop - cat version"}})]),e("p",[s._v("不不不，不是这种循环。 :)")]),e("p",[s._v("所以，当我们调用 "),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("setTimeout")]),s._v("、"),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("http.get")]),s._v("、"),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("process.nextTick")]),s._v(" 或 "),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("fs.readFile")]),s._v(" 这样一些东西时，到底发生了什么？V8 代码没有这些，但 Chrome WebApi 和 Node.js 的 C++ API 中有。要了解它们，我们得更好地理解执行顺序。")]),e("p",[s._v("看看一个更一般的 Node.js 应用 —— 监听 "),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("localhost:3000/")]),s._v(" 的服务器。收到请求时，服务器会在控制台上打印一些消息，请求 "),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("wttr.in/")]),s._v("，然后将接收的响应转发给请求者。")]),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"pre-area",attrs:{width:"0",height:"0"}},[s._v("<code class=\"hljs lang-javascript\">%3Cspan%20class%3D%22hljs-meta%22%3E'use%20strict'%3C%2Fspan%3E%20%0A%3Cspan%20class%3D%22hljs-keyword%22%3Econst%3C%2Fspan%3E%20express%20%3D%20%3Cspan%20class%3D%22hljs-built_in%22%3Erequire%3C%2Fspan%3E(%3Cspan%20class%3D%22hljs-string%22%3E'express'%3C%2Fspan%3E)%20%20%0A%3Cspan%20class%3D%22hljs-keyword%22%3Econst%3C%2Fspan%3E%20superagent%20%3D%20%3Cspan%20class%3D%22hljs-built_in%22%3Erequire%3C%2Fspan%3E(%3Cspan%20class%3D%22hljs-string%22%3E'superagent'%3C%2Fspan%3E)%20%20%0A%3Cspan%20class%3D%22hljs-keyword%22%3Econst%3C%2Fspan%3E%20app%20%3D%20express()%0A%0Aapp.get(%3Cspan%20class%3D%22hljs-string%22%3E'%2F'%3C%2Fspan%3E%2C%20sendWeatherOfRandomCity)%0A%0A%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-keyword%22%3Efunction%3C%2Fspan%3E%20%3Cspan%20class%3D%22hljs-title%22%3EsendWeatherOfRandomCity%3C%2Fspan%3E%20(%3Cspan%20class%3D%22hljs-params%22%3Erequest%2C%20response%3C%2Fspan%3E)%20%3C%2Fspan%3E%7B%20%20%0A%20%20getWeatherOfRandomCity(request%2C%20response)%0A%20%20sayHi()%0A%7D%0A%0A%3Cspan%20class%3D%22hljs-keyword%22%3Econst%3C%2Fspan%3E%20CITIES%20%3D%20%5B%20%20%0A%20%20%3Cspan%20class%3D%22hljs-string%22%3E'london'%3C%2Fspan%3E%2C%0A%20%20%3Cspan%20class%3D%22hljs-string%22%3E'newyork'%3C%2Fspan%3E%2C%0A%20%20%3Cspan%20class%3D%22hljs-string%22%3E'paris'%3C%2Fspan%3E%2C%0A%20%20%3Cspan%20class%3D%22hljs-string%22%3E'budapest'%3C%2Fspan%3E%2C%0A%20%20%3Cspan%20class%3D%22hljs-string%22%3E'warsaw'%3C%2Fspan%3E%2C%0A%20%20%3Cspan%20class%3D%22hljs-string%22%3E'rome'%3C%2Fspan%3E%2C%0A%20%20%3Cspan%20class%3D%22hljs-string%22%3E'madrid'%3C%2Fspan%3E%2C%0A%20%20%3Cspan%20class%3D%22hljs-string%22%3E'moscow'%3C%2Fspan%3E%2C%0A%20%20%3Cspan%20class%3D%22hljs-string%22%3E'beijing'%3C%2Fspan%3E%2C%0A%20%20%3Cspan%20class%3D%22hljs-string%22%3E'capetown'%3C%2Fspan%3E%2C%0A%5D%0A%0A%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-keyword%22%3Efunction%3C%2Fspan%3E%20%3Cspan%20class%3D%22hljs-title%22%3EgetWeatherOfRandomCity%3C%2Fspan%3E%20(%3Cspan%20class%3D%22hljs-params%22%3Erequest%2C%20response%3C%2Fspan%3E)%20%3C%2Fspan%3E%7B%20%20%0A%20%20%3Cspan%20class%3D%22hljs-keyword%22%3Econst%3C%2Fspan%3E%20city%20%3D%20CITIES%5B%3Cspan%20class%3D%22hljs-built_in%22%3EMath%3C%2Fspan%3E.floor(%3Cspan%20class%3D%22hljs-built_in%22%3EMath%3C%2Fspan%3E.random()%20*%20CITIES.length)%5D%0A%20%20superagent.get(%3Cspan%20class%3D%22hljs-string%22%3E%60wttr.in%2F%3Cspan%20class%3D%22hljs-subst%22%3E%24%7Bcity%7D%3C%2Fspan%3E%60%3C%2Fspan%3E)%0A%20%20%20%20.end(%3Cspan%20class%3D%22hljs-function%22%3E(%3Cspan%20class%3D%22hljs-params%22%3Eerr%2C%20res%3C%2Fspan%3E)%20%3D%26gt%3B%3C%2Fspan%3E%20%7B%0A%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-keyword%22%3Eif%3C%2Fspan%3E%20(err)%20%7B%0A%20%20%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-built_in%22%3Econsole%3C%2Fspan%3E.log(%3Cspan%20class%3D%22hljs-string%22%3E'O%20snap'%3C%2Fspan%3E)%0A%20%20%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-keyword%22%3Ereturn%3C%2Fspan%3E%20response.status(%3Cspan%20class%3D%22hljs-number%22%3E500%3C%2Fspan%3E).send(%3Cspan%20class%3D%22hljs-string%22%3E'There%20was%20an%20error%20getting%20the%20weather%2C%20try%20looking%20out%20the%20window'%3C%2Fspan%3E)%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-keyword%22%3Econst%3C%2Fspan%3E%20responseText%20%3D%20res.text%0A%20%20%20%20%20%20response.send(responseText)%0A%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-built_in%22%3Econsole%3C%2Fspan%3E.log(%3Cspan%20class%3D%22hljs-string%22%3E'Got%20the%20weather'%3C%2Fspan%3E)%0A%20%20%20%20%7D)%0A%0A%20%20%3Cspan%20class%3D%22hljs-built_in%22%3Econsole%3C%2Fspan%3E.log(%3Cspan%20class%3D%22hljs-string%22%3E'Fetching%20the%20weather%2C%20please%20be%20patient'%3C%2Fspan%3E)%0A%7D%0A%0A%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-keyword%22%3Efunction%3C%2Fspan%3E%20%3Cspan%20class%3D%22hljs-title%22%3EsayHi%3C%2Fspan%3E%20(%3Cspan%20class%3D%22hljs-params%22%3E%3C%2Fspan%3E)%20%3C%2Fspan%3E%7B%20%20%0A%20%20%3Cspan%20class%3D%22hljs-built_in%22%3Econsole%3C%2Fspan%3E.log(%3Cspan%20class%3D%22hljs-string%22%3E'Hi'%3C%2Fspan%3E)%0A%7D%0A%0Aapp.listen(%3Cspan%20class%3D%22hljs-number%22%3E3000%3C%2Fspan%3E)</code>")]),e("p",[s._v("请求 "),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("localhost:3000")]),s._v(" 时，除了获取天气，还有哪些内容打印出来？")]),e("p",[s._v("如果你在 Node 方面有些经验，肯定不会惊讶：在代码中，尽管调用 "),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("console.log('Fetching the weather, please be patient')")]),s._v(" 在 "),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("console.log('Got the weather')")]),s._v(" 之后，当前者会先打印出来：")]),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"pre-area",attrs:{width:"0",height:"0"}},[s._v('<code class="hljs lang-bash">Fetching%20the%20weather%2C%20please%20be%20patient%20%20%0AHi%20%20%0AGot%20the%20weather</code>')]),e("p",[s._v("发生了什么？就算 V8 是单线程的，Node 底层的 C++ API 并不是啊。这意味着，无论何时调用非阻塞的操作，Node 会在底层调用一些和 JavaScript 代码同时运行的代码。一旦该隐藏线程接收到等待的值或者抛出错误，就会传入必要参数，调用提供的回调。")]),s._m(5),e("p",[s._v("为了深入底层，我们需要引入两个新概念：事件循环（event loop）和任务队列（task queue）。")]),e("h3",{attrs:{id:"-"}},[s._v("任务队列")]),e("p",[s._v("Javascript 是单线程、事件驱动型语言。这意味着，我们可以为事件添加监听器，当某一事件触发时，监听器执行提供的回调。")]),e("p",[s._v("调用 "),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("setTimeout")]),s._v("、"),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("http.get")]),s._v(" 或 "),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("fs.readFile")]),s._v(" 时，Node.js 将这些操作发送到另外一个线程，允许 V8 继续执行代码。计时完毕或 IO/http 操作完成后，Node 还会调用回调函数。")]),e("p",[s._v("然后这些回调也可以将其他任务入列，其余亦可依此类推。这样，在处理请求时还能读取文件，并根据读取的内容发送 http 请求，而不会阻塞正在处理的其他请求。")]),e("p",[s._v("尽管如此，我们只有一个主线程加一个调用栈，所以为避免在读取那个文件时又去处理另一个请求，回调函数需要等待调用栈变空。回调函数等待执行的中间状态被称为任务队列（又称作事件队列、消息队列）。一旦主线程结束此前工作，回调函数就会在一个无限循环当中被调用，因此叫作“事件循环”。（译者注：附原文如下）")]),s._m(6),e("p",[s._v("在上一个例子中，事件循环大概如下所述：")]),e("ol",[s._m(7),s._m(8),s._m(9),e("li",[e("p",[s._v("请求到来，等待已久的事件触发，express 调用 "),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("sendWeatherOfRandomCity")]),s._v("；")])]),e("li",[e("p",[e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("sendWeatherOfRandomCity")]),s._v(" 入栈；")])]),e("li",[e("p",[e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("getWeatherOfRandomCity")]),s._v(" 被调用并入栈；")])]),e("li",[e("p",[s._v("调用 "),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("Math.floor")]),s._v(" 和 "),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("Math.random")]),s._v("，入栈、出栈，"),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("cities")]),s._v(" 中的某一个被赋值给 "),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("city")]),s._v("；")])]),e("li",[e("p",[s._v("传入 "),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("'wttr.in/${city}'")]),s._v(" 调用 "),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("superagent.get")]),s._v("，为 "),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("end")]),s._v(" 事件设置处理回调；")])]),e("li",[e("p",[s._v("发送 "),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("http://wttr.in/${city}")]),s._v(" http 请求到底层线程，继续向下执行；")])]),e("li",[e("p",[s._v("控制台打印 "),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("'Fetching the weather, please be patient'")]),s._v("，"),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("getWeatherOfRandomCity")]),s._v(" 函数返回；")])]),e("li",[e("p",[s._v("调用 "),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("sayHi")]),s._v("，控制台打印 "),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("'Hi'")]),s._v("；")])]),e("li",[e("p",[e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("sendWeatherOfRandomCity")]),s._v(" 函数返回、出栈，调用栈变空；")])]),e("li",[e("p",[s._v("等待 "),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("http://wttr.in/${city}")]),s._v(" 发送响应；")])]),e("li",[e("p",[s._v("一旦响应返回，"),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("end")]),s._v(" 事件触发；")])]),e("li",[e("p",[s._v("传给 "),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v(".end()")]),s._v(" 的匿名回调函数调用，带着其闭包内所有变量一起入栈，也就是说，其内部能够访问、修改 "),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("express, superagent, app, CITIES, request, response, city")]),s._v(" 以及我们定义的函数；")])]),e("li",[e("p",[s._v("调用 "),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("response.send()")]),s._v("，状态码为 "),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("200")]),s._v(" 或 "),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("500")]),s._v("，再次发送到底层线程，response stream 不会阻塞代码执行，匿名回调出栈。")])])]),e("p",[s._v("这样我们就能理解一开始提到的 "),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("setTimeout")]),s._v(" hack 是如何工作的。尽管将时间设置为 0，但是会延迟到当前栈和任务队列为空后执行，以允许浏览器重新绘制 UI，或 Node 处理其他请求。")]),e("h3",{attrs:{id:"microtask-macrotask"}},[s._v("Microtask 与 Macrotask")]),e("p",[s._v("实际上，不止一个任务队列，microtask（小型任务） 与 macrotask（巨型任务）各有一个任务队列。")]),e("p",[s._v("Microtask 如：")]),e("ul",[e("li",[e("p",[e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("process.nextTick")])])]),e("li",[e("p",[e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("promises")])])]),e("li",[e("p",[e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("Object.observe")])])])]),e("p",[s._v("Macrotask 如：")]),e("ul",[e("li",[e("p",[e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("setTimeout")])])]),e("li",[e("p",[e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("setInterval")])])]),e("li",[e("p",[e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("setImmediate")])])]),e("li",[e("p",[e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("I/O")])])])]),e("p",[s._v("看看下面的代码：")]),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"pre-area",attrs:{width:"0",height:"0"}},[s._v("<code class=\"hljs lang-javascript\">%3Cspan%20class%3D%22hljs-built_in%22%3Econsole%3C%2Fspan%3E.log(%3Cspan%20class%3D%22hljs-string%22%3E'script%20start'%3C%2Fspan%3E)%0A%0A%3Cspan%20class%3D%22hljs-keyword%22%3Econst%3C%2Fspan%3E%20interval%20%3D%20setInterval(%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-params%22%3E()%3C%2Fspan%3E%20%3D%26gt%3B%3C%2Fspan%3E%20%7B%20%20%0A%20%20%3Cspan%20class%3D%22hljs-built_in%22%3Econsole%3C%2Fspan%3E.log(%3Cspan%20class%3D%22hljs-string%22%3E'setInterval'%3C%2Fspan%3E)%0A%7D%2C%20%3Cspan%20class%3D%22hljs-number%22%3E0%3C%2Fspan%3E)%0A%0AsetTimeout(%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-params%22%3E()%3C%2Fspan%3E%20%3D%26gt%3B%3C%2Fspan%3E%20%7B%20%20%0A%20%20%3Cspan%20class%3D%22hljs-built_in%22%3Econsole%3C%2Fspan%3E.log(%3Cspan%20class%3D%22hljs-string%22%3E'setTimeout%201'%3C%2Fspan%3E)%0A%20%20%3Cspan%20class%3D%22hljs-built_in%22%3EPromise%3C%2Fspan%3E.resolve().then(%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-params%22%3E()%3C%2Fspan%3E%20%3D%26gt%3B%3C%2Fspan%3E%20%7B%0A%20%20%20%20%3Cspan%20class%3D%22hljs-built_in%22%3Econsole%3C%2Fspan%3E.log(%3Cspan%20class%3D%22hljs-string%22%3E'promise%203'%3C%2Fspan%3E)%0A%20%20%7D).then(%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-params%22%3E()%3C%2Fspan%3E%20%3D%26gt%3B%3C%2Fspan%3E%20%7B%0A%20%20%20%20%3Cspan%20class%3D%22hljs-built_in%22%3Econsole%3C%2Fspan%3E.log(%3Cspan%20class%3D%22hljs-string%22%3E'promise%204'%3C%2Fspan%3E)%0A%20%20%7D).then(%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-params%22%3E()%3C%2Fspan%3E%20%3D%26gt%3B%3C%2Fspan%3E%20%7B%0A%20%20%20%20setTimeout(%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-params%22%3E()%3C%2Fspan%3E%20%3D%26gt%3B%3C%2Fspan%3E%20%7B%0A%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-built_in%22%3Econsole%3C%2Fspan%3E.log(%3Cspan%20class%3D%22hljs-string%22%3E'setTimeout%202'%3C%2Fspan%3E)%0A%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-built_in%22%3EPromise%3C%2Fspan%3E.resolve().then(%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-params%22%3E()%3C%2Fspan%3E%20%3D%26gt%3B%3C%2Fspan%3E%20%7B%0A%20%20%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-built_in%22%3Econsole%3C%2Fspan%3E.log(%3Cspan%20class%3D%22hljs-string%22%3E'promise%205'%3C%2Fspan%3E)%0A%20%20%20%20%20%20%7D).then(%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-params%22%3E()%3C%2Fspan%3E%20%3D%26gt%3B%3C%2Fspan%3E%20%7B%0A%20%20%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-built_in%22%3Econsole%3C%2Fspan%3E.log(%3Cspan%20class%3D%22hljs-string%22%3E'promise%206'%3C%2Fspan%3E)%0A%20%20%20%20%20%20%7D).then(%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-params%22%3E()%3C%2Fspan%3E%20%3D%26gt%3B%3C%2Fspan%3E%20%7B%0A%20%20%20%20%20%20%20%20clearInterval(interval)%0A%20%20%20%20%20%20%7D)%0A%20%20%20%20%7D%2C%20%3Cspan%20class%3D%22hljs-number%22%3E0%3C%2Fspan%3E)%0A%20%20%7D)%0A%7D%2C%20%3Cspan%20class%3D%22hljs-number%22%3E0%3C%2Fspan%3E)%0A%0A%3Cspan%20class%3D%22hljs-built_in%22%3EPromise%3C%2Fspan%3E.resolve().then(%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-params%22%3E()%3C%2Fspan%3E%20%3D%26gt%3B%3C%2Fspan%3E%20%7B%20%20%0A%20%20%3Cspan%20class%3D%22hljs-built_in%22%3Econsole%3C%2Fspan%3E.log(%3Cspan%20class%3D%22hljs-string%22%3E'promise%201'%3C%2Fspan%3E)%0A%7D).then(%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-params%22%3E()%3C%2Fspan%3E%20%3D%26gt%3B%3C%2Fspan%3E%20%7B%0A%20%20%3Cspan%20class%3D%22hljs-built_in%22%3Econsole%3C%2Fspan%3E.log(%3Cspan%20class%3D%22hljs-string%22%3E'promise%202'%3C%2Fspan%3E)%0A%7D)</code>")]),e("p",[s._v("控制台结果如下：")]),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"pre-area",attrs:{width:"0",height:"0"}},[s._v('<code class="hljs lang-bash">script%20start%20%20%0Apromise1%20%20%0Apromise2%20%20%0AsetInterval%20%20%0AsetTimeout1%20%20%0Apromise3%20%20%0Apromise4%20%20%0AsetInterval%20%20%0AsetTimeout2%20%20%0AsetInterval%20%20%0Apromise5%20%20%0Apromise6</code>')]),s._m(10),e("p",[s._v("下图展示得更加清楚：")]),e("p",[e("img",{directives:[{name:"lazy",rawName:"v-lazy",value:"https://p.ssl.qhimg.com/t01134d053300881c3b.png",expression:"`https://p.ssl.qhimg.com/t01134d053300881c3b.png`"}],attrs:{alt:"The Node.js Event Loop"}})]),e("p",[s._v("在上面的例子中：")]),s._m(11),e("ol",[e("li",[e("p",[e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("setInterval")]),s._v(" 加入 macrotask 队列；")])]),e("li",[e("p",[e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("setTimeout 1")]),s._v(" 加入 macrotask 队列；")])]),e("li",[e("p",[e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("Promise.resolve 1")]),s._v(" 中，两个 "),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("then")]),s._v(" 加入 microtask 队列；")])]),s._m(12)]),e("p",[s._v("Macrotask queue: "),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("setInterval")]),s._v(", "),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("setTimeout 1")])]),s._m(13),e("ol",[e("li",[s._v("microtask 队列为空，"),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("setInteval")]),s._v(" 回调执行，又一个 "),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("setInterval")]),s._v(" 加入 macrotask 队列，正好位于 "),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("setTimeout 1")]),s._v(" 之后；")])]),e("p",[s._v("Macrotask queue: "),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("setTimeout 1")]),s._v(", "),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("setInterval")])]),s._m(14),e("ol",[e("li",[e("p",[s._v("microtask 队列为空，"),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("setTimeout 1")]),s._v(" 回调执行，"),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("promise 3")]),s._v(" 和 "),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("promise 4")]),s._v(" 加入 microtask 队列；")])]),e("li",[e("p",[e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("promise 3")]),s._v(" 和 "),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("promise 4")]),s._v(" 执行，"),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("setTimeout 2")]),s._v(" 加入 macrotask 队列；")])])]),e("p",[s._v("Macrotask queue: "),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("setInterval")]),s._v(", "),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("setTimeout 2")])]),s._m(15),e("ol",[e("li",[s._v("microtask 队列为空，"),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("setInteval")]),s._v(" 回调执行，另一个 "),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("setInterval")]),s._v(" 加入 macrotask 队列，正好位于 "),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("setTimeout 2")]),s._v(" 之后；")])]),e("p",[s._v("Macrotask queue: "),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("setTimeout 2")]),s._v(", "),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("setInteval")])]),e("ol",[e("li",[e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("setTimeout 2")]),s._v(" 回调执行，"),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("promise 5")]),s._v(" 和 "),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("promise 6")]),s._v(" 加入 microtask 队列；")])]),e("p",[s._v("紧接着，"),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("promise 5")]),s._v(" 和 "),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("promise 6")]),s._v(" 的处理程序会清除 interval，但奇怪的是，"),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("setInterval")]),s._v(" 还是运行了一次。不过，如果在 Chrome 中运行代码，结果和预期是一致的。")]),e("div",{staticClass:"tip"},[e("strong",[s._v("译者注")]),s._v("：笔者实际测试发现，情况可能和上面的叙述有所不同。Node v5.12 执行的结果是符合预期的。而 Chrome 53 上，反而出现一些状况，"),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("promise 4")]),s._v(" 之后，"),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("setInterval")]),s._v(" 执行了两次，原因未详，有待进一步追踪（disqus 评论被墙，我的 VPN 也没戏）。\n")]),e("p",[s._v("使用 "),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("process.nextTick")]),s._v(" 和一些嵌套回调，在也 Node 中也能修复问题：")]),e("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"pre-area",attrs:{width:"0",height:"0"}},[s._v("<code class=\"hljs lang-javascript\">%3Cspan%20class%3D%22hljs-built_in%22%3Econsole%3C%2Fspan%3E.log(%3Cspan%20class%3D%22hljs-string%22%3E'script%20start'%3C%2Fspan%3E)%0A%0A%3Cspan%20class%3D%22hljs-keyword%22%3Econst%3C%2Fspan%3E%20interval%20%3D%20setInterval(%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-params%22%3E()%3C%2Fspan%3E%20%3D%26gt%3B%3C%2Fspan%3E%20%7B%20%20%0A%20%20%3Cspan%20class%3D%22hljs-built_in%22%3Econsole%3C%2Fspan%3E.log(%3Cspan%20class%3D%22hljs-string%22%3E'setInterval'%3C%2Fspan%3E)%0A%7D%2C%20%3Cspan%20class%3D%22hljs-number%22%3E0%3C%2Fspan%3E)%0A%0AsetTimeout(%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-params%22%3E()%3C%2Fspan%3E%20%3D%26gt%3B%3C%2Fspan%3E%20%7B%20%20%0A%20%20%3Cspan%20class%3D%22hljs-built_in%22%3Econsole%3C%2Fspan%3E.log(%3Cspan%20class%3D%22hljs-string%22%3E'setTimeout%201'%3C%2Fspan%3E)%0A%20%20process.nextTick(%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-params%22%3E()%3C%2Fspan%3E%20%3D%26gt%3B%3C%2Fspan%3E%20%7B%0A%20%20%20%20%3Cspan%20class%3D%22hljs-built_in%22%3Econsole%3C%2Fspan%3E.log(%3Cspan%20class%3D%22hljs-string%22%3E'nextTick%203'%3C%2Fspan%3E)%0A%20%20%20%20process.nextTick(%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-params%22%3E()%3C%2Fspan%3E%20%3D%26gt%3B%3C%2Fspan%3E%20%7B%0A%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-built_in%22%3Econsole%3C%2Fspan%3E.log(%3Cspan%20class%3D%22hljs-string%22%3E'nextTick%204'%3C%2Fspan%3E)%0A%20%20%20%20%20%20setTimeout(%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-params%22%3E()%3C%2Fspan%3E%20%3D%26gt%3B%3C%2Fspan%3E%20%7B%0A%20%20%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-built_in%22%3Econsole%3C%2Fspan%3E.log(%3Cspan%20class%3D%22hljs-string%22%3E'setTimeout%202'%3C%2Fspan%3E)%0A%20%20%20%20%20%20%20%20process.nextTick(%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-params%22%3E()%3C%2Fspan%3E%20%3D%26gt%3B%3C%2Fspan%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-built_in%22%3Econsole%3C%2Fspan%3E.log(%3Cspan%20class%3D%22hljs-string%22%3E'nextTick%205'%3C%2Fspan%3E)%0A%20%20%20%20%20%20%20%20%20%20process.nextTick(%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-params%22%3E()%3C%2Fspan%3E%20%3D%26gt%3B%3C%2Fspan%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cspan%20class%3D%22hljs-built_in%22%3Econsole%3C%2Fspan%3E.log(%3Cspan%20class%3D%22hljs-string%22%3E'nextTick%206'%3C%2Fspan%3E)%0A%20%20%20%20%20%20%20%20%20%20%20%20clearInterval(interval)%0A%20%20%20%20%20%20%20%20%20%20%7D)%0A%20%20%20%20%20%20%20%20%7D)%0A%20%20%20%20%20%20%7D%2C%20%3Cspan%20class%3D%22hljs-number%22%3E0%3C%2Fspan%3E)%0A%20%20%20%20%7D)%0A%20%20%7D)%0A%7D)%0A%0Aprocess.nextTick(%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-params%22%3E()%3C%2Fspan%3E%20%3D%26gt%3B%3C%2Fspan%3E%20%7B%20%20%0A%20%20%3Cspan%20class%3D%22hljs-built_in%22%3Econsole%3C%2Fspan%3E.log(%3Cspan%20class%3D%22hljs-string%22%3E'nextTick%201'%3C%2Fspan%3E)%0A%20%20process.nextTick(%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-params%22%3E()%3C%2Fspan%3E%20%3D%26gt%3B%3C%2Fspan%3E%20%7B%0A%20%20%20%20%3Cspan%20class%3D%22hljs-built_in%22%3Econsole%3C%2Fspan%3E.log(%3Cspan%20class%3D%22hljs-string%22%3E'nextTick%202'%3C%2Fspan%3E)%0A%20%20%7D)%0A%7D)</code>")]),e("p",[s._v("这和上面的逻辑基本一样，只是看起来比较可怕。至少工作按照预期完成了。")]),e("h3",{attrs:{id:"-"}},[s._v("驯服异步怪兽！")]),e("p",[s._v("如前所见，在编写 Node.js 应用时，需要管理、留心两个任务队列和事件循环 —— 如果想要发挥它们全部的理力量，如果需要避免耗时任务阻塞主线程。")]),s._m(16),e("p",[s._v("最后一点建议：")]),s._m(17),e("p",[s._v("祝你搬砖愉快！如果有什么问题或想法，请在评论中提出。")])])]),s.post.prev.title||s.post.next.title?e("nav",{staticClass:"pagination"},[s.post.prev.title?e("nuxt-link",{staticClass:"prev",attrs:{to:"/post/"+s.post.prev.pathname,title:s.post.prev.title}},[s._v("« "+s._s(s.post.prev.title))]):s._e(),s.post.next.title?e("nuxt-link",{staticClass:"next",attrs:{to:"/post/"+s.post.next.pathname,title:s.post.next.title}},[s._v(s._s(s.post.next.title)+" »")]):s._e()],1):s._e(),e("gitalk",{attrs:{tags:s.tags}})],1)};t._withStripped=!0;var n={render:t,staticRenderFns:[function(){var s=this.$createElement,a=this._self._c||s;return a("p",[a("strong",[this._v("Node.js at Scale 系列章节:")])])},function(){var s=this,a=s.$createElement,e=s._self._c||a;return e("ul",[e("li",[e("p",[e("strong",[s._v("使用 npm")])]),e("ul",[e("li",[e("a",{attrs:{href:"https://blog.risingstack.com/nodejs-at-scale-npm-best-practices",target:"_blank"}},[s._v("npm 技巧与最佳实践")])]),e("li",[e("a",{attrs:{href:"https://blog.risingstack.com/nodejs-at-scale-npm-publish-tutorial",target:"_blank"}},[s._v("语义化版本和模块发布")])]),e("li",[e("a",{attrs:{href:"https://blog.risingstack.com/node-js-at-scale-module-system-commonjs-require",target:"_blank"}},[s._v("理解 Module System、CommonJS 和 require")])])])]),e("li",[e("p",[e("strong",[s._v("深入 Node.js 底层")])]),e("ul",[e("li",[s._v("Node.js 事件循环 ("),e("strong",[s._v("正是本文")]),s._v(")")]),e("li",[s._v("垃圾回收")]),e("li",[s._v("编写元素模块")])])]),e("li",[e("p",[e("strong",[s._v("Building")])]),e("ul",[e("li",[s._v("Node.js 应用结构")]),e("li",[s._v("代码整洁之道")]),e("li",[s._v("异步处理")]),e("li",[s._v("事件源（Event sourcing）")]),e("li",[s._v("命令查询与责任隔离")])])]),e("li",[e("p",[e("strong",[s._v("Testing")])]),e("ul",[e("li",[s._v("单元测试")]),e("li",[s._v("E2E 测试")])])]),e("li",[e("p",[e("strong",[s._v("生产环境的 Node.js")])]),e("ul",[e("li",[s._v("应用监控")]),e("li",[s._v("应用调试")]),e("li",[s._v("应用分析")])])]),e("li",[e("p",[e("strong",[s._v("微服务")])]),e("ul",[e("li",[s._v("请求签名（Request Signing）")]),e("li",[s._v("分布式跟踪（Distributed Tracing）")]),e("li",[s._v("API 网关（API Gateways）")])])])])},function(){var s=this.$createElement,a=this._self._c||s;return a("p",[a("strong",[this._v("编者按")]),this._v(": 这里所说的并非完全正确。Java 和 Python 都有异步接口，但使用起来要比 Node.js 麻烦得多。感谢 "),a("a",{attrs:{href:"https://disqus.com/by/keidi19/",target:"_blank"}},[this._v("Shahar")]),this._v(" 和 "),a("a",{attrs:{href:"https://twitter.com/dirkjharrington",target:"_blank"}},[this._v("Dirk Harrington")]),this._v(" 指正。")])},function(){var s=this.$createElement,a=this._self._c||s;return a("p",[this._v("首先，来看看调用栈（call stack），又简称作“栈”。我会尽量将问题简化，因为我们只需要理解调用栈的最基本概念。如果你对此已经熟悉，请直接"),a("a",{attrs:{href:"#事件循环"}},[this._v("跳到下一节吧")]),this._v("。")])},function(){var s=this.$createElement,a=this._self._c||s;return a("p",[a("strong",[this._v("注意")]),this._v("： 上面提到函数执行完毕后，本地变量从栈中弹出。这仅对 Number、String、Boolean 等基本类型的值成立。对象、数组等值位于堆（heap）中，变量只是指向它们的指针。传递的变量其实只是指针，让这些值在不同的栈帧中可变化。当函数从栈中弹出后，只有指针弹出，而实际值依然还在堆中。当对象失去作用后，由垃圾回收器释放空间。")])},function(){var s=this.$createElement,a=this._self._c||s;return a("p",[a("strong",[this._v("注意")]),this._v("： 上面所谓的“一些和 JavaScript 代码同时运行的代码”，实际上是 "),a("a",{attrs:{href:"https://github.com/libuv/libuv",target:"_blank"}},[this._v("libuv")]),this._v(" 的一部分。libuv 是处理线程池的开源库，用于处理信号，以及异步任务执行所必要的其他东西。一开始是为 Node.js 开发的，不过目前也有"),a("a",{attrs:{href:"https://github.com/libuv/libuv/wiki/Projects-that-use-libuv",target:"_blank"}},[this._v("很多其他项目")]),this._v("在使用。")])},function(){var s=this.$createElement,a=this._self._c||s;return a("blockquote",[a("p",[this._v("However, we only have one main thread and one call-stack, so in case there is another request being served when the said file is read, its callback will need to wait for the stack to become empty. The limbo where callbacks are waiting for their turn to be executed is called the task queue (or event queue, or message queue). Callbacks are being called in an infinite loop whenever the main thread has finished its previous task, hence the name 'event loop'.")])])},function(){var s=this.$createElement,a=this._self._c||s;return a("li",[a("p",[this._v("express 为“request”事件注册了一个处理程序，请求 “/” 时会被调用；")])])},function(){var s=this.$createElement,a=this._self._c||s;return a("li",[a("p",[this._v("跳过函数，开始监听 3000 端口；")])])},function(){var s=this.$createElement,a=this._self._c||s;return a("li",[a("p",[this._v("调用栈为空，等待“request”事件触发；")])])},function(){var s=this.$createElement,a=this._self._c||s;return a("p",[this._v("按照 "),a("a",{attrs:{href:"https://html.spec.whatwg.org/multipage/webappapis.html#task-queue",target:"_blank"}},[this._v("WHATWG")]),this._v(" 规范，每一次事件循环（one cycle of the event loop），只处理一个 (macro)task。待该 macrotask 完成后，所有的 microtask 会在同一次循环中处理。处理这些 microtask 时，还可以将更多的 microtask 入队，它们会一一执行，直到整个 microtask 队列处理完。")])},function(){var s=this.$createElement,a=this._self._c||s;return a("p",[a("strong",[this._v("Cycle 1:")])])},function(){var s=this.$createElement,a=this._self._c||s;return a("li",[a("p",[this._v("调用栈变空，microtask 执行。")])])},function(){var s=this.$createElement,a=this._self._c||s;return a("p",[a("strong",[this._v("Cycle 2:")])])},function(){var s=this.$createElement,a=this._self._c||s;return a("p",[a("strong",[this._v("Cycle 3:")])])},function(){var s=this.$createElement,a=this._self._c||s;return a("p",[a("strong",[this._v("Cycle 4:")])])},function(){var s=this.$createElement,a=this._self._c||s;return a("p",[this._v("事件循环的概念一开始可能不太好掌握，一旦掌握之后就再也离不开了。可能导致回调地狱的延续传递风格看起来很丑，不过我们有 Promise，很快还有 async-await 在手... 在等待 async-await 的时候，还可以使用 "),a("a",{attrs:{href:"https://github.com/tj/co",target:"_blank"}},[this._v("co")]),this._v("、"),a("a",{attrs:{href:"http://koajs.com/",target:"_blank"}},[this._v("koa")]),this._v(" 这些工具。")])},function(){var s=this.$createElement,a=this._self._c||s;return a("p",[this._v("了解了 Node.js 和 V8 如何处理长时间任务，可以开始尝试使用。你之前可能听说过，应当将耗时循环放入任务队列。可以手动去做，或者借助 "),a("a",{attrs:{href:"http://caolan.github.io/async/",target:"_blank"}},[this._v("async.js")]),this._v("。")])}]};a.a=n}});
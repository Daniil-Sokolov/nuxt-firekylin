webpackJsonp([63],{"5saX":function(s,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var e=a("xlnZ"),n=a("AniA"),r=a("VU/8")(e.a,n.a,!1,null,null,null);r.options.__file="pages/post/fun-hacks-faster-content.vue",t.default=r.exports},AniA:function(s,t,a){"use strict";var e=function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("div",{attrs:{id:"page-post"}},[a("article",{staticClass:"post detail"},[a("div",{staticClass:"meta"},[a("div",{staticClass:"date"},[s._v(s._s(s.post.create_time))])]),a("h1",{staticClass:"title"},[s._v(s._s(s.post.title))]),a("div",{staticClass:"entry-content"},[s.post.translation?a("blockquote",[a("p",{staticStyle:{"white-space":"nowrap",overflow:"hidden","text-overflow":"ellipsis"}},[s._v("\n        原文作者: "),a("a",{attrs:{href:s.post.translation.social,target:"_blank"}},[s._v(s._s(s.post.translation.author))]),a("br"),s._v("\n        原文地址: "),a("a",{attrs:{href:s.post.translation.from}},[s._v(s._s(s.post.translation.from))]),a("br"),s._v("\n        译文地址: "),a("a",{attrs:{href:s.post_url}},[s._v(s._s(s.post_url))]),a("br"),s._v("\n        本文由 "),a("a",{attrs:{href:this.$config.site_url}},[s._v(s._s(this.$config.site_owner))]),s._v(" 翻译，转载请保留此声明。"),a("br"),s._v("\n        著作权属于原作者，本译文仅用于学习、研究和交流目的，请勿用于商业目的。\n        ")])]):s._e(),s._m(0),a("p",[s._v("点击链接的同时复制链接并在新的 tab 页中打开。可以看到，尽管先点击的是链接，但渲染更快的却是新 tab 中打开的页面。")]),a("h2",{attrs:{id:"-show-them-what-you-got-"}},[s._v("有一说一（Show them what you got）")]),a("p",[s._v("页面加载的时候，浏览器会接收网络数据流，并将其输出（pipe）给 HTML 解析器，HTML 解析器再将数据输出到文档。这意味着，页面是边加载边渲染的。对于一个 100k 的页面来说，浏览器很可能在接收到 20k 数据的时候就开始渲染出一些可用内容了。")]),a("p",[s._v("这个伟大又古老的特性，常常被开发者们有意无意地忽略了。多数提高加载性能的建议都归结于一点，即“展示你所拿到的东西” —— 别怕，千万不要傻傻等待一切加载完成之后再去展示内容。")]),a("p",[s._v("GitHub 当然是关注性能的，所以他们使用服务端渲染。但在同一个 tab 下浏览页面时，他们用 JavaScript 重新实现了导航（navigation）功能，类似下面这样：")]),a("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"pre-area",attrs:{width:"0",height:"0"}},[s._v("<code class=\"hljs lang-javascript\">%3Cspan%20class%3D%22hljs-comment%22%3E%2F%2F%20%E2%80%A6%E4%B8%80%E5%A0%86%E9%87%8D%E6%96%B0%E5%AE%9E%E7%8E%B0%E6%B5%8F%E8%A7%88%E5%99%A8%E5%AF%BC%E8%88%AA%E5%8A%9F%E8%83%BD%E4%BB%A3%E7%A0%81%E2%80%A6%3C%2Fspan%3E%0A%3Cspan%20class%3D%22hljs-keyword%22%3Econst%3C%2Fspan%3E%20response%20%3D%20%3Cspan%20class%3D%22hljs-keyword%22%3Eawait%3C%2Fspan%3E%20fetch(%3Cspan%20class%3D%22hljs-string%22%3E'page-data.inc'%3C%2Fspan%3E)%3B%0A%3Cspan%20class%3D%22hljs-keyword%22%3Econst%3C%2Fspan%3E%20html%20%3D%20%3Cspan%20class%3D%22hljs-keyword%22%3Eawait%3C%2Fspan%3E%20response.text()%3B%0A%3Cspan%20class%3D%22hljs-built_in%22%3Edocument%3C%2Fspan%3E.querySelector(%3Cspan%20class%3D%22hljs-string%22%3E'.content'%3C%2Fspan%3E).innerHTML%20%3D%20html%3B%0A%3Cspan%20class%3D%22hljs-comment%22%3E%2F%2F%20%E2%80%A6%E5%8A%A0%E8%BD%BD%E6%9B%B4%E5%A4%9A%E9%87%8D%E6%96%B0%E5%AE%9E%E7%8E%B0%E5%AF%BC%E8%88%AA%E5%8A%9F%E8%83%BD%E7%9A%84%E4%BB%A3%E7%A0%81%E2%80%A6%3C%2Fspan%3E</code>")]),a("p",[s._v("这违反了规则，因为在 "),a("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("page-data.inc")]),s._v(" 下载完成之前什么事情都没干。而服务端渲染版完全不会这样囤积内容，其内容是流式的，这样就要快得多了。就 Github 的客户端渲染来说，很多 JavaScript 代码完全减慢了渲染过程。")]),a("p",[s._v("这里我仅仅只是拿 Github 举例子 —— 这种反模式在单页应用中比比皆是。")]),a("p",[s._v("在页面之内切换内容可能确实有些好处，特别是存在大量脚本的情况下，无需重新执行全部脚本即可更新内容。但我们能否在不放弃流的情况下完成这样的工作呢？我曾经常说 JavaScript 没有办法对流进行解析，但其实还是有的……")]),a("h2",{attrs:{id:"iframe-document-write-"}},[s._v("iframe 和 document.write 大法")]),a("p",[a("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("iframe")]),s._v(" 早已跻身圈内最臭黑科技之列。但下面这个办法就使用了 "),a("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("iframe")]),s._v(" 和 "),a("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("document.write()")]),s._v("，这样我们就能将内容以流的形式添加到页面中了。示例如下：")]),a("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"pre-area",attrs:{width:"0",height:"0"}},[s._v("<code class=\"hljs lang-javascript\">%3Cspan%20class%3D%22hljs-comment%22%3E%2F%2F%20%E5%88%9B%E5%BB%BA%20iframe%3A%3C%2Fspan%3E%0A%3Cspan%20class%3D%22hljs-keyword%22%3Econst%3C%2Fspan%3E%20iframe%20%3D%20%3Cspan%20class%3D%22hljs-built_in%22%3Edocument%3C%2Fspan%3E.createElement(%3Cspan%20class%3D%22hljs-string%22%3E'iframe'%3C%2Fspan%3E)%3B%0A%0A%3Cspan%20class%3D%22hljs-comment%22%3E%2F%2F%20%E6%B7%BB%E5%8A%A0%E5%88%B0%20document%20%E4%B8%AD%20(%E8%AE%B0%E5%BE%97%E9%9A%90%E8%97%8F%E8%B5%B7%E6%9D%A5)%3A%3C%2Fspan%3E%0Aiframe.style.display%20%3D%20%3Cspan%20class%3D%22hljs-string%22%3E'none'%3C%2Fspan%3E%3B%0A%3Cspan%20class%3D%22hljs-built_in%22%3Edocument%3C%2Fspan%3E.body.appendChild(iframe)%3B%0A%0A%3Cspan%20class%3D%22hljs-comment%22%3E%2F%2F%20%E7%AD%89%E5%BE%85%20iframe%20%E5%8A%A0%E8%BD%BD%3A%3C%2Fspan%3E%0Aiframe.onload%20%3D%20%3Cspan%20class%3D%22hljs-function%22%3E%3Cspan%20class%3D%22hljs-params%22%3E()%3C%2Fspan%3E%20%3D%26gt%3B%3C%2Fspan%3E%20%7B%0A%20%20%3Cspan%20class%3D%22hljs-comment%22%3E%2F%2F%20%E5%BF%BD%E7%95%A5%E5%85%B6%E4%BB%96%20onload%20%E6%93%8D%E4%BD%9C%3A%3C%2Fspan%3E%0A%20%20iframe.onload%20%3D%20%3Cspan%20class%3D%22hljs-literal%22%3Enull%3C%2Fspan%3E%3B%0A%20%20%3Cspan%20class%3D%22hljs-comment%22%3E%2F%2F%20%E6%B7%BB%E5%8A%A0%E4%B8%80%E4%B8%AA%E8%99%9A%E6%8B%9F%E6%A0%87%E7%AD%BE%3A%3C%2Fspan%3E%0A%20%20iframe.contentDocument.write(%3Cspan%20class%3D%22hljs-string%22%3E'%26lt%3Bstreaming-element%26gt%3B'%3C%2Fspan%3E)%3B%0A%20%20%3Cspan%20class%3D%22hljs-comment%22%3E%2F%2F%20%E5%BC%95%E7%94%A8%E8%AF%A5%E5%85%83%E7%B4%A0%3A%3C%2Fspan%3E%0A%20%20%3Cspan%20class%3D%22hljs-keyword%22%3Econst%3C%2Fspan%3E%20streamingElement%20%3D%20iframe.contentDocument.querySelector(%3Cspan%20class%3D%22hljs-string%22%3E'streaming-element'%3C%2Fspan%3E)%3B%0A%20%20%3Cspan%20class%3D%22hljs-comment%22%3E%2F%2F%20%E5%B0%86%E8%AF%A5%E5%85%83%E7%B4%A0%E4%BB%8E%20iframe%20%E4%B8%AD%E5%8F%96%E5%87%BA%EF%BC%8C%E5%B9%B6%E6%B7%BB%E5%8A%A0%E5%88%B0%E6%96%87%E6%A1%A3%E4%B8%AD%3A%3C%2Fspan%3E%0A%20%20%3Cspan%20class%3D%22hljs-built_in%22%3Edocument%3C%2Fspan%3E.body.appendChild(streamingElement)%3B%0A%20%20%3Cspan%20class%3D%22hljs-comment%22%3E%2F%2F%20%E5%86%99%E5%85%A5%E4%B8%80%E4%BA%9B%E5%86%85%E5%AE%B9%20%E2%80%94%E2%80%94%20%E8%BF%99%E9%87%8C%E5%BA%94%E8%AF%A5%E6%98%AF%E5%BC%82%E6%AD%A5%E7%9A%84%3A%3C%2Fspan%3E%0A%20%20iframe.contentDocument.write(%3Cspan%20class%3D%22hljs-string%22%3E'%26lt%3Bp%26gt%3BHello!%26lt%3B%2Fp%26gt%3B'%3C%2Fspan%3E)%3B%0A%20%20%3Cspan%20class%3D%22hljs-comment%22%3E%2F%2F%20%E7%BB%A7%E7%BB%AD%E5%86%99%E5%85%A5%E5%86%85%E5%AE%B9%EF%BC%8C%E7%9B%B4%E5%88%B0%E5%AE%8C%E6%88%90%3A%3C%2Fspan%3E%0A%20%20iframe.contentDocument.write(%3Cspan%20class%3D%22hljs-string%22%3E'%26lt%3B%2Fstreaming-element%26gt%3B'%3C%2Fspan%3E)%3B%0A%20%20iframe.contentDocument.close()%3B%0A%7D%3B%0A%0A%3Cspan%20class%3D%22hljs-comment%22%3E%2F%2F%20%20iframe%20%E5%88%9D%E5%A7%8B%E5%8C%96%3C%2Fspan%3E%0Aiframe.src%20%3D%20%3Cspan%20class%3D%22hljs-string%22%3E''%3C%2Fspan%3E%3B</code>")]),a("p",[s._v("虽然 "),a("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("Hello!")]),s._v(" 是写到 iframe 中的，但它却出现在了父级的 document 中！这是因为"),a("a",{attrs:{href:"https://html.spec.whatwg.org/multipage/syntax.html#parsing",target:"_blank"}},[s._v("解析器")]),s._v("维护了一个"),a("a",{attrs:{href:"https://html.spec.whatwg.org/multipage/syntax.html#stack-of-open-elements",target:"_blank"}},[s._v("敞开元素栈（stack of open elements）")]),s._v("，新创建的元素会被压入栈中。就算我们把 "),a("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("<streaming-element/>")]),s._v(" 元素移出到 iframe 外面也不影响，就是这么任性。")]),a("p",[s._v("此外，这种技术处理起 HTML 来，要比 "),a("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("innerHTML")]),s._v(" 更接近标准的页面加载解析器。尤其是脚本依然会被下载，并在父级文档的上下文中执行 —— 只是在 Firefox 中完全不会执行，"),a("del",[s._v("但我认为这是个 bug")]),a("strong",[s._v("更新：")]),s._v(" 其实"),a("a",{attrs:{href:"https://html.spec.whatwg.org/multipage/syntax.html#scripts-that-modify-the-page-as-it-is-being-parsed",target:"_blank"}},[s._v("脚本根本不应该执行")]),s._v("（感谢 "),a("a",{attrs:{href:"https://twitter.com/zcorpan/status/806150847184928768",target:"_blank"}},[s._v("Simon Pieters 指出这一点")]),s._v("），但 Edge、Safari、Chrome 都这么干。")]),a("p",[s._v("接下来我们只需要从服务端获取 HTML 数据流，每当一个部分的数据到达的时候，就调用 "),a("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("iframe.contentDocument.write()")]),s._v("。流式传输和 "),a("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("fetch()")]),s._v(" 搭配起来会更好，但为了支持 Safari，我们还是"),a("a",{attrs:{href:"https://github.com/jakearchibald/streaming-html/blob/master/streaming-iframe.js",target:"_blank"}},[s._v("使用 XHR 来 hack")]),s._v(" 一下吧。")]),s._m(1),a("p",[a("img",{directives:[{name:"lazy",rawName:"v-lazy",value:"https://ww3.sinaimg.cn/large/006tNbRwly1ff1n52arbtj31kw0e8q46.jpg",expression:"`https://ww3.sinaimg.cn/large/006tNbRwly1ff1n52arbtj31kw0e8q46.jpg`"}],attrs:{alt:""}})]),s._m(2),s._m(3),a("p",[s._v("上面的方法对 Github 来说还是有效的，因为它的服务器返回的是 HTML。如果你使用的是框架，由框架自己管理 DOM 的展示，那可能就麻烦一些了。这种情况下可以看看下面这个次优选项：")]),a("h2",{attrs:{id:"-json-newline-delimited-json-"}},[s._v("换行符分隔的 JSON（Newline-delimited JSON）")]),s._m(4),a("p",[s._v("所以与其传输下面这样一大块 JSON 数据：")]),a("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"pre-area",attrs:{width:"0",height:"0"}},[s._v('<code class="hljs lang-javascript">%7B%0A%20%20%3Cspan%20class%3D%22hljs-string%22%3E%22Comments%22%3C%2Fspan%3E%3A%20%5B%0A%20%20%20%20%7B%3Cspan%20class%3D%22hljs-string%22%3E%22author%22%3C%2Fspan%3E%3A%20%3Cspan%20class%3D%22hljs-string%22%3E%22Alex%22%3C%2Fspan%3E%2C%20%3Cspan%20class%3D%22hljs-string%22%3E%22body%22%3C%2Fspan%3E%3A%20%3Cspan%20class%3D%22hljs-string%22%3E%22%E2%80%A6%22%3C%2Fspan%3E%7D%2C%0A%20%20%20%20%7B%3Cspan%20class%3D%22hljs-string%22%3E%22author%22%3C%2Fspan%3E%3A%20%3Cspan%20class%3D%22hljs-string%22%3E%22Jake%22%3C%2Fspan%3E%2C%20%3Cspan%20class%3D%22hljs-string%22%3E%22body%22%3C%2Fspan%3E%3A%20%3Cspan%20class%3D%22hljs-string%22%3E%22%E2%80%A6%22%3C%2Fspan%3E%7D%0A%20%20%5D%0A%7D</code>')]),a("p",[s._v("还不如像下面这样一行输出一个 JSON 对象：")]),a("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"pre-area",attrs:{width:"0",height:"0"}},[s._v('<code class="hljs lang-javascript">%7B%3Cspan%20class%3D%22hljs-string%22%3E%22author%22%3C%2Fspan%3E%3A%20%3Cspan%20class%3D%22hljs-string%22%3E%22Alex%22%3C%2Fspan%3E%2C%20%3Cspan%20class%3D%22hljs-string%22%3E%22body%22%3C%2Fspan%3E%3A%20%3Cspan%20class%3D%22hljs-string%22%3E%22%E2%80%A6%22%3C%2Fspan%3E%7D%0A%7B%3Cspan%20class%3D%22hljs-string%22%3E%22author%22%3C%2Fspan%3E%3A%20%3Cspan%20class%3D%22hljs-string%22%3E%22Jake%22%3C%2Fspan%3E%2C%20%3Cspan%20class%3D%22hljs-string%22%3E%22body%22%3C%2Fspan%3E%3A%20%3Cspan%20class%3D%22hljs-string%22%3E%22%E2%80%A6%22%3C%2Fspan%3E%7D</code>')]),s._m(5),a("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"pre-area",attrs:{width:"0",height:"0"}},[s._v("<code class=\"hljs lang-javascript\">%3Cspan%20class%3D%22hljs-comment%22%3E%2F%2F%20%E5%9C%A8%202017%20%E5%B9%B4%E7%9A%84%E6%9F%90%E4%B8%AA%E6%97%B6%E5%80%99%E5%8F%AF%E8%83%BD%E4%BC%9A%E6%98%AF%E8%BF%99%E6%A0%B7%EF%BC%9A%3C%2Fspan%3E%0A%3Cspan%20class%3D%22hljs-keyword%22%3Econst%3C%2Fspan%3E%20response%20%3D%20%3Cspan%20class%3D%22hljs-keyword%22%3Eawait%3C%2Fspan%3E%20fetch(%3Cspan%20class%3D%22hljs-string%22%3E'comments.ndjson'%3C%2Fspan%3E)%3B%0A%3Cspan%20class%3D%22hljs-keyword%22%3Econst%3C%2Fspan%3E%20comments%20%3D%20response.body%0A%20%20%3Cspan%20class%3D%22hljs-comment%22%3E%2F%2F%20%E4%BB%8E%E5%AD%97%E8%8A%82%E5%88%B0%E6%96%87%E6%9C%AC%3A%3C%2Fspan%3E%0A%20%20.pipeThrough(%3Cspan%20class%3D%22hljs-keyword%22%3Enew%3C%2Fspan%3E%20TextDecoder())%0A%20%20%3Cspan%20class%3D%22hljs-comment%22%3E%2F%2F%20%E4%B8%80%E7%9B%B4%E7%BC%93%E5%86%B2%EF%BC%8C%E7%9B%B4%E5%88%B0%E9%81%87%E5%88%B0%E6%8D%A2%E8%A1%8C%E7%AC%A6%3A%3C%2Fspan%3E%0A%20%20.pipeThrough(splitStream(%3Cspan%20class%3D%22hljs-string%22%3E'%5Cn'%3C%2Fspan%3E))%0A%20%20%3Cspan%20class%3D%22hljs-comment%22%3E%2F%2F%20%E5%B0%86%E5%86%85%E5%AE%B9%E5%9D%97%E8%A7%A3%E6%9E%90%E4%B8%BAJSON%3A%3C%2Fspan%3E%0A%20%20.pipeThrough(parseJSON())%3B%0A%0A%3Cspan%20class%3D%22hljs-keyword%22%3Efor%3C%2Fspan%3E%20%3Cspan%20class%3D%22hljs-keyword%22%3Eawait%3C%2Fspan%3E%20(%3Cspan%20class%3D%22hljs-keyword%22%3Econst%3C%2Fspan%3E%20comment%20%3Cspan%20class%3D%22hljs-keyword%22%3Eof%3C%2Fspan%3E%20comments)%20%7B%0A%20%20%3Cspan%20class%3D%22hljs-comment%22%3E%2F%2F%20%E5%A4%84%E7%90%86%E6%AF%8F%E6%9D%A1%E8%AF%84%E8%AE%BA%EF%BC%8C%E5%B9%B6%E5%B0%86%E5%85%B6%E6%B7%BB%E5%8A%A0%E5%88%B0%E9%A1%B5%E9%9D%A2%3A%3C%2Fspan%3E%0A%20%20%3Cspan%20class%3D%22hljs-comment%22%3E%2F%2F%20(%E4%B8%8D%E7%AE%A1%E4%BD%A0%E4%BD%BF%E7%94%A8%E7%9A%84%E6%98%AF%E4%BB%80%E4%B9%88%E6%A8%A1%E6%9D%BF%E6%88%96%E8%99%9A%E6%8B%9F%20DOM)%3C%2Fspan%3E%0A%20%20addCommentToPage(comment)%3B%0A%7D</code>")]),a("p",[s._v("在上面的代码中，"),a("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("splitStream")]),s._v(" 和 "),a("textarea",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}],staticClass:"codespan",attrs:{width:"0",height:"0"}},[s._v("parseJSON")]),s._v(" 是"),a("a",{attrs:{href:"https://gist.github.com/jakearchibald/c2052ef298459355963b8cfb79c71d1c",target:"_blank"}},[s._v("可复用变换流（reusable transform streams）")]),s._v("。与此同时，为了实现最大程度的兼容，我们可以"),a("a",{attrs:{href:"https://github.com/jakearchibald/streaming-html/blob/master/xhr-ndjson.js",target:"_blank"}},[s._v("使用 XHR 进行 hack")]),s._v("。")]),s._m(6),a("p",[a("img",{directives:[{name:"lazy",rawName:"v-lazy",value:"https://ww3.sinaimg.cn/large/006tNbRwly1ff1noprcsfj31kw0iqjt2.jpg",expression:"`https://ww3.sinaimg.cn/large/006tNbRwly1ff1noprcsfj31kw0iqjt2.jpg`"}],attrs:{alt:""}})]),s._m(7),s._m(8),a("h2",{attrs:{id:"-"}},[s._v("单页应用？别着急")]),a("p",[s._v("如前所述，Github 使用了大量的代码，然而却带来这样的性能问题。在客户端重新实现导航功能是困难的，如果你需要改变页面中的大块内容，这么做有可能并不值得。")]),s._m(9),a("p",[a("img",{directives:[{name:"lazy",rawName:"v-lazy",value:"https://ww2.sinaimg.cn/large/006tNbRwly1ff1nxa5c4pj31kw0f1t9w.jpg",expression:"`https://ww2.sinaimg.cn/large/006tNbRwly1ff1nxa5c4pj31kw0f1t9w.jpg`"}],attrs:{alt:""}})]),s._m(10),a("p",[s._v("打开一个简单的没有使用 JavaScript 浏览器导航的服务端渲染页面的速度差不多是一样的。但除去评论列表，测试页面实在太过简单。如果在不同页面之间存在有大量重复的复杂内容（主要是指可怕的广告脚本），结果可能因实际情况而有差异，但一定要记得进行测试！很可能你编写了一大堆代码，然而只能带来少的可怜的提升，甚至还可能减慢速度。")]),s._m(11)])]),s.post.prev.title||s.post.next.title?a("nav",{staticClass:"pagination"},[s.post.prev.title?a("nuxt-link",{staticClass:"prev",attrs:{to:"/post/"+s.post.prev.pathname,title:s.post.prev.title}},[s._v("« "+s._s(s.post.prev.title))]):s._e(),s.post.next.title?a("nuxt-link",{staticClass:"next",attrs:{to:"/post/"+s.post.next.pathname,title:s.post.next.title}},[s._v(s._s(s.post.next.title)+" »")]):s._e()],1):s._e(),a("gitalk",{attrs:{tags:s.tags}})],1)};e._withStripped=!0;var n={render:e,staticRenderFns:[function(){var s=this.$createElement,t=this._self._c||s;return t("p",[this._v("数周前，在伦敦 Heathrow 机场等飞机的空闲中，我顺便处理了一些工作上的事情。不经意间发现 Github 在性能方面的一些问题，颇为诧异。通过新 tab 打开的页面，其加载速度竟然比直接点击链接打开的页面要快。不信请看视频（译者注：可能需要科学上网）："),t("a",{attrs:{href:"https://www.youtube.com/watch?v=4zG0AZRZD6Q",target:"_blank"}},[this._v("GitHub link click vs new tab")]),this._v("。")])},function(){var s=this.$createElement,t=this._self._c||s;return t("p",[this._v("我已经写好了一个 demo，可以拿来"),t("a",{attrs:{href:"https://jakearchibald.github.io/streaming-html/",target:"_blank"}},[this._v("和 Github 进行对比")]),this._v("。下面是在 3G 网络下的测试结果：")])},function(){var s=this.$createElement,t=this._self._c||s;return t("p",[t("a",{attrs:{href:"https://www.webpagetest.org/video/compare.php?tests=161206_N2_FJG-r,161206_JP_FPV-r:5-c:0",target:"_blank"}},[this._v("点击这里查看原始测试数据")]),this._v("。")])},function(){var s=this.$createElement,t=this._self._c||s;return t("p",[this._v("使用 iframe 进行流式渲染，页面加载速度提高了 "),t("strong",[this._v("1.5 s")]),this._v("。头像也提前半秒钟加载完成 —— 流式渲染意味着浏览器可以更早发现它们，并与内容一起并行下载。")])},function(){var s=this.$createElement,t=this._self._c||s;return t("p",[this._v("许多网站使用 JSON 驱动动态内容。何其不幸，JSON 并不是一种对流友好的格式。尽管也有"),t("a",{attrs:{href:"https://github.com/creationix/jsonparse",target:"_blank"}},[this._v("流式 JSON 解析器")]),this._v("，可用起来却并不那么简单。")])},function(){var s=this.$createElement,t=this._self._c||s;return t("p",[this._v("这种被称为 “换行符分隔的 JSON” 是有标准的："),t("a",{attrs:{href:"http://specs.okfnlabs.org/ndjson/",target:"_blank"}},[this._v("ndjson")]),this._v("。给上面的内容写一个解析器就要简单多了。到了 2017 年，我们也许可以使用一系列组合变换流（composable transform streams）来描述（译者注：本文写作于 2016 年 12 月）：")])},function(){var s=this.$createElement,t=this._self._c||s;return t("p",[this._v("我再次新建了一个"),t("a",{attrs:{href:"https://jakearchibald.github.io/streaming-html/",target:"_blank"}},[this._v("对比的 demo")]),this._v("，下面是 3G 网络下的结果：")])},function(){var s=this.$createElement,t=this._self._c||s;return t("p",[t("a",{attrs:{href:"https://www.webpagetest.org/video/compare.php?tests=161206_X9_FNG-r,161206_V7_FPJ-r:1-c:0",target:"_blank"}},[this._v("点击这里查看原始测试数据")]),this._v("。")])},function(){var s=this.$createElement,t=this._self._c||s;return t("p",[this._v("与常规 JSON 相比，ND-JSON "),t("strong",[this._v("提前 1.5s")]),this._v(" 将内容渲染到页面上，尽管速度不如 iframe 方法那么快。在创建元素之前，必须等待完整的 JSON 对象出现。如果你的 JSON 文件体量巨大，可能会陷入对流的企盼之中。")])},function(){var s=this.$createElement,t=this._self._c||s;return t("p",[this._v("可以拿我们的尝试与"),t("a",{attrs:{href:"https://jakearchibald.github.io/streaming-html/",target:"_blank"}},[this._v("简单浏览器导航")]),this._v("进行对比：")])},function(){var s=this.$createElement,t=this._self._c||s;return t("p",[t("a",{attrs:{href:"https://www.webpagetest.org/video/compare.php?tests=161206_JP_FPV-r,161206_V7_FPJ-r,161206_8Y_FN3-r:8-c:0",target:"_blank"}},[this._v("点击这里查看原始测试数据")]),this._v("。")])},function(){var s=this.$createElement,t=this._self._c||s;return t("p",[this._v("鸣谢 "),t("a",{attrs:{href:"https://twitter.com/ElliottZ?s=09",target:"_blank"}},[this._v("Elliott Sprehn")]),this._v(" 关于 HTML 解析器工作原理的赐教！")])}]};t.a=n},xlnZ:function(s,t,a){"use strict";var e={title:"[译] 内容加速黑科技趣谈",description:"内容加速黑科技趣谈",keywords:"翻译,JavaScript,性能",pathname:"fun-hacks-faster-content",translation:{author:"@Jake Archibald",social:"https://jakearchibald.com/",from:"https://jakearchibald.com/2016/fun-hacks-faster-content/"},create_time:"2017-04-28",prev:{title:"Facebook 开源代码优化工具 Prepack",pathname:"prepack"},next:{title:"[译] Emoji.prototype.length  —— Unicode 字符那些事儿",pathname:"unicode-javascript-and-the-emoji-family"}};t.a={head:function(){return{title:e.title,meta:[{name:"keywords",content:e.keywords||""},{name:"description",content:e.description}]}},data:function(){return{post:e,post_url:this.$config.site_url+"/post/"+e.pathname,tags:e.tags}},mounted:function(){this.$fixCode()}}}});